"method","loc","cyclo","calls","nbd","param"
"me.umov.chart.model.Environment.equals(Object obj)",20,10,4,1,1
"me.umov.chart.controller.ApiController.chartLoaded(Chart chart)",22,5,8,2,1
"me.umov.chart.helper.TokenGeneratorHelper.generateWidgetToken(Long clientId, WidgetType widgetType, List<OnlineFilter> filters, CustomColumns customColumns, Long transactionId)",23,5,16,1,5
"me.umov.chart.util.Miscellaneous.getRandomString(final int length)",22,5,8,1,1
"me.umov.chart.model.column.CustomColumns.getActivityFields()",6,4,4,1,0
"me.umov.chart.controller.WidgetController.widget(WidgetType widgetType)",13,4,4,0,1
"me.umov.chart.controller.ApiController.getWidgetTransactionId(CacheType type, String token)",10,3,2,2,2
"me.umov.chart.interceptor.AuthenticationInterceptor.intercept(InterceptorStack stack, ResourceMethod method, Object resourceInstance)",20,3,9,1,3
"me.umov.chart.model.Environment.hashCode()",7,3,2,1,0
"me.umov.chart.dao.AbstractDaoMock.containsCriteria(List<Criterion> criteriaList, String criteria)",6,3,2,1,2
"me.umov.chart.model.OnlineFilter.compareTo(OnlineFilter o)",9,3,1,0,1
"me.umov.chart.controller.ApiController.widgetApi(WidgetType widgetType, List<OnlineFilter> filter, CustomColumns customColumns, Long transactionId)",13,2,7,2,4
"me.umov.chart.service.ChartAuthenticationService.authenticateByAuthCode(String authenticationCode)",12,2,9,2,1
"me.umov.chart.controller.ApiController.cleanCache(CacheType type, String token)",12,2,6,2,2
"me.umov.chart.controller.ApiController.delete(CacheType type, String token)",11,2,5,2,2
"me.umov.chart.service.ChartAuthenticationService.createToken(Long clientId, Long agentId)",10,2,7,2,2
"me.umov.chart.controller.ApiController.create(CacheType type, String token)",10,2,4,2,2
"me.umov.chart.controller.ApiController.invalidate(CacheType type, String token)",10,2,4,2,2
"me.umov.chart.controller.BaseController.getLocale()",10,2,3,2,0
"me.umov.chart.interceptor.I18NInterceptor.getLocale()",9,2,3,2,0
"me.umov.chart.controller.ApiController.getData(CacheType type, String token)",7,2,5,2,2
"me.umov.chart.fixture.CustomColumnsFixture.withActivityField(String column)",18,2,8,1,1
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldAlwaysGenerateGenerateRandomChartAuthToken()",14,2,6,1,0
"me.umov.chart.controller.BaseTestController.assertResult(int statusCode, String message, String token)",12,2,8,1,3
"me.umov.chart.persistence.ListOfCharacterToArrayType.nullSafeSet(PreparedStatement statement, Object value, int index, SessionImplementor session)",12,2,6,1,4
"me.umov.chart.service.EnvironmentService.enableEnvironment(Long clientId)",12,2,5,1,1
"me.umov.chart.controller.DashboardController.viewMobile(String chartToken, Long id)",11,2,6,1,2
"me.umov.chart.controller.DashboardController.saveDashboard(String authenticationCode, String data)",11,2,5,1,2
"me.umov.chart.helper.URLHelper.resourceURI(String resource)",10,2,6,1,1
"me.umov.chart.persistence.ListOfCharacterToArrayType.nullSafeGet(ResultSet resultSet, String[] names, SessionImplementor session, Object owner)",10,2,4,1,4
"me.umov.chart.controller.DictionaryController.getDictionaryMessages()",9,2,4,1,0
"me.umov.chart.helper.TokenGeneratorHelper.generateSubChartToken(String token)",9,2,3,1,1
"me.umov.chart.dao.AbstractDao.createCriteria(Criterion... criterions)",6,2,4,1,1
"me.umov.chart.service.EnvironmentService.isEnvironmentReady(Long clientId)",6,2,3,1,1
"me.umov.chart.model.Environment.setStatus(Status status)",6,2,0,1,1
"me.umov.chart.dao.AbstractDao.getByCriteria(Criterion... criterions)",5,2,6,1,1
"me.umov.chart.dao.AbstractDaoMock.assertContainsCriteria(List<Criterion> criteriaList, String expectedCriteria)",3,2,3,1,2
"me.umov.chart.persistence.ListOfCharacterToArrayType.equals(Object a, Object b)",3,2,1,1,2
"me.umov.chart.model.Chart.setType(CacheType type)",2,2,1,1,1
"me.umov.chart.service.ChartService.findOrCreateWidgetCache(WidgetType widgetType, List<OnlineFilter> filters, CustomColumns customColumns, Long transactionId)",9,2,5,0,4
"me.umov.chart.controller.AuthenticationController.authenticate(String authenticationCode)",8,2,4,0,1
"me.umov.chart.controller.EnvironmentStatusController.status()",8,2,4,0,0
"me.umov.chart.dao.ChartDao.findByTypeAndTokenAndTransactionId(CacheType type, String token, Long transactionId)",6,2,6,0,3
"me.umov.chart.persistence.JsonAsStringType.nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor session)",6,2,3,0,4
"me.umov.chart.controller.WidgetController.resourceUri(WidgetType widgetType)",5,2,4,0,1
"me.umov.chart.helper.SerializationHelper.serializeCustomColumns(CustomColumns customColumns)",5,2,1,0,1
"me.umov.chart.helper.SerializationHelper.serializeFilters(List<OnlineFilter> filters)",5,2,1,0,1
"me.umov.chart.persistence.JsonAsStringType.equals(Object a, Object b)",3,2,1,0,2
"me.umov.chart.interceptor.I18NInterceptor.intercept(InterceptorStack stack, ResourceMethod method, Object resourceInstance)",13,1,11,2,3
"me.umov.chart.controller.BaseController.renderResult(APIResult apiResult)",5,1,12,2,1
"me.umov.chart.controller.BaseController.renderJson(String json)",5,1,9,2,1
"me.umov.chart.controller.ApiController.cleanCache(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.createChart(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.createMap(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.createWidget(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.deleteChart(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.deleteMap(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.deleteWidget(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.getChartData(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.getMapData(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.invalidateChart(String token)",3,1,1,2,1
"me.umov.chart.controller.ApiController.invalidateMap(String token)",3,1,1,2,1
"me.umov.chart.interceptor.I18NInterceptor.accepts(ResourceMethod method)",3,1,0,2,1
"me.umov.chart.controller.BaseController.getLocalizedMessages()",2,1,2,2,0
"me.umov.chart.controller.BaseController.renderResult(int statusCode, String message, String token)",2,1,1,2,3
"me.umov.chart.controller.BaseController.renderResult(int statusCode, String message)",2,1,1,2,2
"me.umov.chart.controller.BaseController.forwardTo(Class<T> clazz)",2,1,1,2,1
"me.umov.chart.controller.BaseController.forwardTo(T instance)",2,1,1,2,1
"me.umov.chart.service.ChartAuthenticationService.authenticateByChartToken(String authToken)",2,1,1,2,1
"me.umov.chart.model.ChartTest.shouldExtractClientIdFromToken()",17,1,8,1,0
"me.umov.chart.interceptor.AuthenticationInterceptorTest.shouldSucessfullAuthorizeRequest()",12,1,11,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithFiltersAndColumns()",11,1,9,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithFilters_IgnoreColumns()",11,1,9,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithColumns()",11,1,6,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithColumns_IgnoreColumns()",11,1,6,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithTransactionId()",11,1,6,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldSubChartTokenBeginsWithOriginalToken()",9,1,10,1,0
"me.umov.chart.interceptor.AuthenticationInterceptorTest.shouldRetrieveErrorWhenAuthTokenDoesNotExists()",9,1,9,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldSubChartTokenGeneratedWithAnotherSubchartTokenJustBeInSameFormatThatASubChartToken()",9,1,7,1,0
"me.umov.chart.interceptor.AuthenticationInterceptorTest.assertUnauthorizedRequest()",8,1,11,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateChartAuthToken()",8,1,10,1,0
"me.umov.chart.helper.TokenGeneratorHelper.generateHash(String content)",8,1,7,1,1
"me.umov.chart.model.ChartTest.shouldNotThrowExceptionWhileCreatingAChartWithNonCustomWidgetAndEmptyColumnNames()",8,1,7,1,0
"me.umov.chart.model.ChartTest.shouldCreateAChartWithCustomWidgetAndColumnNames()",8,1,6,1,0
"me.umov.chart.model.ChartTest.shouldCreateAChartWithoutCustomWidgetAndColumnNames()",8,1,6,1,0
"me.umov.chart.model.ChartTest.shouldNotThrowExceptionWhileCreatingAChartWithNonCustomWidgetAndNullColumnNames()",8,1,6,1,0
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithFilters()",8,1,5,1,0
"me.umov.chart.interceptor.AuthenticationInterceptorTest.shouldOnlyAcceptsAuthenticableControllers()",7,1,12,1,0
"me.umov.chart.dao.AbstractDaoMock.before()",7,1,5,1,0
"me.umov.chart.interceptor.AuthenticationInterceptorTest.shouldRetrieveErrorWhenTheresNoAuthToken()",7,1,5,1,0
"me.umov.chart.model.Chart.Chart(String token, Long clientId, WidgetType widgetType, List<OnlineFilter> filters, CustomColumns customColumns, Long transactionId)",7,1,1,1,6
"me.umov.chart.helper.TokenGeneratorHelperTest.shouldGenerateWidgetTokenWithoutFilters()",6,1,5,1,0
"me.umov.chart.model.Chart.Chart(CacheType type, String token)",6,1,4,1,2
"me.umov.chart.model.Chart.extractClientIdFromToken(String token)",6,1,2,1,1
"me.umov.chart.dao.AbstractDaoMock.setUpSession()",5,1,16,1,0
"me.umov.chart.model.Chart.Chart(CacheType type, String token, List<OnlineFilter> filters)",5,1,1,1,3
"me.umov.chart.interceptor.AuthenticationInterceptor.renderError()",4,1,12,1,0
"me.umov.chart.controller.BaseTestController.setUp()",4,1,5,1,0
"me.umov.chart.model.Environment.Environment(Long id)",4,1,1,1,1
"me.umov.chart.persistence.ListOfCharacterToArrayType.returnedClass()",4,1,0,1,0
"me.umov.chart.dao.AbstractDaoMock.setUpCriteria()",3,1,9,1,0
"me.umov.chart.dao.AbstractDaoMock.assertCriteria(String expectedCriteria)",3,1,5,1,1
"me.umov.chart.dao.AbstractDao.save(T instance)",3,1,3,1,1
"me.umov.chart.interceptor.AuthenticationInterceptorTest.assertAuthorizedRequest(Long clientId)",3,1,3,1,1
"me.umov.chart.controller.DictionaryController.index()",3,1,3,1,0
"me.umov.chart.model.ChartTest.shouldCreateAChartWithTransactionId()",3,1,3,1,0
"me.umov.chart.persistence.ListOfCharacterToArrayType.assemble(Serializable cached, Object owner)",3,1,1,1,2
"me.umov.chart.interceptor.AuthenticationInterceptor.accepts(ResourceMethod method)",3,1,1,1,1
"me.umov.chart.persistence.ListOfCharacterToArrayType.disassemble(Object value)",3,1,1,1,1
"me.umov.chart.persistence.ListOfCharacterToArrayType.hashCode(Object o)",3,1,1,1,1
"me.umov.chart.interceptor.AuthenticationInterceptorTest.setUp()",3,1,1,1,0
"me.umov.chart.persistence.ListOfCharacterToArrayType.replace(Object original, Object target, Object owner)",3,1,0,1,3
"me.umov.chart.persistence.ListOfCharacterToArrayType.deepCopy(Object value)",3,1,0,1,1
"me.umov.chart.model.Environment.getId()",3,1,0,1,0
"me.umov.chart.model.Environment.toString()",3,1,0,1,0
"me.umov.chart.persistence.ListOfCharacterToArrayType.isMutable()",3,1,0,1,0
"me.umov.chart.persistence.ListOfCharacterToArrayType.sqlTypes()",3,1,0,1,0
"me.umov.chart.dao.AbstractDaoMock.setUpSQLQuery()",2,1,4,1,0
"me.umov.chart.helper.TokenGeneratorHelper.generateChartAuthToken(Long clientId, Long agentId)",2,1,3,1,2
"me.umov.chart.dao.AbstractDao.getPersistentClass()",2,1,3,1,0
"me.umov.chart.dao.AbstractDaoMock.assertContainsCriteria(ArgumentCaptor<Criterion> captor, String expectedCriteria)",2,1,2,1,2
"me.umov.chart.helper.TokenGeneratorHelper.generateRandomHash(String key, String value)",2,1,2,1,2
"me.umov.chart.dao.AbstractDao.delete(T instance)",2,1,2,1,1
"me.umov.chart.dao.AbstractDao.findById(K id)",2,1,2,1,1
"me.umov.chart.util.Miscellaneous.getRandomCharacter()",2,1,2,1,0
"me.umov.chart.util.Miscellaneous.getRandomDouble()",2,1,2,1,0
"me.umov.chart.util.Miscellaneous.getRandomFloat()",2,1,2,1,0
"me.umov.chart.util.Miscellaneous.getRandomInteger()",2,1,2,1,0
"me.umov.chart.util.Miscellaneous.getRandomNumber()",2,1,2,1,0
"me.umov.chart.util.Miscellaneous.getRandomShort()",2,1,2,1,0
"me.umov.chart.controller.BaseTestController.assertResult(int statusCode, String message)",2,1,1,1,2
"me.umov.chart.helper.TokenGeneratorHelper.generateHash(String key, String value)",2,1,1,1,2
"me.umov.chart.model.Chart.setFilters(List<OnlineFilter> filters)",2,1,1,1,1
"me.umov.chart.model.Chart.getType()",2,1,1,1,0
"me.umov.chart.model.Environment.isReady()",2,1,1,1,0
"me.umov.chart.util.Miscellaneous.getRandomBoolean()",2,1,1,1,0
"me.umov.chart.util.Miscellaneous.getRandomId()",2,1,1,1,0
"me.umov.chart.util.Miscellaneous.getRandomString()",2,1,1,1,0
"null",2,1,0,1,1
"me.umov.chart.dao.AbstractDao.onRetrieved(T instance)",2,1,0,1,1
"me.umov.chart.model.Chart.setActive(Boolean active)",2,1,0,1,1
"me.umov.chart.model.Chart.setCacheValue(String cacheValue)",2,1,0,1,1
"me.umov.chart.model.Chart.setCustomColumns(String customColumns)",2,1,0,1,1
"me.umov.chart.model.Chart.setError(String error)",2,1,0,1,1
"me.umov.chart.model.Chart.setId(Long id)",2,1,0,1,1
"me.umov.chart.model.Chart.setLastUpdate(LocalDateTime lastUpdate)",2,1,0,1,1
"me.umov.chart.model.Chart.setLastView(LocalDateTime lastView)",2,1,0,1,1
"me.umov.chart.model.Chart.setOnline(Boolean online)",2,1,0,1,1
"me.umov.chart.model.Chart.setToken(String token)",2,1,0,1,1
"me.umov.chart.model.Chart.setTransactionId(Long transactionId)",2,1,0,1,1
"me.umov.chart.model.Chart.setWidgetType(WidgetType widgetType)",2,1,0,1,1
"me.umov.chart.model.Environment.setId(Long id)",2,1,0,1,1
"me.umov.chart.model.Environment.setLastEndUpdate(LocalDateTime lastEndUpdate)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setActivity(Entity activity)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setAgent(Entity agent)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setAgent_daily_metrics(Entity agent_daily_metrics)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setAgent_performance(Entity agent_performance)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setCustom_entity(Entity custom_entity)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setItem(Entity item)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setLocal(Entity local)",2,1,0,1,1
"me.umov.chart.model.column.CustomColumns.setTask(Entity task)",2,1,0,1,1
"me.umov.chart.dao.AbstractDao.getSession()",2,1,0,1,0
"me.umov.chart.dao.AbstractDaoMock.setUp()",2,1,0,1,0
"me.umov.chart.fixture.CustomColumnsFixture.build()",2,1,0,1,0
"me.umov.chart.fixture.CustomColumnsFixture.get()",2,1,0,1,0
"me.umov.chart.model.Chart.getActive()",2,1,0,1,0
"me.umov.chart.model.Chart.getCacheValue()",2,1,0,1,0
"me.umov.chart.model.Chart.getClientId()",2,1,0,1,0
"me.umov.chart.model.Chart.getCustomColumns()",2,1,0,1,0
"me.umov.chart.model.Chart.getError()",2,1,0,1,0
"me.umov.chart.model.Chart.getFilters()",2,1,0,1,0
"me.umov.chart.model.Chart.getId()",2,1,0,1,0
"me.umov.chart.model.Chart.getLastUpdate()",2,1,0,1,0
"me.umov.chart.model.Chart.getLastView()",2,1,0,1,0
"me.umov.chart.model.Chart.getOnline()",2,1,0,1,0
"me.umov.chart.model.Chart.getToken()",2,1,0,1,0
"me.umov.chart.model.Chart.getTransactionId()",2,1,0,1,0
"me.umov.chart.model.Chart.getWidgetType()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getActivity()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getAgent()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getAgent_daily_metrics()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getAgent_performance()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getCustom_entity()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getItem()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getLocal()",2,1,0,1,0
"me.umov.chart.model.column.CustomColumns.getTask()",2,1,0,1,0
"me.umov.chart.util.Miscellaneous.getRandomDate()",2,1,0,1,0
"me.umov.chart.model.Chart.Chart()",1,1,0,1,0
"me.umov.chart.model.Environment.Environment()",1,1,0,1,0
"me.umov.chart.service.ChartServiceTest.shouldCreateAWidgetCacheWhenCurrentDoesNotExists()",19,1,26,0,0
"me.umov.chart.service.ChartAuthenticationServiceTest.shouldUpdateTokenAndExpireDateWhenUserAlreadyHadAnAuthentication()",18,1,37,0,0
"me.umov.chart.dao.ChartDaoTest.shouldFindChartByTypeAndTokenAndTransactionId()",13,1,20,0,0
"me.umov.chart.controller.ApiControllerTest.shoultReturnA422ErrorWhenOccursTimeoutError()",11,1,15,0,0
"me.umov.chart.controller.ApiControllerTest.shoultReturnA500ErrorWhenOccursUnexpectedError()",11,1,15,0,0
"me.umov.chart.helper.SerializationHelperTest.shouldAlwaysSortFiltersToSerialize()",11,1,14,0,0
"me.umov.chart.service.ChartAuthenticationServiceTest.shouldRetrieveAuthenticationWhenAuthenticatingByCode()",10,1,19,0,0
"me.umov.chart.service.ChartServiceTest.shouldCreateAOnlineChartBasedOnAnother()",10,1,16,0,0
"me.umov.chart.service.ChartServiceTest.shouldRetrieveCurrentWidgetCacheWhenExists()",10,1,14,0,0
"me.umov.chart.service.ChartServiceTest.shouldEmptyCacheValueAndLastUpdateWhenInvalidatingChart()",10,1,11,0,0
"me.umov.chart.controller.ApiControllerTest.shouldShowErrorTimeout()",10,1,10,0,0
"me.umov.chart.controller.ApiControllerTest.shouldShowUnexpectedError()",10,1,10,0,0
"me.umov.chart.helper.SerializationHelperTest.shouldSerializeFiltersToJson()",10,1,10,0,0
"me.umov.chart.controller.WidgetControllerTest.setUp()",9,1,17,0,0
"me.umov.chart.controller.ApiControllerTest.shouldReturnA400ErrorIfThereIsAnCustomWidgetWithoutColumnNames()",9,1,13,0,0
"me.umov.chart.dao.AbstractDaoTest.shouldGetModelByCriteria()",9,1,13,0,0
"me.umov.chart.service.EnvironmentServiceTest.shouldPersistANewEnvironment()",9,1,13,0,0
"me.umov.chart.controller.ApiControllerTest.setUp()",9,1,12,0,0
"me.umov.chart.controller.AuthenticationControllerTest.shouldRenderSuccessWhenValidAuthToken()",9,1,10,0,0
"me.umov.chart.service.EnvironmentServiceTest.shouldNotPersistANewEnvironment()",9,1,10,0,0
"me.umov.chart.util.MockitoHelpers.sameArgument()",9,1,0,0,0
"me.umov.chart.service.ChartServiceTest.shouldOnlineChartBasedOnAnotherOnlineChartKeepTheOriginalTokenAsBaseToken()",8,1,13,0,0
"me.umov.chart.controller.ApiControllerTest.shouldCreateNewChart()",8,1,11,0,0
"me.umov.chart.controller.WidgetControllerTest.shouldCallRenderChart()",8,1,11,0,0
"me.umov.chart.service.ChartAuthenticationServiceTest.shouldRetrieveNullWhenAuthenticatingByCodeWithInvalidCode()",8,1,11,0,0
"me.umov.chart.service.ChartServiceTest.shouldFindChartByTokenAndTransactionId()",8,1,10,0,0
"me.umov.chart.controller.ApiControllerTest.shouldShowErrorDataNotAvailable()",8,1,9,0,0
"me.umov.chart.controller.EnvironmentStatusControllerTest.shouldRetrieveAsNotReady()",8,1,8,0,0
"me.umov.chart.controller.EnvironmentStatusControllerTest.shouldRetrieveAsReady()",8,1,8,0,0
"me.umov.chart.controller.ApiControllerTest.shouldDeleteWidget()",8,1,7,0,0
"me.umov.chart.service.ChartServiceTest.shouldSucessfullyUpdateLastViewOnChart()",8,1,7,0,0
"me.umov.chart.controller.AuthenticationControllerTest.shouldRenderErrorWhenInvalidAuthToken()",8,1,6,0,0
"me.umov.chart.service.EnvironmentServiceTest.shouldEnvironmentBeNotReady_IfEnvironmentStatusIsInactive()",7,1,12,0,0
"me.umov.chart.service.EnvironmentServiceTest.shouldEnvironmentBeNotReady_IfEnvironmentThereIsNoLastEndUpdate()",7,1,12,0,0
"me.umov.chart.service.EnvironmentServiceTest.shouldEnvironmentBeReady()",7,1,12,0,0
"me.umov.chart.service.ChartAuthenticationServiceTest.shouldSuccessfullRetrieveAuthenticationByToken()",7,1,10,0,0
"me.umov.chart.service.ChartServiceTest.shouldFindChartByKey()",7,1,10,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldJustIgnoreWhenLocaleParameterIsEmpty()",7,1,9,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldJustIgnoreWhenLocaleParameterIsInvalid()",7,1,9,0,0
"me.umov.chart.controller.ApiControllerTest.shouldGenerateErrorWhenDeleteChartThatDontExists()",7,1,8,0,0
"me.umov.chart.controller.ApiControllerTest.shouldGenerateErrorWhenDeleteWidgetThatDontExists()",7,1,8,0,0
"me.umov.chart.controller.ApiControllerTest.shouldGenerateErrorWhenInvalidateChartThatDontExists()",7,1,8,0,0
"me.umov.chart.controller.ApiControllerTest.shouldShowErrorChartNotFound()",7,1,8,0,0
"me.umov.chart.service.ChartAuthenticationServiceTest.shouldRetrieveNullWhenAuthenticatingByCodeAndAnErrorOccurrs()",7,1,8,0,0
"me.umov.chart.service.ChartServiceTest.shouldSaveNewInstanceOfChart()",7,1,8,0,0
"me.umov.chart.controller.ApiControllerTest.shouldCleanCacheChart()",7,1,7,0,0
"me.umov.chart.controller.ApiControllerTest.shouldDeleteChart()",7,1,7,0,0
"me.umov.chart.controller.DictionaryControllerTest.shouldTransformDictionaryData()",7,1,7,0,0
"me.umov.chart.dao.AbstractDaoTest.shouldRetrieveNullWhenGetModelByCriteriaAndHasNoRowsWithExpectedRestrictions()",7,1,7,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldSetEnglishLocaleWhenLocaleParameterIsSet()",7,1,6,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldSetPortugueseLocaleWhenLocaleParameterIsSet()",7,1,6,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldSetSpanishLocaleWhenLocaleParameterIsSet()",7,1,6,0,0
"me.umov.chart.controller.MapController.mapByToken(String token, Long routeId, boolean hideMenu, List<OnlineFilter> filter, List<String> userFilter)",7,1,5,0,5
"me.umov.chart.helper.URLHelperTest.shouldResolveResourceUriWithContextPath()",7,1,5,0,0
"me.umov.chart.filter.CORSFilter.doFilter(ServletRequest request, ServletResponse res, FilterChain chain)",7,1,4,0,3
"me.umov.chart.dao.AbstractDaoTest.shouldDeleteAnInstance()",7,1,3,0,0
"me.umov.chart.controller.ApiControllerTest.shouldNotCleanCacheWhenChartNotExists()",6,1,8,0,0
"me.umov.chart.controller.WidgetControllerTest.shouldCallRenderWidget()",6,1,7,0,0
"me.umov.chart.controller.ApiControllerTest.shouldGenerateErrorWhenCreateNewChartThatAlreadyExists()",6,1,6,0,0
"me.umov.chart.controller.ApiControllerTest.shouldResultUseCacheValueAndUpdateLastViewOfChart()",6,1,6,0,0
"me.umov.chart.controller.DictionaryControllerTest.shouldSerializeDictionary()",6,1,6,0,0
"me.umov.chart.controller.ChartController.chart(String apiUrl, boolean hideTable, boolean hideFilters, boolean hidePrint, boolean print)",6,1,5,0,5
"me.umov.chart.controller.MapController.map(String apiUrl, Long routeId, boolean hideMenu, List<OnlineFilter> filter, List<String> userFilter)",6,1,5,0,5
"me.umov.chart.controller.ApiControllerTest.shouldInvalidateChart()",6,1,4,0,0
"me.umov.chart.controller.MapController.createOnlineMap(String token, List<OnlineFilter> filters)",5,1,7,0,2
"me.umov.chart.service.ChartAuthenticationServiceTest.shouldNotRetrieveAuthenticationWhenAuthenticatingByInvalidToken()",5,1,7,0,0
"me.umov.chart.controller.IndexController.index()",5,1,6,0,0
"me.umov.chart.dao.AbstractDaoTest.shouldRetrieveNullWhenFindingAModelByEntityAndItNotExists()",5,1,6,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldJustIgnoreWhenLocaleParameterIsNull()",5,1,6,0,0
"me.umov.chart.service.ChartAuthenticationServiceTest.setUp()",5,1,6,0,0
"me.umov.chart.service.EnvironmentServiceTest.shouldNotExistingEnvironmentNotReady()",5,1,6,0,0
"me.umov.chart.Sample.main(String[] args)",5,1,5,0,1
"me.umov.chart.model.EnvironmentTest.environmentShouldBeReady()",5,1,5,0,0
"me.umov.chart.model.EnvironmentTest.environmentShouldNotBeReady_IfStatusIsInactive()",5,1,5,0,0
"me.umov.chart.model.EnvironmentTest.environmentShouldNotBeReady_IfStatusIsNull()",5,1,5,0,0
"me.umov.chart.controller.ChartController.chartWithFilter(String token, String context, boolean hideTable, boolean hideFilters, boolean hidePrint, boolean print)",5,1,4,0,6
"me.umov.chart.controller.ChartControllerTest.shouldIncludeApiUrl()",5,1,4,0,0
"me.umov.chart.controller.ChartControllerTest.shouldIncludeHideFiltersParam()",5,1,4,0,0
"me.umov.chart.controller.ChartControllerTest.shouldIncludeHideTableParam()",5,1,4,0,0
"me.umov.chart.controller.DictionaryControllerTest.setUp()",5,1,4,0,0
"me.umov.chart.dao.AbstractDaoTest.shouldSaveSuccessfullyANewPersistentModel()",5,1,4,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldSetLocaleToUserInfo()",5,1,4,0,0
"me.umov.chart.model.EnvironmentTest.environmentShouldNotBeReady_IfThereIsNotLastEndUpdate()",5,1,4,0,0
"me.umov.chart.filter.CORSFilterTest.shouldAddAccess_Control_Allow_Methods()",5,1,3,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldAlwaysProceedTheInterceptorStack()",5,1,3,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldSetPortugueseLocaleAsFallbackLocale()",5,1,3,0,0
"me.umov.chart.interceptor.SessionManagementInterceptorTest.shouldAlwaysProceedTheRequest()",5,1,3,0,0
"me.umov.chart.interceptor.SessionManagementInterceptorTest.shouldReduceTheSessionIdleTimeToThirtySecondsForApiCalls()",5,1,3,0,0
"me.umov.chart.helper.URLHelperTest.shouldResolveResourceUriWithoutContextPath()",5,1,2,0,0
"me.umov.chart.type.WidgetTypeTest.shouldCustomCardUseCustomColumn()",5,1,2,0,0
"me.umov.chart.type.WidgetTypeTest.shouldCustomTableUseCustomColumn()",5,1,2,0,0
"me.umov.chart.service.ChartServiceTest.setUp()",4,1,6,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldStoreLocaleOnResult()",4,1,5,0,0
"me.umov.chart.helper.ReflectionHelper.isMethodOrClassAnnotated(ResourceMethod resourceMethod, Class<? extends Annotation> annotation)",4,1,4,0,2
"me.umov.chart.interceptor.I18NInterceptorTest.setUp()",4,1,4,0,0
"me.umov.chart.service.GlobalSettingsServiceTest.setUp()",4,1,4,0,0
"me.umov.chart.controller.ChartController.chartbByToken(String token, boolean hideTable, boolean hideFilters, boolean hidePrint, boolean print)",4,1,3,0,5
"me.umov.chart.service.ChartService.invalidate(Chart chart)",4,1,3,0,1
"me.umov.chart.filter.CORSFilterTest.shouldAddAccess_Control_Allow_Credentials()",4,1,3,0,0
"me.umov.chart.filter.CORSFilterTest.shouldAddAccess_Control_Allow_OriginHeader()",4,1,3,0,0
"me.umov.chart.filter.CORSFilterTest.shouldChainDoFilterBypass()",4,1,3,0,0
"me.umov.chart.interceptor.SessionManagementInterceptor.intercept(InterceptorStack stack, ResourceMethod method, Object instance)",4,1,2,0,3
"me.umov.chart.persistence.CustomPostgreSQLDialect.CustomPostgreSQLDialect()",4,1,2,0,0
"me.umov.chart.filter.CORSFilterTest.setup()",4,1,1,0,0
"me.umov.chart.model.APIResult.APIResult(Integer statusCode, String message)",4,1,0,0,2
"me.umov.chart.model.ChartAuthentication.ChartAuthentication(Long clientId, Long agentId)",4,1,0,0,2
"me.umov.chart.persistence.JsonAsStringType.returnedClass()",4,1,0,0,0
"me.umov.chart.service.ChartService.createOnlineChart(Chart chart, List<OnlineFilter> filters)",3,1,4,0,2
"me.umov.chart.service.ChartService.updateLastView(Chart chart)",3,1,3,0,1
"me.umov.chart.service.GlobalSettingsServiceTest.shouldRetrieveAuthUrl()",3,1,3,0,0
"me.umov.chart.dao.AbstractDaoTest.shouldRetrieveASession()",3,1,2,0,0
"me.umov.chart.fixture.ChartFixture.withCacheValue()",3,1,2,0,0
"me.umov.chart.fixture.ChartFixture.withId()",3,1,2,0,0
"me.umov.chart.fixture.ChartFixture.withLastUpdate()",3,1,2,0,0
"me.umov.chart.fixture.ChartFixture.withLastView()",3,1,2,0,0
"me.umov.chart.fixture.EnvironmentFixture.witLastEndUpdate()",3,1,2,0,0
"me.umov.chart.interceptor.I18NInterceptorTest.shouldAlwaysAcceptsTheRequest()",3,1,2,0,0
"me.umov.chart.interceptor.SessionManagementInterceptorTest.shouldAcceptsAllCalls()",3,1,2,0,0
"me.umov.chart.service.ChartServiceTest.shouldRetrieveTheDaoInstance()",3,1,2,0,0
"me.umov.chart.persistence.JsonAsStringType.nullSafeGet(ResultSet rs, String[] names, SessionImplementor session, Object owner)",3,1,1,0,4
"me.umov.chart.persistence.JsonAsStringType.assemble(Serializable cached, Object owner)",3,1,1,0,2
"me.umov.chart.fixture.ChartAuthenticationFixture.withExpireDate(LocalDateTime expireDate)",3,1,1,0,1
"me.umov.chart.fixture.ChartAuthenticationFixture.withToken(String token)",3,1,1,0,1
"me.umov.chart.fixture.ChartFixture.withToken(String token)",3,1,1,0,1
"me.umov.chart.fixture.ChartFixture.withWidgetType(WidgetType widgetType)",3,1,1,0,1
"me.umov.chart.fixture.EnvironmentFixture.withId(Long id)",3,1,1,0,1
"me.umov.chart.fixture.GlobalSettingsFixture.withAuthUrl(String authUrl)",3,1,1,0,1
"me.umov.chart.fixture.OnlineFilterFixture.withName(String name)",3,1,1,0,1
"me.umov.chart.fixture.OnlineFilterFixture.withValue(String... values)",3,1,1,0,1
"me.umov.chart.fixture.UserInfoFixture.withAuthToken(String authToken)",3,1,1,0,1
"me.umov.chart.fixture.UserInfoFixture.withClientId(Long id)",3,1,1,0,1
"me.umov.chart.fixture.UserInfoFixture.withLocale(Locale locale)",3,1,1,0,1
"me.umov.chart.persistence.JsonAsStringType.disassemble(Object value)",3,1,1,0,1
"me.umov.chart.persistence.JsonAsStringType.hashCode(Object o)",3,1,1,0,1
"me.umov.chart.controller.ChartControllerTest.setUp()",3,1,1,0,0
"me.umov.chart.fixture.EnvironmentFixture.withStatusActive()",3,1,1,0,0
"me.umov.chart.fixture.EnvironmentFixture.withStatusInactive()",3,1,1,0,0
"me.umov.chart.fixture.EnvironmentFixture.withoutLastEndUpdate()",3,1,1,0,0
"me.umov.chart.helper.URLHelperTest.setUp()",3,1,1,0,0
"me.umov.chart.interceptor.SessionManagementInterceptorTest.setUp()",3,1,1,0,0
"me.umov.chart.ioc.AuthClientFactory.getInstance()",3,1,1,0,0
"me.umov.chart.service.EnvironmentServiceTest.setup()",3,1,1,0,0
"me.umov.chart.model.APIResult.APIResult(Integer statusCode, String message, String token)",3,1,0,0,3
"me.umov.chart.persistence.JsonAsStringType.replace(Object original, Object target, Object owner)",3,1,0,0,3
"me.umov.chart.model.OnlineFilter.OnlineFilter(String name, String[] values)",3,1,0,0,2
"me.umov.chart.interceptor.SessionManagementInterceptor.accepts(ResourceMethod method)",3,1,0,0,1
"me.umov.chart.model.TestModel.TestModel(Long id)",3,1,0,0,1
"me.umov.chart.persistence.JsonAsStringType.deepCopy(Object value)",3,1,0,0,1
"me.umov.chart.dao.TestDao.getSession()",3,1,0,0,0
"me.umov.chart.filter.CORSFilter.destroy()",3,1,0,0,0
"me.umov.chart.model.EnvironmentTest.setup()",3,1,0,0,0
"me.umov.chart.model.GlobalSettings.getId()",3,1,0,0,0
"me.umov.chart.model.TestModel.getId()",3,1,0,0,0
"me.umov.chart.persistence.JsonAsStringType.isMutable()",3,1,0,0,0
"me.umov.chart.persistence.JsonAsStringType.sqlTypes()",3,1,0,0,0
"me.umov.chart.util.TestResourceBundle.getContents()",3,1,0,0,0
"me.umov.chart.dao.ChartAuthenticationDao.findValidByToken(String token)",2,1,4,0,1
"me.umov.chart.dao.ChartAuthenticationDao.findByClientAndAgent(Long clientId, Long agentId)",2,1,3,0,2
"me.umov.chart.controller.WidgetController.renderChart(WidgetType widgetType)",2,1,3,0,1
"me.umov.chart.controller.WidgetController.renderMap(WidgetType widgetType)",2,1,3,0,1
"me.umov.chart.fixture.OnlineFilterFixture.withNameAndValue()",2,1,3,0,0
"me.umov.chart.service.ChartService.findByTypeAndTokenAndTransactionId(CacheType type, String token, Long transactionId)",2,1,2,0,3
"me.umov.chart.fixture.OnlineFilterFixture.withNameAndValue(String name, String value)",2,1,2,0,2
"me.umov.chart.service.ChartService.findByTypeAndToken(CacheType type, String token)",2,1,2,0,2
"me.umov.chart.controller.WidgetController.renderWidget(WidgetType widgetType)",2,1,2,0,1
"me.umov.chart.service.ChartService.delete(Chart chart)",2,1,2,0,1
"me.umov.chart.service.ChartService.findById(Long id)",2,1,2,0,1
"me.umov.chart.service.ChartService.save(Chart chart)",2,1,2,0,1
"me.umov.chart.service.DashboardService.save(Dashboard dashboard)",2,1,2,0,1
"me.umov.chart.fixture.ChartAuthenticationFixture.withExpireDate()",2,1,2,0,0
"me.umov.chart.fixture.ChartAuthenticationFixture.withToken()",2,1,2,0,0
"me.umov.chart.fixture.ChartFixture.withToken()",2,1,2,0,0
"me.umov.chart.fixture.EnvironmentFixture.withId()",2,1,2,0,0
"me.umov.chart.fixture.GlobalSettingsFixture.withAuthUrl()",2,1,2,0,0
"me.umov.chart.fixture.OnlineFilterFixture.withName()",2,1,2,0,0
"me.umov.chart.fixture.OnlineFilterFixture.withValue()",2,1,2,0,0
"me.umov.chart.service.GlobalSettingsService.getAuthUrl()",2,1,2,0,0
"me.umov.chart.helper.SerializationHelper.serialize(Object o)",2,1,1,0,1
"me.umov.chart.dao.GlobalSettingsDao.getSettings()",2,1,1,0,0
"me.umov.chart.fixture.GlobalSettingsFixture.fullFilled()",2,1,1,0,0
"me.umov.chart.model.UserInfo.getLocaleToken()",2,1,1,0,0
"me.umov.chart.service.GlobalSettingsService.getSettings()",2,1,1,0,0
"me.umov.chart.filter.CORSFilter.init(FilterConfig filterConfig)",2,1,0,0,1
"me.umov.chart.model.APIResult.setMessage(String message)",2,1,0,0,1
"me.umov.chart.model.APIResult.setStatusCode(Integer statusCode)",2,1,0,0,1
"me.umov.chart.model.APIResult.setToken(String token)",2,1,0,0,1
"me.umov.chart.model.ChartAuthentication.setAgentId(Long agentId)",2,1,0,0,1
"me.umov.chart.model.ChartAuthentication.setClientId(Long clientId)",2,1,0,0,1
"me.umov.chart.model.ChartAuthentication.setExpireDate(LocalDateTime expireDate)",2,1,0,0,1
"me.umov.chart.model.ChartAuthentication.setId(Long id)",2,1,0,0,1
"me.umov.chart.model.ChartAuthentication.setToken(String token)",2,1,0,0,1
"me.umov.chart.model.Dashboard.setClientId(Long clientId)",2,1,0,0,1
"me.umov.chart.model.Dashboard.setDescription(String description)",2,1,0,0,1
"me.umov.chart.model.Dashboard.setId(Long id)",2,1,0,0,1
"me.umov.chart.model.Dashboard.setStructure(String structure)",2,1,0,0,1
"me.umov.chart.model.GlobalSettings.setAuthUrl(String authUrl)",2,1,0,0,1
"me.umov.chart.model.OnlineFilter.setName(String name)",2,1,0,0,1
"me.umov.chart.model.OnlineFilter.setValues(String[] values)",2,1,0,0,1
"me.umov.chart.model.UserInfo.setAuthToken(String authToken)",2,1,0,0,1
"me.umov.chart.model.UserInfo.setClientId(Long clientId)",2,1,0,0,1
"me.umov.chart.model.UserInfo.setLocale(Locale locale)",2,1,0,0,1
"me.umov.chart.model.column.Entity.setCustomFields(List<Field> customFields)",2,1,0,0,1
"me.umov.chart.model.column.Entity.setEntityId(Long entityId)",2,1,0,0,1
"me.umov.chart.model.column.Entity.setFields(List<Field> fields)",2,1,0,0,1
"me.umov.chart.model.column.Field.setCaption(String caption)",2,1,0,0,1
"me.umov.chart.model.column.Field.setColumn(String column)",2,1,0,0,1
"me.umov.chart.model.column.Field.setOperation(Operation operation)",2,1,0,0,1
"me.umov.chart.model.column.Field.setOrder(int order)",2,1,0,0,1
"me.umov.chart.model.column.Field.setType(String type)",2,1,0,0,1
"me.umov.chart.fixture.ChartAuthenticationFixture.build()",2,1,0,0,0
"me.umov.chart.fixture.ChartAuthenticationFixture.get()",2,1,0,0,0
"me.umov.chart.fixture.ChartFixture.build()",2,1,0,0,0
"me.umov.chart.fixture.ChartFixture.get()",2,1,0,0,0
"me.umov.chart.fixture.EnvironmentFixture.build()",2,1,0,0,0
"me.umov.chart.fixture.EnvironmentFixture.get()",2,1,0,0,0
"me.umov.chart.fixture.GlobalSettingsFixture.build()",2,1,0,0,0
"me.umov.chart.fixture.GlobalSettingsFixture.get()",2,1,0,0,0
"me.umov.chart.fixture.OnlineFilterFixture.build()",2,1,0,0,0
"me.umov.chart.fixture.OnlineFilterFixture.get()",2,1,0,0,0
"me.umov.chart.fixture.UserInfoFixture.build()",2,1,0,0,0
"me.umov.chart.fixture.UserInfoFixture.get()",2,1,0,0,0
"me.umov.chart.model.APIResult.getMessage()",2,1,0,0,0
"me.umov.chart.model.APIResult.getStatusCode()",2,1,0,0,0
"me.umov.chart.model.APIResult.getToken()",2,1,0,0,0
"me.umov.chart.model.ChartAuthentication.getAgentId()",2,1,0,0,0
"me.umov.chart.model.ChartAuthentication.getClientId()",2,1,0,0,0
"me.umov.chart.model.ChartAuthentication.getExpireDate()",2,1,0,0,0
"me.umov.chart.model.ChartAuthentication.getId()",2,1,0,0,0
"me.umov.chart.model.ChartAuthentication.getToken()",2,1,0,0,0
"me.umov.chart.model.Dashboard.getClientId()",2,1,0,0,0
"me.umov.chart.model.Dashboard.getDescription()",2,1,0,0,0
"me.umov.chart.model.Dashboard.getId()",2,1,0,0,0
"me.umov.chart.model.Dashboard.getStructure()",2,1,0,0,0
"me.umov.chart.model.GlobalSettings.getAuthUrl()",2,1,0,0,0
"me.umov.chart.model.OnlineFilter.getName()",2,1,0,0,0
"me.umov.chart.model.OnlineFilter.getValues()",2,1,0,0,0
"me.umov.chart.model.UserInfo.getAuthToken()",2,1,0,0,0
"me.umov.chart.model.UserInfo.getClientId()",2,1,0,0,0
"me.umov.chart.model.UserInfo.getLocale()",2,1,0,0,0
"me.umov.chart.model.column.Entity.getCustomFields()",2,1,0,0,0
"me.umov.chart.model.column.Entity.getEntityId()",2,1,0,0,0
"me.umov.chart.model.column.Entity.getFields()",2,1,0,0,0
"me.umov.chart.model.column.Field.getCaption()",2,1,0,0,0
"me.umov.chart.model.column.Field.getColumn()",2,1,0,0,0
"me.umov.chart.model.column.Field.getOperation()",2,1,0,0,0
"me.umov.chart.model.column.Field.getOrder()",2,1,0,0,0
"me.umov.chart.model.column.Field.getType()",2,1,0,0,0
"me.umov.chart.persistence.BooleanCharacterType.BooleanCharacterType()",2,1,0,0,0
"me.umov.chart.service.ChartService.getDao()",2,1,0,0,0
"me.umov.chart.service.DashboardService.getDao()",2,1,0,0,0
"me.umov.chart.model.OnlineFilter.OnlineFilter()",1,1,0,0,0
"me.umov.chart.model.APIResult.APIResult()",0,1,0,0,0
"me.umov.chart.model.ChartAuthentication.ChartAuthentication()",0,1,0,0,0
"me.umov.chart.model.Model.getId()",0,1,0,0,0
"me.umov.chart.model.TestModel.TestModel()",0,1,0,0,0
