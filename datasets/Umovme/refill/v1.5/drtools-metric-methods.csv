"method","loc","cyclo","calls","nbd","param"
"me.umov.refill.builder.widget.AbstractChartDataBuilder.identifyFilterPeriod(OnlineFilterType initalDateFilter, OnlineFilterType finalDateFilter)",34,9,27,3,2
"me.umov.refill.serialization.GraphicDataRowSerializer.buildJsonValueElement(Object value)",19,7,2,2,1
"me.umov.refill.builder.widget.AbstractCardDataBuilder.postBuild(Graphic graphic)",38,7,27,1,1
"me.umov.refill.persistence.RouteResultTransformer.transformList(List list)",26,6,7,2,1
"me.umov.refill.template.SoyDataBuilder.fromInstance(Object instance, int deep)",24,6,12,2,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.applyDefaultDateFilter()",15,5,10,3,0
"me.umov.refill.model.Graphic.defineOrderByWhenGraphicTable()",10,5,5,3,0
"me.umov.refill.template.SoyDataBuilder.fromValue(Object value, int deep)",17,5,10,2,2
"me.umov.refill.util.Miscellaneous.getRandomString(final int length)",22,5,8,1,1
"me.umov.refill.builder.widget.customtable.ActivityCustomColumn.getColumnData(CustomColumns customColumns, Long clientId)",14,4,8,3,2
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumn.customColumnData(List<Field> customFields, Long clientId)",14,4,8,3,2
"me.umov.refill.model.Graphic.translateOnlineFiltersToGraphicFilters(Boolean isOnlineGraphic)",7,4,3,3,1
"me.umov.refill.geo.CabralGeoProcessor.calculatePathAndDuration(Long clientId, List<Marker> markers, RouteTransportMode transportMode, boolean addPath)",24,4,14,2,4
"me.umov.refill.builder.map.AgentTrackingMapDataBuilder.processPostBuild(Graphic graphic)",13,4,5,2,1
"me.umov.refill.dao.AbstractDao.getFieldType(Object value)",11,4,4,2,1
"me.umov.refill.persistence.PersistenceHelper.buildMarkerInfoList(Map<String,String> map)",10,4,11,2,1
"me.umov.refill.builder.map.AbstractMapDataBuilder.mergeFilterValues(List<OnlineFilter> filters, List<OnlineFilter> filterValues)",9,4,5,2,2
"me.umov.refill.builder.map.AbstractMapDataBuilder.getOnlineFilter(List<OnlineFilter> filters, String name)",8,4,3,2,2
"me.umov.refill.model.map.Marker.getMarkerInfo(MarkerInfoKey key)",8,4,2,2,1
"me.umov.refill.builder.chart.ChartDataBuilder.buildContextData(Graphic graphic)",7,4,7,2,1
"me.umov.refill.service.GraphicCacheService.buildCacheData(GraphicCache cache, String token)",35,4,18,1,2
"me.umov.refill.builder.map.TrackingMapDataBuilder.setIcon(Graphic graphic, Marker marker)",15,4,17,1,2
"me.umov.refill.service.GraphicCacheService.handleError(GraphicCache cache, String token, Exception e)",14,4,11,1,3
"me.umov.refill.service.GraphicCacheService.getGraphic(GraphicCache cache)",13,4,2,1,1
"me.umov.refill.model.TableColumnData.equals(Object o)",12,4,8,1,1
"me.umov.refill.model.column.CustomColumns.equals(Object o)",11,4,10,1,1
"me.umov.refill.serialization.SerializerTest.assertValidDataRowFromJson(JsonObject dataObject, GraphicDataRow row)",10,4,15,1,2
"me.umov.refill.serialization.NotEmptyListAdapter.serialize(List<?> list, Type type, JsonSerializationContext context)",10,4,3,1,3
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.getIconType(ScheduleSituation situation)",9,4,0,1,1
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.roundValue(Graphic graphic)",7,4,15,1,1
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.validateCustomColumns(Graphic graphic)",5,4,7,1,1
"me.umov.refill.types.handler.TimeRangeTypeHandler.getValue(OnlineFilter onlineFilter)",12,4,12,0,1
"me.umov.refill.builder.DataBuilderFactory.buildFor(Graphic graphic, GraphicCache cache)",9,4,7,0,2
"me.umov.refill.model.column.Field.equals(Object o)",9,4,5,0,1
"me.umov.refill.model.activity.ActivityField.equals(Object o)",8,4,5,0,1
"me.umov.refill.model.activity.ActivityFieldSoyDTO.equals(Object o)",7,4,4,0,1
"me.umov.refill.builder.widget.AbstractChartDataBuilder.applyFilter(OnlineFilterType filterType, List<OnlineFilter> filters)",14,3,8,3,2
"me.umov.refill.model.Graphic.getOnlineFilter(OnlineFilterType type)",6,3,3,3,1
"me.umov.refill.model.Graphic.addMarker(Marker... markers)",6,3,1,3,1
"me.umov.refill.service.GraphicDataService.groupByContext(List<GraphicDataRow> rows)",16,3,4,2,1
"me.umov.refill.builder.widget.CustomTableDataBuilder.extractDataFromJson(Graphic graphic, String column, String prefix, String fieldName)",10,3,9,2,4
"me.umov.refill.model.column.Entity.filterDistinctFields(List<Field> fields)",10,3,8,2,1
"me.umov.refill.core.ShutdownSigner.readyToStop()",8,3,5,2,0
"me.umov.refill.persistence.GraphicDataRowResultTransformer.transformTuple(Object[] tuple, String[] aliases)",18,3,3,1,2
"me.umov.refill.util.FormatUtils.formatDecimalNumber(BigDecimal valor, int decimalPlaces)",14,3,6,1,2
"me.umov.refill.validator.GeoCoordinateValidator.isValid(String value)",10,3,3,1,1
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.translateRouteToMarkers(Graphic graphic, Route route)",9,3,3,1,2
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.setStaticMarkersInfo(Graphic graphic)",8,3,4,1,1
"me.umov.refill.model.map.MarkerInfo.format(Object o)",8,3,2,1,1
"me.umov.refill.model.GraphicCache.getOnlineFilters()",8,3,2,1,0
"me.umov.refill.core.Process.run()",7,3,3,1,0
"me.umov.refill.dao.AbstractDaoMock.containsCriteria(List<Criterion> criteriaList, String criteria)",6,3,2,1,2
"me.umov.refill.builder.widget.CustomEntitiesRowActionFactory.getRowAction(Graphic graphic)",6,3,2,1,1
"me.umov.refill.util.DateTimeUtils.timeToLiteralHourMinutes(String time)",15,3,21,0,1
"me.umov.refill.types.handler.CharArrayTypeHandler.getValue(OnlineFilter onlineFilter)",13,3,12,0,1
"me.umov.refill.service.AttemptService.verifyAttemptPolicy(GraphicCache cache)",10,3,5,0,1
"me.umov.refill.types.handler.StringTypeHandler.getValue(OnlineFilter onlineFilter)",9,3,3,0,1
"me.umov.refill.builder.widget.AbstractChartDataBuilder.verifyRequiredFilters(GraphicCache cache)",8,2,9,3,1
"me.umov.refill.model.Graphic.getValidRoutes()",5,2,6,3,0
"me.umov.refill.builder.widget.AbstractChartDataBuilder.applyFilters(Graphic graphic, GraphicCache cache)",5,2,3,3,2
"me.umov.refill.model.Graphic.addGraphicFilter(GraphicFilter graphicFilter)",5,2,1,3,1
"me.umov.refill.model.Graphic.addOnlineFilter(OnlineFilter onlineFilter)",5,2,1,3,1
"me.umov.refill.model.Graphic.addFilter(GraphicFilter filter)",4,2,1,3,1
"me.umov.refill.model.Graphic.addRoute(Route route)",4,2,1,3,1
"me.umov.refill.model.Graphic.setDataFilter(GraphicDataFilter dataFilter)",2,2,1,3,1
"me.umov.refill.model.Graphic.setPrimaryEntity(GraphicEntity primaryEntity)",2,2,1,3,1
"me.umov.refill.model.Graphic.setType(GraphicType type)",2,2,1,3,1
"me.umov.refill.dao.AbstractDao.executeQuery(String sql, Map<String,Object> parameters, ResultTransformer transformer)",13,2,12,2,3
"me.umov.refill.builder.map.AbstractMapDataBuilder.buildCacheData(Graphic graphic, GraphicCache currentCache)",12,2,11,2,2
"me.umov.refill.serialization.GraphicDataRowSerializer.serialize(GraphicDataRow row, Type type, JsonSerializationContext context)",9,2,6,2,3
"me.umov.refill.builder.map.AgentTrackingMapDataBuilder.buildIcon(int seq, Marker marker)",8,2,6,2,2
"me.umov.refill.model.map.Marker.getRecursivePlacesList()",8,2,3,2,0
"me.umov.refill.core.ShutdownSigner.waitAllProcessToStop()",8,2,2,2,0
"me.umov.refill.service.GraphicDataService.getBindParameters(Graphic graphic)",7,2,8,2,1
"me.umov.refill.builder.map.AbstractMapDataBuilder.buildOnlineFilters(Graphic graphic, GraphicCache currentCache)",7,2,6,2,2
"me.umov.refill.builder.map.AbstractMapDataBuilder.createDefaultOnlineFilters(Graphic graphic)",7,2,6,2,1
"me.umov.refill.model.map.Marker.setVisibleInfos(MarkerInfoKey... keys)",6,2,11,2,1
"me.umov.refill.dao.AbstractDao.getCriteria(Criterion... criterions)",6,2,4,2,1
"me.umov.refill.template.SoyDataBuilder.fromMap(Map<?,?> map, int deep)",5,2,6,2,2
"me.umov.refill.core.ShutdownSigner.sendStopSignalToAllProcesses()",5,2,5,2,0
"me.umov.refill.builder.chart.ChartDataBuilder.buildData(Graphic graphic)",5,2,3,2,1
"me.umov.refill.template.SoyDataBuilder.fromList(List<?> list, int deep)",5,2,2,2,2
"me.umov.refill.dao.AbstractDao.onRetrieved(List<T> list)",5,2,1,2,1
"me.umov.refill.model.map.Marker.addInfo(MarkerInfo markerInfo)",5,2,1,2,1
"me.umov.refill.builder.widget.CustomTableDataBuilder.validateCustomColumns(GraphicCache cache)",4,2,2,2,1
"me.umov.refill.model.map.Marker.addPath(String encodedPath)",4,2,1,2,1
"me.umov.refill.dao.AbstractDao.firstByCriteria(Criteria criteria)",3,2,5,2,1
"me.umov.refill.dao.AbstractDao.getByCriteria(Criterion... criterions)",3,2,4,2,1
"me.umov.refill.service.GraphicDataService.getMapMarkers(Graphic graphic)",3,2,4,2,1
"me.umov.refill.service.GraphicDataService.getOnlineFilterOptions(Graphic graphic, String filterName)",3,2,3,2,2
"me.umov.refill.service.GraphicDataService.getMapRoutes(Graphic graphic)",3,2,3,2,1
"me.umov.refill.persistence.PersistenceHelper.getJsonMap(Object[] tuple, String[] aliases, String expectedAlias)",3,2,2,2,3
"me.umov.refill.persistence.PersistenceHelper.getLong(Object[] tuple, String[] aliases, String expectedAlias)",3,2,2,2,3
"me.umov.refill.persistence.PersistenceHelper.getMarkerInfoList(Object[] tuple, String[] aliases, String expectedAlias)",3,2,2,2,3
"me.umov.refill.model.map.Marker.getInfoValueAsLocalDateTime(MarkerInfoKey key)",3,2,2,2,1
"me.umov.refill.model.map.Marker.getInfoValueAsLong(MarkerInfoKey key)",3,2,2,2,1
"me.umov.refill.model.map.Marker.getWaitTimeInSeconds()",3,2,1,2,0
"me.umov.refill.persistence.GraphicDataRowResultTransformerTest.shouldCreateAGraphicDataRowBasedOnAResultSetData()",16,2,9,1,0
"me.umov.refill.interceptor.TransactionInterceptor.invoke(MethodInvocation invocation)",16,2,7,1,1
"me.umov.refill.template.SoyDataBuilderTest.shouldConvertAMapToSoyMap()",14,2,20,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldSupportManyDeepLevelsToConvertModelTypes()",13,2,10,1,0
"me.umov.refill.builder.widget.TotalDisplacementDataBuilder.postBuild(Graphic graphic)",12,2,11,1,1
"me.umov.refill.template.SoyDataBuilderTest.shouldSupportManyDeepLevelsToMapComplexTypesWhenConvertingAListOfObjects()",12,2,11,1,0
"me.umov.refill.builder.map.AgentTrackingMapDataBuilderTest.shouldBuildMarkersBasedOnGPSCaptureSequence()",11,2,16,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldConvertAListObjectsIntoASoyListOfMaps()",11,2,10,1,0
"me.umov.refill.model.TableColumnData.TableColumnData(String caption, String name, TableColumnType type, Boolean shouldTranslate)",11,2,0,1,4
"me.umov.refill.core.GraphicUpdateWorker.doUpdateCacheData()",10,2,6,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldAddEachValueOfDataRowAsPropertyIntoJson()",9,2,13,1,0
"me.umov.refill.core.GraphicUpdateManager.schedulePendingGraphicsToUpdate()",9,2,12,1,0
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.setIconBySituation(Graphic graphic, Marker marker)",9,2,8,1,2
"me.umov.refill.core.Process.processSleepTimeExpired()",9,2,3,1,0
"me.umov.refill.service.ActivityFieldService.getByIds(Long clientId, List<Long> activityFieldIds)",8,2,3,1,2
"me.umov.refill.service.CustomFieldService.getByIds(Long clientId, List<String> customFieldIds)",8,2,3,1,2
"me.umov.refill.fixture.CustomFieldFixture.buildList(int size)",8,2,1,1,1
"me.umov.refill.core.Config.environmentProperty()",7,2,4,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.shouldAvailableSpotsBeZeroWhenTheQueueIsTotallyFilled()",7,2,4,1,0
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilder.widgetActions(Graphic graphic)",7,2,3,1,1
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.getCardSubTitle()",7,2,3,1,0
"me.umov.refill.builder.map.TrackingMapDataBuilder.setAdditionalInfo(Graphic graphic, Route route)",6,2,4,1,2
"me.umov.refill.fixture.GraphicDataRowFixture.withStringArrayValue(int size)",6,2,4,1,1
"me.umov.refill.builder.map.AbstractMapRouteDataBuilder.processPostBuild(Graphic graphic)",6,2,3,1,1
"me.umov.refill.fixture.EntityFixture.withCustomFields(Field... fields)",6,2,2,1,1
"me.umov.refill.fixture.EntityFixture.withFields(Field... fields)",6,2,2,1,1
"me.umov.refill.model.column.CustomColumns.getCustomFieldsFromEntity(Entity entity)",6,2,1,1,1
"me.umov.refill.model.column.CustomColumns.getFieldsFromEntity(Entity entity)",6,2,1,1,1
"me.umov.refill.persistence.GraphicDataRowResultTransformerTest.generateValues(int size)",6,2,1,1,1
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.translateRoutesToMarkers(Graphic graphic)",5,2,3,1,1
"me.umov.refill.builder.map.TrackingMapDataBuilder.processPostMapBuild(Graphic graphic)",5,2,2,1,1
"me.umov.refill.model.column.CustomColumns.adjustEntityFields(Entity e)",5,2,2,1,1
"me.umov.refill.model.GraphicCache.increaseAttempt()",5,2,1,1,0
"me.umov.refill.core.Config.getConfiguration()",5,2,0,1,0
"me.umov.refill.model.map.MarkerInfo.addAnchor(Map<String,String> map, String key, MarkerInfoKey reference, MarkerInfoKey anchor)",4,2,4,1,4
"me.umov.refill.core.GraphicUpdateQueue.add(List<String> tokens)",4,2,1,1,1
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.setMarkerIcon(IconConfigType iconConfig, DeliveryTrackingMapIconType iconType, Marker marker)",3,2,5,1,3
"me.umov.refill.dao.AbstractDaoMock.assertContainsCriteria(List<Criterion> criteriaList, String expectedCriteria)",3,2,3,1,2
"me.umov.refill.dao.AbstractDaoMock.assertNotContainsCriteria(List<Criterion> criteriaList, String expectedCriteria)",3,2,3,1,2
"me.umov.refill.model.GraphicCache.setCacheType(CacheType cacheType)",2,2,1,1,1
"me.umov.refill.model.map.MarkerInfo.getValueAsLocalDateTime()",2,2,1,1,0
"me.umov.refill.model.map.MarkerInfo.getValueAsLong()",2,2,1,1,0
"me.umov.refill.dao.GraphicCacheDao.findNewAndExpiredGraphicsWithoutError(List<String> notInTokens, Integer limit)",14,2,15,0,2
"me.umov.refill.core.GraphicRemovalManager.doProcess()",12,2,11,0,0
"me.umov.refill.types.handler.DateAsDatetimeRangeTypeHandler.getValue(OnlineFilter onlineFilter)",10,2,9,0,1
"me.umov.refill.util.MediaIconHelper.getIcon(List<GraphicIcon> customIcons, Long identifier, String defaultIcon)",9,2,9,0,3
"me.umov.refill.types.handler.DateEndOfDayTypeHandler.getValue(OnlineFilter onlineFilter)",9,2,8,0,1
"me.umov.refill.model.GraphicFilter.GraphicFilter(String entity, String field, String operator, Object bindingValue, boolean useBinding, String castType, String onlineFilterType)",9,2,2,0,7
"me.umov.refill.types.handler.DateTypeHandler.getValue(OnlineFilter onlineFilter)",8,2,7,0,1
"me.umov.refill.types.handler.AnyArrayTypeHandler.getValue(OnlineFilter onlineFilter)",8,2,6,0,1
"me.umov.refill.service.GraphicService.findBy(GraphicCache cache)",8,2,4,0,1
"me.umov.refill.persistence.ArrayAsListType.nullSafeGet(ResultSet rs, String[] names, SessionImplementor session, Object owner)",8,2,2,0,4
"me.umov.refill.persistence.RouteTransportModeTransformer.transformList(List list)",8,2,2,0,1
"me.umov.refill.validator.MarkerValidator.isValid(Marker marker)",7,2,6,0,1
"me.umov.refill.types.handler.LongArrayTypeHandler.getValue(OnlineFilter onlineFilter)",6,2,7,0,1
"me.umov.refill.template.TemplateServiceTest.shouldGenerateAGroupByClauseToEachExistingGroup()",6,2,5,0,0
"me.umov.refill.template.TemplateServiceTest.shouldGenerateASelectEntryForEachGroupIntoQuery()",6,2,5,0,0
"me.umov.refill.template.TemplateServiceTest.shouldGenerateASelectEntryForEachMetricIntoQuery()",6,2,5,0,0
"me.umov.refill.types.handler.LongTypeHandler.getValue(OnlineFilter onlineFilter)",6,2,4,0,1
"me.umov.refill.persistence.ArrayAsListType.nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor session)",6,2,3,0,4
"me.umov.refill.persistence.IntervalAsStringType.nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor session)",6,2,3,0,4
"me.umov.refill.persistence.JsonAsStringType.nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor session)",6,2,3,0,4
"me.umov.refill.model.Metric.Metric(String identifier, Object value, Integer x, Integer y)",5,2,7,0,4
"me.umov.refill.injection.TransactionManager.beginTransaction(SessionFactory sessionFactory)",5,2,3,0,1
"me.umov.refill.injection.TransactionManager.endTransaction(SessionFactory sessionFactory)",5,2,3,0,1
"me.umov.refill.injection.TransactionManager.rollbackTransaction(SessionFactory sessionFactory)",5,2,3,0,1
"me.umov.refill.model.map.Route.setTransportMode(RouteTransportMode transportMode)",5,2,1,0,1
"me.umov.refill.injection.InjectorCreator.createInjector()",5,2,1,0,0
"me.umov.refill.service.AttemptService.getConfig()",5,2,1,0,0
"me.umov.refill.util.TestUtils.assertArrayEquals(Object[] expected, Object[] current)",4,2,2,0,2
"me.umov.refill.model.column.Field.identifyQueryCastType()",4,2,2,0,0
"me.umov.refill.template.TemplateServiceTest.getSQLPart(Pattern pattern, String sql)",3,2,3,0,2
"me.umov.refill.injection.TransactionManager.begin()",3,2,2,0,0
"me.umov.refill.injection.TransactionManager.end()",3,2,2,0,0
"me.umov.refill.injection.TransactionManager.rollback()",3,2,2,0,0
"me.umov.refill.persistence.ArrayAsListType.equals(Object a, Object b)",3,2,1,0,2
"me.umov.refill.persistence.IntervalAsStringType.equals(Object a, Object b)",3,2,1,0,2
"me.umov.refill.persistence.JsonAsStringType.equals(Object a, Object b)",3,2,1,0,2
"me.umov.refill.persistence.LongArrayType.equals(Object x, Object y)",3,2,1,0,2
"me.umov.refill.persistence.LongArrayType.deepCopy(Object o)",3,2,1,0,1
"me.umov.refill.persistence.LongArrayType.hashCode(Object o)",3,2,1,0,1
"me.umov.refill.util.ListUtils.lastOf(List<T> list)",2,2,3,0,1
"me.umov.refill.util.ListUtils.firstOf(List<T> list)",2,2,2,0,1
"me.umov.refill.model.ScheduleDBViewEnvironment.setStatus(DBViewEnvironmentStatus status)",2,2,1,0,1
"me.umov.refill.builder.widget.AbstractChartDataBuilder.buildCacheData(Graphic graphic, GraphicCache cache)",14,1,15,3,2
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumn.buildTableColumnData(Field field, CustomField customField)",8,1,10,3,2
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumn.columnData(List<Field> itemFields)",8,1,10,3,1
"me.umov.refill.builder.widget.customtable.ActivityCustomColumn.buildColumnData(Field field, ActivityField activityField)",8,1,9,3,2
"me.umov.refill.builder.widget.customtable.ActivityCustomColumn.getActivityFields(CustomColumns customColumns, Long clientId)",7,1,8,3,2
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumn.getColumnData(CustomColumns customColumns, Long clientId)",7,1,6,3,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.widgetActions(Graphic graphic)",7,1,1,3,1
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumn.getCustomFields(List<Field> customFields, Long clientId)",6,1,5,3,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.preBuild(Graphic graphic, GraphicCache cache)",4,1,2,3,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.AbstractChartDataBuilder(WidgetType widgetType, GraphicType graphicType)",3,1,0,3,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,0,3,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,0,3,2
"me.umov.refill.builder.widget.AbstractChartDataBuilder.postBuild(Graphic graphic)",3,1,0,3,1
"me.umov.refill.model.Graphic.setId(Long id)",3,1,0,3,1
"me.umov.refill.model.Graphic.getId()",3,1,0,3,0
"me.umov.refill.builder.widget.AbstractChartDataBuilder.getOnlineFilter(List<OnlineFilter> filters, OnlineFilterType type)",2,1,8,3,2
"me.umov.refill.model.Graphic.setOnlineFilters(OnlineFilter... onlineFilters)",2,1,2,3,1
"me.umov.refill.model.Graphic.hasAggregation()",2,1,2,3,0
"me.umov.refill.model.Graphic.isTaskEntity()",2,1,2,3,0
"me.umov.refill.model.Graphic.Graphic(GraphicCache cache)",2,1,1,3,1
"me.umov.refill.builder.widget.AbstractChartDataBuilder.getAllowedFilters()",2,1,1,3,0
"me.umov.refill.builder.widget.AbstractChartDataBuilder.requiredFilters()",2,1,1,3,0
"me.umov.refill.model.Graphic.getDataFilter()",2,1,1,3,0
"me.umov.refill.model.Graphic.getIconsConfig()",2,1,1,3,0
"me.umov.refill.model.Graphic.getPrimaryEntity()",2,1,1,3,0
"me.umov.refill.model.Graphic.getType()",2,1,1,3,0
"me.umov.refill.builder.widget.AbstractChartDataBuilder.setCache(GraphicCache cache)",2,1,0,3,1
"me.umov.refill.model.Graphic.setAgentData(List<AgentDataRow> agentData)",2,1,0,3,1
"me.umov.refill.model.Graphic.setCardData(CardData cardData)",2,1,0,3,1
"me.umov.refill.model.Graphic.setChartData(ChartData chartData)",2,1,0,3,1
"me.umov.refill.model.Graphic.setClientId(Long clientId)",2,1,0,3,1
"me.umov.refill.model.Graphic.setContextData(Map<Object,List<GraphicDataRow>> contextData)",2,1,0,3,1
"me.umov.refill.model.Graphic.setCustomColumns(CustomColumns customColumns)",2,1,0,3,1
"me.umov.refill.model.Graphic.setData(List<GraphicDataRow> data)",2,1,0,3,1
"me.umov.refill.model.Graphic.setDescription(String description)",2,1,0,3,1
"me.umov.refill.model.Graphic.setEntity(String entity)",2,1,0,3,1
"me.umov.refill.model.Graphic.setFilters(List<GraphicFilter> filters)",2,1,0,3,1
"me.umov.refill.model.Graphic.setGenerationTimestamp(Long generationTimestamp)",2,1,0,3,1
"me.umov.refill.model.Graphic.setGroupedBars(Boolean groupedBars)",2,1,0,3,1
"me.umov.refill.model.Graphic.setGroups(List<GraphicGroup> groups)",2,1,0,3,1
"me.umov.refill.model.Graphic.setIcons(List<GraphicIcon> icons)",2,1,0,3,1
"me.umov.refill.model.Graphic.setMarkers(List<Marker> markers)",2,1,0,3,1
"me.umov.refill.model.Graphic.setMetrics(List<GraphicMetric> metrics)",2,1,0,3,1
"me.umov.refill.model.Graphic.setOnlineFilters(List<OnlineFilter> onlineFilters)",2,1,0,3,1
"me.umov.refill.model.Graphic.setOrderBy(Character orderBy)",2,1,0,3,1
"me.umov.refill.model.Graphic.setOrderByWhenGraphicTableIsMetric(boolean orderByWhenGraphicTableIsMetric)",2,1,0,3,1
"me.umov.refill.model.Graphic.setReferenceId(Long referenceId)",2,1,0,3,1
"me.umov.refill.model.Graphic.setRoutes(List<Route> routes)",2,1,0,3,1
"me.umov.refill.model.Graphic.setSql(String sql)",2,1,0,3,1
"me.umov.refill.model.Graphic.setTableData(TableData tableData)",2,1,0,3,1
"me.umov.refill.model.Graphic.setToken(String token)",2,1,0,3,1
"me.umov.refill.model.Graphic.setVisibleBarsOnBarChart(Long visibleBarsOnBarChart)",2,1,0,3,1
"me.umov.refill.model.Graphic.setVisibleLinesOnTable(Long visibleLinesOnTable)",2,1,0,3,1
"me.umov.refill.model.Graphic.setVisibleSectorsOnPieChart(Long visibleSectorsOnPieChart)",2,1,0,3,1
"me.umov.refill.model.Graphic.setWidgetActions(List<WidgetActionType> widgetActions)",2,1,0,3,1
"me.umov.refill.model.Graphic.setWidgetTemplate(WidgetTemplates widgetTemplate)",2,1,0,3,1
"me.umov.refill.model.Graphic.setWidgetType(WidgetType widgetType)",2,1,0,3,1
"me.umov.refill.builder.widget.AbstractChartDataBuilder.getWidgetType()",2,1,0,3,0
"me.umov.refill.model.Graphic.getAgentData()",2,1,0,3,0
"me.umov.refill.model.Graphic.getCardData()",2,1,0,3,0
"me.umov.refill.model.Graphic.getChartData()",2,1,0,3,0
"me.umov.refill.model.Graphic.getClientId()",2,1,0,3,0
"me.umov.refill.model.Graphic.getContextData()",2,1,0,3,0
"me.umov.refill.model.Graphic.getCustomColumns()",2,1,0,3,0
"me.umov.refill.model.Graphic.getData()",2,1,0,3,0
"me.umov.refill.model.Graphic.getDescription()",2,1,0,3,0
"me.umov.refill.model.Graphic.getEntity()",2,1,0,3,0
"me.umov.refill.model.Graphic.getFilters()",2,1,0,3,0
"me.umov.refill.model.Graphic.getGenerationTimestamp()",2,1,0,3,0
"me.umov.refill.model.Graphic.getGroupedBars()",2,1,0,3,0
"me.umov.refill.model.Graphic.getGroups()",2,1,0,3,0
"me.umov.refill.model.Graphic.getIcons()",2,1,0,3,0
"me.umov.refill.model.Graphic.getMarkers()",2,1,0,3,0
"me.umov.refill.model.Graphic.getMetrics()",2,1,0,3,0
"me.umov.refill.model.Graphic.getOnlineFilters()",2,1,0,3,0
"me.umov.refill.model.Graphic.getOrderBy()",2,1,0,3,0
"me.umov.refill.model.Graphic.getReferenceId()",2,1,0,3,0
"me.umov.refill.model.Graphic.getRoutes()",2,1,0,3,0
"me.umov.refill.model.Graphic.getSql()",2,1,0,3,0
"me.umov.refill.model.Graphic.getTableData()",2,1,0,3,0
"me.umov.refill.model.Graphic.getToken()",2,1,0,3,0
"me.umov.refill.model.Graphic.getVisibleBarsOnBarChart()",2,1,0,3,0
"me.umov.refill.model.Graphic.getVisibleLinesOnTable()",2,1,0,3,0
"me.umov.refill.model.Graphic.getVisibleSectorsOnPieChart()",2,1,0,3,0
"me.umov.refill.model.Graphic.getWidgetActions()",2,1,0,3,0
"me.umov.refill.model.Graphic.getWidgetTemplate()",2,1,0,3,0
"me.umov.refill.model.Graphic.getWidgetType()",2,1,0,3,0
"me.umov.refill.model.Graphic.isOrderByWhenGraphicTableIsMetric()",2,1,0,3,0
"me.umov.refill.model.Graphic.Graphic()",1,1,0,3,0
"me.umov.refill.builder.widget.CustomTableDataBuilder.preBuild(Graphic graphic, GraphicCache cache)",9,1,8,2,2
"me.umov.refill.builder.widget.CustomTableDataBuilder.postBuild(Graphic graphic)",9,1,5,2,1
"me.umov.refill.core.ShutdownSigner.run()",9,1,4,2,0
"me.umov.refill.builder.widget.CustomTableDataBuilder.CustomTableDataBuilder(Long clientId)",9,1,0,2,1
"me.umov.refill.model.column.Entity.processFieldsToTemplate()",7,1,6,2,0
"me.umov.refill.model.map.Marker.clone()",7,1,2,2,0
"me.umov.refill.builder.chart.ChartDataBuilder.buildCacheData(Graphic graphic, GraphicCache currentCache)",6,1,7,2,2
"me.umov.refill.persistence.PersistenceHelper.getObject(Object[] tuple, String[] aliases, String expectedAlias)",6,1,1,2,3
"me.umov.refill.builder.map.AbstractMapDataBuilder.getOnlineFilterTypes()",6,1,0,2,0
"me.umov.refill.builder.widget.CustomTableDataBuilder.getAllowedFilters()",5,1,1,2,0
"me.umov.refill.builder.widget.CustomTableDataBuilder.adjustFieldsForTemplate(Graphic graphic)",4,1,9,2,1
"me.umov.refill.builder.map.AbstractMapDataBuilder.shouldBuildCache(Graphic graphic, GraphicCache currentCache)",4,1,5,2,2
"me.umov.refill.dao.AbstractDao.countByCriteria(Criterion... criterions)",4,1,4,2,1
"me.umov.refill.template.SoyDataBuilder.fromInstance(String name, Object instance, int deep)",4,1,2,2,3
"me.umov.refill.builder.map.AbstractMapDataBuilder.processPostBuild(Graphic graphic)",4,1,0,2,1
"me.umov.refill.geo.CabralGeoProcessor.route(Route route)",3,1,5,2,1
"me.umov.refill.service.GraphicDataService.getChartDataRows(Graphic graphic)",3,1,4,2,1
"me.umov.refill.service.GraphicDataService.getWidgetChartDataRows(WidgetType widgetType, Graphic graphic)",3,1,3,2,2
"me.umov.refill.dao.AbstractDao.save(T instance)",3,1,3,2,1
"me.umov.refill.service.GraphicDataService.getChartDataRowsByContext(Graphic graphic)",3,1,3,2,1
"me.umov.refill.geo.CabralGeoProcessor.route(Long clientId, List<Marker> markers, RouteTransportMode transportMode)",3,1,1,2,3
"me.umov.refill.builder.widget.CustomTableDataBuilder.getColumns()",3,1,1,2,0
"me.umov.refill.model.map.Marker.Marker(Long id, String position)",3,1,0,2,2
"me.umov.refill.builder.widget.CustomTableDataBuilder.rowAction(Graphic graphic)",3,1,0,2,1
"me.umov.refill.builder.map.AgentTrackingMapDataBuilder.getOnlineFilterTypes()",3,1,0,2,0
"me.umov.refill.model.map.Marker.getInfo(MarkerInfoKey key)",2,1,7,2,1
"me.umov.refill.dao.AbstractDao.findByCriteria(Criterion... criterions)",2,1,3,2,1
"me.umov.refill.model.map.Marker.validate()",2,1,3,2,0
"me.umov.refill.dao.AbstractDao.executeQuery(String sql, ResultTransformer transformer)",2,1,2,2,2
"me.umov.refill.dao.AbstractDao.countByCriteria(List<Criterion> criterions)",2,1,2,2,1
"me.umov.refill.dao.AbstractDao.delete(T instance)",2,1,2,2,1
"me.umov.refill.dao.AbstractDao.findByCriteria(List<Criterion> criterions)",2,1,2,2,1
"me.umov.refill.dao.AbstractDao.findById(Long id)",2,1,2,2,1
"me.umov.refill.dao.AbstractDao.getCriteria(List<Criterion> criterions)",2,1,2,2,1
"me.umov.refill.dao.AbstractDao.getSession()",2,1,2,2,0
"me.umov.refill.persistence.PersistenceHelper.getString(Object[] tuple, String[] aliases, String expectedAlias)",2,1,1,2,3
"me.umov.refill.model.map.Marker.addInfo(MarkerInfoKey key, Object value)",2,1,1,2,2
"me.umov.refill.template.SoyDataBuilder.fromInstance(String name, Object instance)",2,1,1,2,2
"me.umov.refill.core.ShutdownSigner.registerProcess(Process process)",2,1,1,2,1
"me.umov.refill.dao.AbstractDao.existsByCriteria(Criterion... criterions)",2,1,1,2,1
"me.umov.refill.dao.AbstractDao.existsByCriteria(List<Criterion> criterions)",2,1,1,2,1
"me.umov.refill.dao.AbstractDao.initialize(Object proxy)",2,1,1,2,1
"me.umov.refill.model.map.Marker.setDistance(Long distanceInMeters)",2,1,1,2,1
"me.umov.refill.model.map.Marker.setEstimationTime(LocalDateTime estimationTime)",2,1,1,2,1
"me.umov.refill.model.map.Marker.setForecastStartDate(LocalDateTime forecastStartDate)",2,1,1,2,1
"me.umov.refill.model.map.Marker.setWaitTime(Long waitTime)",2,1,1,2,1
"me.umov.refill.template.SoyDataBuilder.fromInstance(Object instance)",2,1,1,2,1
"me.umov.refill.template.SoyDataBuilder.fromList(List<?> list)",2,1,1,2,1
"me.umov.refill.template.SoyDataBuilder.fromMap(Map<?,?> map)",2,1,1,2,1
"me.umov.refill.template.SoyDataBuilder.fromValue(Object value)",2,1,1,2,1
"me.umov.refill.dao.AbstractDao.findAll()",2,1,1,2,0
"me.umov.refill.dao.AbstractDao.getModelClass()",2,1,1,2,0
"me.umov.refill.model.column.Entity.fixCustomFieldsToTemplate()",2,1,1,2,0
"me.umov.refill.model.column.Entity.getCustomFields()",2,1,1,2,0
"me.umov.refill.model.column.Entity.getFields()",2,1,1,2,0
"me.umov.refill.model.map.Marker.getDistance()",2,1,1,2,0
"me.umov.refill.model.map.Marker.getEntryId()",2,1,1,2,0
"me.umov.refill.model.map.Marker.getEstimationTime()",2,1,1,2,0
"me.umov.refill.model.map.Marker.getForecastStartDate()",2,1,1,2,0
"me.umov.refill.model.map.Marker.getWaitTime()",2,1,1,2,0
"me.umov.refill.builder.widget.CustomTableDataBuilder.CustomTableDataBuilder(WidgetType widgetType)",2,1,0,2,1
"me.umov.refill.dao.AbstractDao.onRetrieved(T instance)",2,1,0,2,1
"me.umov.refill.model.column.Entity.setCustomFields(List<Field> customFields)",2,1,0,2,1
"me.umov.refill.model.column.Entity.setEntityId(Long entityId)",2,1,0,2,1
"me.umov.refill.model.column.Entity.setFields(List<Field> fields)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setDescription(String description)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setIcon(String icon)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setId(Long id)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setInfo(List<MarkerInfo> info)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setNextPlace(Marker nextPlace)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setPath(List<String> path)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setPosition(String position)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setRouteId(Long routeId)",2,1,0,2,1
"me.umov.refill.model.map.Marker.setValid(boolean valid)",2,1,0,2,1
"me.umov.refill.builder.widget.CustomTableDataBuilder.getClientId()",2,1,0,2,0
"me.umov.refill.builder.widget.CustomTableDataBuilder.getCustomColumns()",2,1,0,2,0
"me.umov.refill.model.column.Entity.getEntityId()",2,1,0,2,0
"me.umov.refill.model.map.Marker.Marker()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getDescription()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getIcon()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getId()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getInfo()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getNextPlace()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getPath()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getPosition()",2,1,0,2,0
"me.umov.refill.model.map.Marker.getRouteId()",2,1,0,2,0
"me.umov.refill.model.map.Marker.isRouteFirstPlace()",2,1,0,2,0
"me.umov.refill.model.map.Marker.isValid()",2,1,0,2,0
"me.umov.refill.model.map.Marker.setRouteFirstPlace()",2,1,0,2,0
"me.umov.refill.persistence.RouteResultTransformer.get()",2,1,0,2,0
"me.umov.refill.dao.AbstractDao.getSessionFactory()",0,1,0,2,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.shouldMapCustomFieldsJsonToKeyValue()",30,1,33,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.shouldMapFieldsJsonToKeyValue()",30,1,33,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.shouldRemoveWhiteSpacesFromCustomFieldsIds()",21,1,48,1,0
"me.umov.refill.serialization.SerializerTest.setUp()",18,1,42,1,0
"me.umov.refill.serialization.SerializerTest.shouldSucessfullDeserializeOnlineFiltersFromJson()",17,1,23,1,0
"me.umov.refill.core.GraphicUpdateWorker.run()",15,1,10,1,0
"me.umov.refill.interceptor.TransactionInterceptorTest.shouldRollbackTransactionWhenAndErrorOccursDuringExecutionWhenCallMethodsAnnotatedWithTransactional()",14,1,15,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldRenderHashMapNullValuesOnJson()",14,1,15,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldConvertMapAttributeIntoASoyMapDataWhenTheresDeepLevelToConvert()",13,1,16,1,0
"me.umov.refill.model.column.CustomColumns.initFieldsForTemplate()",13,1,11,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.shouldAddALisOfTokensToAQueue()",13,1,9,1,0
"me.umov.refill.validator.GeoCoordinateValidator.verifyCoordinates(String latValue, String lngValue)",13,1,2,1,2
"me.umov.refill.model.TableColumnData.toString()",13,1,0,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.shouldNotThrowExceptionWhenCustomColumnsAreInformed()",12,1,15,1,0
"me.umov.refill.model.column.CustomColumns.getCustomFields()",12,1,14,1,0
"me.umov.refill.model.column.CustomColumns.getFields()",12,1,14,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldConvertListAttributeIntoASoyListDataWhenTheresDeepLevelToConvert()",12,1,14,1,0
"me.umov.refill.RefillTest.shouldStartUpdateManagerService()",12,1,5,1,0
"me.umov.refill.RefillTest.shouldStartRemovalManagerService()",12,1,4,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.shouldSetClientIdAndCustomColumnsOnPostBuildMethod()",11,1,12,1,0
"me.umov.refill.serialization.SerializerTest.shouldNotSerializeEmptyListsIntoJson()",10,1,15,1,0
"me.umov.refill.persistence.GraphicDataRowResultTransformerTest.shouldSetContextKeyToDataRowInsteadOfValueWhenTheAliasKeyIsContextKey()",10,1,10,1,0
"me.umov.refill.serialization.SerializerTest.assertValidGraphicFromJson()",9,1,34,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldSerializeBooleanValueAsBooleanToJson()",9,1,15,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldSerializeCharacterValueAsStringToJson()",9,1,15,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldSerializeNumberValueAsNumberToJson()",9,1,15,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldSerializeStringArrayAsStringArrayToJson()",9,1,15,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldSerializeStringValueAsStringToJson()",9,1,14,1,0
"me.umov.refill.serialization.SerializerTest.shouldSerializedGraphicGroupsIntoJson()",9,1,14,1,0
"me.umov.refill.serialization.SerializerTest.shouldSerializeGraphicDataFieldIntoJson()",9,1,12,1,0
"me.umov.refill.serialization.SerializerTest.shouldSerializeGraphicMetricDataWhenTheresOnlyOneMetricEqualsToMoreThanOneMetric()",9,1,12,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldCreateAMapWithTheConvertedTypeWhenTHeresANameIntoConversiong()",9,1,11,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldNotConvertMapAttributeIntoASoyListDataWhenTheresNoDeepLevelToConvert()",9,1,10,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldAddComplexReferencesWhenConvertingAModelAndTheresADeepLevel()",9,1,9,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldRespectTheDeepLevelEvenIfTheresValueMappedToComplexType()",9,1,9,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.shouldRetrieveCurrentQueueTokens()",9,1,7,1,0
"me.umov.refill.dao.AbstractDaoMock.before()",9,1,7,1,0
"me.umov.refill.geo.DirectionsService.buildRequest(Long clientId, List<Marker> markers, RouteTransportMode transportMode)",8,1,15,1,3
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilder.preBuild(Graphic graphic, GraphicCache cache)",8,1,12,1,2
"me.umov.refill.serialization.SerializerTest.shouldSerializeGraphicMetricDataAsAGraphicField()",8,1,11,1,0
"me.umov.refill.geo.DirectionsService.getDirections(Long clientId, List<Marker> markers, RouteTransportMode transportMode)",8,1,10,1,3
"me.umov.refill.RefillTest.setUp()",8,1,10,1,0
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.createDeliveryStart(Graphic graphic, Marker startPoint, Marker endPoint)",8,1,9,1,3
"me.umov.refill.template.SoyDataBuilderTest.shouldNotConvertListAttributeIntoASoyListDataWhenTheresNoDeepLevelToConvert()",8,1,9,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldNotAddComplexReferencesWhenConvertingModelAndHasNoDeepLevel()",8,1,8,1,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilder.buildRouteData(Graphic graphic, Route route)",8,1,7,1,2
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.preBuild(Graphic graphic, GraphicCache cache)",8,1,7,1,2
"me.umov.refill.core.GraphicUpdateQueueTest.shouldSuccessfullDecreaseTheQueueWhenAnUpdateFinish()",8,1,6,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.givenThatUpdateWorkerIsCalled(String token)",8,1,5,1,1
"me.umov.refill.core.Config.getDeleteMapLimit()",8,1,3,1,0
"me.umov.refill.core.GraphicUpdateManager.doProcess()",8,1,2,1,0
"me.umov.refill.interceptor.TransactionInterceptorTest.shouldJustIgnoreMethodsNotAnnotatedWithTransactional()",7,1,9,1,0
"me.umov.refill.interceptor.TransactionInterceptorTest.shouldBeginTransactionBeforeCallMethodsAnnotatedWithTransactional()",7,1,8,1,0
"me.umov.refill.serialization.SerializerTest.shouldSerializedGraphicFiltersIntoJson()",7,1,8,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldJustRetrieveNullWhenValueTooSerializeIsNull()",7,1,7,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldConvertAComplexObjectToASoyMapData()",7,1,6,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldNotAddStaticFieldsToDataMapWhenConvertingAModel()",7,1,5,1,0
"me.umov.refill.model.builder.TableDataBuilder.withGraphicData(List<GraphicDataRow> graphicData)",7,1,4,1,1
"me.umov.refill.core.Config.Config()",7,1,4,1,0
"me.umov.refill.template.SoyDataBuilderTest.shouldJustConvertPrimitiveValuesToSoyData()",7,1,4,1,0
"me.umov.refill.model.CardData.hasNumericValue()",7,1,1,1,0
"me.umov.refill.builder.map.AgentTrackingMapDataBuilderTest.shouldBuildMarkerBasedOnGPSAgentCapture()",6,1,13,1,0
"me.umov.refill.builder.map.AgentTrackingMapDataBuilderTest.shouldBuildMarkerBasedOnGPSScheduleExecution()",6,1,13,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.setUp()",6,1,11,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.shouldThrowExceptionWhenCustomColumnsAreNotInformed()",6,1,8,1,0
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.createDeliveryPlace(Graphic graphic, Marker marker)",6,1,5,1,2
"me.umov.refill.core.Process.runProcess()",6,1,5,1,0
"me.umov.refill.builder.map.AgentTrackingMapDataBuilderTest.shouldRetrieveTheExpectedFilterTypes()",6,1,4,1,0
"me.umov.refill.core.Config.environmentFilePath()",6,1,4,1,0
"me.umov.refill.core.Process.sleepThread()",6,1,1,1,0
"me.umov.refill.persistence.GraphicDataRowResultTransformer.isTransformedValueATupleElement(String[] aliases, int tupleLength)",6,1,0,1,2
"me.umov.refill.dao.AbstractDaoMock.setUpSession()",5,1,16,1,0
"me.umov.refill.core.GraphicUpdateQueue.GraphicUpdateQueue()",5,1,6,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.shouldAvailableSpostsBeDecreasedAfterAddToQueue()",5,1,4,1,0
"me.umov.refill.core.GraphicUpdateQueueTest.shouldRetrieveTheCurrentQueueSize()",5,1,4,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.shouldSerializeGraphicDataRowIntoJson()",5,1,4,1,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.postBuild(Graphic graphic)",5,1,2,1,1
"me.umov.refill.serialization.SerializerTest.shouldSerializeGraphicDataAsRootEntity()",5,1,2,1,0
"me.umov.refill.serialization.SerializerTest.assertValidGroupFromJson(JsonObject jsonGroup, GraphicGroup group)",4,1,14,1,2
"me.umov.refill.core.GraphicUpdateQueueTest.shouldQueueBeEmptyAtStart()",4,1,5,1,0
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.createDeliveryMarkers(Graphic graphic, Marker startPoint, Marker endPoint)",4,1,3,1,3
"me.umov.refill.serialization.SerializerTest.givenImSerializingAGraphic()",4,1,3,1,0
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.processPostMapBuild(Graphic graphic)",4,1,2,1,1
"me.umov.refill.fixture.CustomFieldFixture.isAudio()",4,1,2,1,0
"me.umov.refill.fixture.CustomFieldFixture.isImage()",4,1,2,1,0
"me.umov.refill.fixture.CustomFieldFixture.isPdf()",4,1,2,1,0
"me.umov.refill.fixture.CustomFieldFixture.isUrl()",4,1,2,1,0
"me.umov.refill.fixture.CustomFieldFixture.isVideo()",4,1,2,1,0
"me.umov.refill.service.GraphicCacheService.save(GraphicCache cache)",4,1,1,1,1
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilder.getAllowedFilters()",4,1,1,1,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.getAllowedFilters()",4,1,1,1,0
"me.umov.refill.core.GraphicUpdateWorker.build(String token, GraphicUpdateQueue queue)",4,1,0,1,2
"me.umov.refill.model.column.CustomColumns.identifyAgregations()",3,1,10,1,0
"me.umov.refill.serialization.SerializerTest.assertValidFilterFromJson(JsonObject jsonFilter, GraphicFilter filter)",3,1,9,1,2
"me.umov.refill.serialization.SerializerTest.assertValidMetricFromJson(JsonObject jsonMetric, GraphicMetric metric)",3,1,9,1,2
"me.umov.refill.dao.AbstractDaoMock.setUpCriteria()",3,1,9,1,0
"me.umov.refill.template.SoyDataBuilderTest.assertValidModel(TestModel model, SoyMapData data)",3,1,7,1,2
"me.umov.refill.dao.AbstractDaoMock.assertOrder(String expecrtedOrder)",3,1,7,1,1
"me.umov.refill.dao.AbstractDaoMock.assertCriteria(String expectedCriteria)",3,1,5,1,1
"me.umov.refill.core.GraphicUpdateQueue.add(String token)",3,1,4,1,1
"me.umov.refill.builder.map.AbstractMapRouteDataBuilder.setRouteDefinitions(Graphic graphic, Route route)",3,1,2,1,2
"me.umov.refill.service.GraphicCacheService.invalidateCache(GraphicCache cache)",3,1,2,1,1
"me.umov.refill.core.GraphicUpdateManager.getSleepTime()",3,1,2,1,0
"me.umov.refill.persistence.GraphicDataRowResultTransformerTest.shouldAlwaysRetrieveFalseToIsTransformedValueATupleElement()",3,1,2,1,0
"me.umov.refill.builder.widget.AbstractCardDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,1,2
"me.umov.refill.fixture.GraphicDataRowFixture.withValue(String name, Object value)",3,1,1,1,2
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilder.rowAction(Graphic graphic)",3,1,1,1,1
"me.umov.refill.fixture.CustomFieldFixture.withId(String id)",3,1,1,1,1
"me.umov.refill.fixture.GraphicDataRowFixture.withContextKey(Object key)",3,1,1,1,1
"me.umov.refill.model.builder.TableDataBuilder.withColumns(List<TableColumnData> columns)",3,1,1,1,1
"me.umov.refill.model.builder.TableDataBuilder.withRowAction(TableRowActionType rowAction)",3,1,1,1,1
"me.umov.refill.model.builder.TableDataBuilder.withTitle(String title)",3,1,1,1,1
"me.umov.refill.model.map.MarkerInfo.MarkerInfo(MarkerInfoKey key)",3,1,1,1,1
"me.umov.refill.service.GraphicCacheService.findByToken(String token)",3,1,1,1,1
"me.umov.refill.builder.map.AgentTrackingMapDataBuilderTest.setUp()",3,1,1,1,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.requiredFilters()",3,1,1,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderTest.setup()",3,1,1,1,0
"me.umov.refill.builder.widget.TotalDisplacementDataBuilder.getAllowedFilters()",3,1,1,1,0
"me.umov.refill.builder.widget.TotalDisplacementDataBuilder.getCardSubTitle()",3,1,1,1,0
"me.umov.refill.core.GraphicUpdateManager.isReadyToStop()",3,1,1,1,0
"me.umov.refill.fixture.CustomFieldFixture.isDate()",3,1,1,1,0
"me.umov.refill.interceptor.TransactionInterceptorTest.setUp()",3,1,1,1,0
"me.umov.refill.model.TableColumnData.hashCode()",3,1,1,1,0
"me.umov.refill.model.column.CustomColumns.hashCode()",3,1,1,1,0
"me.umov.refill.persistence.GraphicDataRowResultTransformerTest.setUp()",3,1,1,1,0
"me.umov.refill.serialization.GraphicDataRowSerializerTest.setUp()",3,1,1,1,0
"me.umov.refill.model.TableColumnData.TableColumnData(String caption, String name, int order, TableColumnType type)",3,1,0,1,4
"me.umov.refill.model.TableColumnData.TableColumnData(String caption, String name, Boolean shouldTranslate)",3,1,0,1,3
"me.umov.refill.model.TableColumnData.TableColumnData(String caption, String name, int order)",3,1,0,1,3
"me.umov.refill.model.map.MarkerInfo.MarkerInfo(MarkerInfoKey key, String value)",3,1,0,1,2
"me.umov.refill.RefillTest.tearDown()",3,1,0,1,0
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilder.getTitle()",3,1,0,1,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.getCardTitle()",3,1,0,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderMock.getTitle()",3,1,0,1,0
"me.umov.refill.builder.widget.TotalDisplacementDataBuilder.getCardTitle()",3,1,0,1,0
"me.umov.refill.service.GraphicCacheService.getDaoInstance()",3,1,0,1,0
"me.umov.refill.dao.AbstractDaoMock.setUpGenericType()",2,1,6,1,0
"me.umov.refill.service.GraphicCacheService.setDelayedData(Graphic graphic)",2,1,5,1,1
"me.umov.refill.dao.AbstractDaoMock.setUpSQLQuery()",2,1,4,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.withCharacterValue()",2,1,4,1,0
"me.umov.refill.dao.AbstractDaoMock.setUpSessionFactory()",2,1,3,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.withBooleanValue()",2,1,3,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.withNumericValue()",2,1,3,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.withStringValue()",2,1,3,1,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilder.applyClientId(Graphic graphic, Route route)",2,1,2,1,2
"me.umov.refill.dao.AbstractDaoMock.assertContainsCriteria(ArgumentCaptor<Criterion> captor, String expectedCriteria)",2,1,2,1,2
"me.umov.refill.dao.AbstractDaoMock.assertNotContainsCriteria(ArgumentCaptor<Criterion> captor, String expectedCriteria)",2,1,2,1,2
"me.umov.refill.builder.map.AbstractMapRouteDataBuilder.applyRouteTransportMode(Route route)",2,1,2,1,1
"me.umov.refill.core.Config.setManagerSleepTime(Long sleepTime)",2,1,2,1,1
"me.umov.refill.core.Config.getGraphicExpireTime()",2,1,2,1,0
"me.umov.refill.core.Config.getMaxUpdateAttempts()",2,1,2,1,0
"me.umov.refill.core.Config.getMaxUpdateQueueSize()",2,1,2,1,0
"me.umov.refill.core.Config.getMaxUpdateThreads()",2,1,2,1,0
"me.umov.refill.core.Config.getRemovalManagerSleepTime()",2,1,2,1,0
"me.umov.refill.core.Config.getSecondsBetweenAttemptsCoefficient()",2,1,2,1,0
"me.umov.refill.core.Config.getUpdateManagerSleepTime()",2,1,2,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.withContextKey()",2,1,2,1,0
"me.umov.refill.util.Miscellaneous.getRandomCharacter()",2,1,2,1,0
"me.umov.refill.util.Miscellaneous.getRandomDouble()",2,1,2,1,0
"me.umov.refill.util.Miscellaneous.getRandomFloat()",2,1,2,1,0
"me.umov.refill.util.Miscellaneous.getRandomInteger()",2,1,2,1,0
"me.umov.refill.util.Miscellaneous.getRandomNumber()",2,1,2,1,0
"me.umov.refill.util.Miscellaneous.getRandomShort()",2,1,2,1,0
"me.umov.refill.model.map.MarkerInfo.MarkerInfo(MarkerInfoKey key, Object value)",2,1,1,1,2
"me.umov.refill.service.GraphicCacheService.findPendingGraphicsToUpdate(List<String> inQueueTokens, Integer limit)",2,1,1,1,2
"me.umov.refill.builder.map.DeliveryTrackingMapDataBuilder.setDisplayInfo(Marker marker)",2,1,1,1,1
"me.umov.refill.builder.map.TrackingMapDataBuilder.setVisibleInfos(Marker marker)",2,1,1,1,1
"me.umov.refill.core.Config.getProperty(String name)",2,1,1,1,1
"me.umov.refill.core.GraphicUpdateQueue.remove(String token)",2,1,1,1,1
"me.umov.refill.dao.AbstractDaoMock.assertContainsCriteria(String expectedCriteria)",2,1,1,1,1
"me.umov.refill.dao.AbstractDaoMock.isInitialized(Object proxy)",2,1,1,1,1
"me.umov.refill.model.GraphicCache.hasFilter(String filter)",2,1,1,1,1
"me.umov.refill.model.map.MarkerInfo.setValue(Long value)",2,1,1,1,1
"me.umov.refill.service.GraphicCacheService.delete(List<String> tokens)",2,1,1,1,1
"me.umov.refill.service.GraphicCacheService.findOnlineExpiredGraphicsToRemove(Integer limit)",2,1,1,1,1
"me.umov.refill.core.Config.getCabralURL()",2,1,1,1,0
"me.umov.refill.core.GraphicUpdateQueue.getAvailableSpotsInQueue()",2,1,1,1,0
"me.umov.refill.core.GraphicUpdateQueue.getCurrentSize()",2,1,1,1,0
"me.umov.refill.core.GraphicUpdateQueue.getCurrentUpdateQueue()",2,1,1,1,0
"me.umov.refill.core.GraphicUpdateQueue.isEmpty()",2,1,1,1,0
"me.umov.refill.model.GraphicCache.getCacheType()",2,1,1,1,0
"me.umov.refill.model.GraphicCache.resetAttempts()",2,1,1,1,0
"me.umov.refill.model.GraphicCache.useAttemptsPolicy()",2,1,1,1,0
"me.umov.refill.model.column.CustomColumns.getActivityFields()",2,1,1,1,0
"me.umov.refill.util.Miscellaneous.getRandomBoolean()",2,1,1,1,0
"me.umov.refill.util.Miscellaneous.getRandomId()",2,1,1,1,0
"me.umov.refill.util.Miscellaneous.getRandomString()",2,1,1,1,0
"me.umov.refill.model.TableColumnData.TableColumnData(String caption, String name, TableColumnType type)",2,1,0,1,3
"me.umov.refill.builder.widget.AbstractCardDataBuilder.AbstractCardDataBuilder(WidgetType widgetType, GraphicType graphicType)",2,1,0,1,2
"me.umov.refill.model.TableColumnData.TableColumnData(String caption, String name)",2,1,0,1,2
"me.umov.refill.model.CardData.setAvgValue(String avgValue)",2,1,0,1,1
"me.umov.refill.model.CardData.setFontSizeInPixels(int fontSizeInPixels)",2,1,0,1,1
"me.umov.refill.model.CardData.setMaxValue(String maxValue)",2,1,0,1,1
"me.umov.refill.model.CardData.setMinValue(String minValue)",2,1,0,1,1
"me.umov.refill.model.CardData.setOperation(String operation)",2,1,0,1,1
"me.umov.refill.model.CardData.setSectionFieldId(String sectionFieldId)",2,1,0,1,1
"me.umov.refill.model.CardData.setSubtitle(String subtitle)",2,1,0,1,1
"me.umov.refill.model.CardData.setTitle(String title)",2,1,0,1,1
"me.umov.refill.model.CardData.setValue(String value)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setAttempts(Integer attempts)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setCacheValue(String cacheValue)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setClientId(Long clientId)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setCustomColumns(String customColumns)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setError(String error)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setFilters(String filters)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setGenerationtime(Long generationtime)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setId(Long id)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setLastUpdate(LocalDateTime lastUpdate)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setLastView(LocalDateTime lastView)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setOnline(Boolean online)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setOnlineFilters(List<OnlineFilter> onlineFilters)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setToken(String token)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setTransactionId(Long transactionId)",2,1,0,1,1
"me.umov.refill.model.GraphicCache.setWidgetType(WidgetType widgetType)",2,1,0,1,1
"me.umov.refill.model.TableColumnData.setDate(Boolean isDate)",2,1,0,1,1
"me.umov.refill.model.TableColumnData.setImage(Boolean isImage)",2,1,0,1,1
"me.umov.refill.model.TableColumnData.setMediaLink(Boolean isMediaLink)",2,1,0,1,1
"me.umov.refill.model.TableColumnData.setOrder(int order)",2,1,0,1,1
"me.umov.refill.model.TableColumnData.setShouldTranslate(Boolean shouldTranslate)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setActivity(Entity activity)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setAgent(Entity agent)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setAgent_daily_metrics(Entity agent_daily_metrics)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setAgent_performance(Entity agent_performance)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setCustom_entity(Entity custom_entity)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setHasAgregation(boolean hasAgregation)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setItem(Entity item)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setLocal(Entity local)",2,1,0,1,1
"me.umov.refill.model.column.CustomColumns.setTask(Entity task)",2,1,0,1,1
"me.umov.refill.model.map.MarkerInfo.setValue(String value)",2,1,0,1,1
"me.umov.refill.model.map.MarkerInfo.setVisible(boolean visible)",2,1,0,1,1
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilder.CustomEntitiesTableDataBuilder()",2,1,0,1,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilder.CustomHistoryCardDataBuilder()",2,1,0,1,0
"me.umov.refill.builder.widget.CustomTableDataBuilderMock.CustomTableDataBuilderMock()",2,1,0,1,0
"me.umov.refill.builder.widget.TotalDisplacementDataBuilder.TotalDisplacementDataBuilder()",2,1,0,1,0
"me.umov.refill.core.Process.isReadyToStop()",2,1,0,1,0
"me.umov.refill.core.Process.sendStopSignal()",2,1,0,1,0
"me.umov.refill.dao.AbstractDaoMock.setUp()",2,1,0,1,0
"me.umov.refill.fixture.CustomFieldFixture.build()",2,1,0,1,0
"me.umov.refill.fixture.CustomFieldFixture.get()",2,1,0,1,0
"me.umov.refill.fixture.EntityFixture.build()",2,1,0,1,0
"me.umov.refill.fixture.EntityFixture.get()",2,1,0,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.build()",2,1,0,1,0
"me.umov.refill.fixture.GraphicDataRowFixture.get()",2,1,0,1,0
"me.umov.refill.model.CardData.CardData()",2,1,0,1,0
"me.umov.refill.model.CardData.getAvgValue()",2,1,0,1,0
"me.umov.refill.model.CardData.getFontSizeInPixels()",2,1,0,1,0
"me.umov.refill.model.CardData.getMaxValue()",2,1,0,1,0
"me.umov.refill.model.CardData.getMinValue()",2,1,0,1,0
"me.umov.refill.model.CardData.getOperation()",2,1,0,1,0
"me.umov.refill.model.CardData.getSectionFieldId()",2,1,0,1,0
"me.umov.refill.model.CardData.getSubtitle()",2,1,0,1,0
"me.umov.refill.model.CardData.getTitle()",2,1,0,1,0
"me.umov.refill.model.CardData.getValue()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getAttempts()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getCacheValue()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getClientId()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getCustomColumns()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getError()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getFilters()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getGenerationtime()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getId()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getLastUpdate()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getLastView()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getOnline()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getToken()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getTransactionId()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.getWidgetType()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.isFirstAttempt()",2,1,0,1,0
"me.umov.refill.model.GraphicCache.isTransacted()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getCaption()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getDataField()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getFormat()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getName()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getOrder()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getShouldTranslate()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.getType()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.isDate()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.isImage()",2,1,0,1,0
"me.umov.refill.model.TableColumnData.isMediaLink()",2,1,0,1,0
"me.umov.refill.model.builder.TableDataBuilder.TableDataBuilder()",2,1,0,1,0
"me.umov.refill.model.builder.TableDataBuilder.build()",2,1,0,1,0
"me.umov.refill.model.builder.TableDataBuilder.get()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getActivity()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getAgent()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getAgent_daily_metrics()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getAgent_performance()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getCustom_entity()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getHasAgregation()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getItem()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getLocal()",2,1,0,1,0
"me.umov.refill.model.column.CustomColumns.getTask()",2,1,0,1,0
"me.umov.refill.model.map.MarkerInfo.getAnchorPath()",2,1,0,1,0
"me.umov.refill.model.map.MarkerInfo.getKey()",2,1,0,1,0
"me.umov.refill.model.map.MarkerInfo.getLabel()",2,1,0,1,0
"me.umov.refill.model.map.MarkerInfo.getValue()",2,1,0,1,0
"me.umov.refill.model.map.MarkerInfo.isVisible()",2,1,0,1,0
"me.umov.refill.persistence.GraphicDataRowResultTransformer.get()",2,1,0,1,0
"me.umov.refill.util.Miscellaneous.getRandomDate()",2,1,0,1,0
"me.umov.refill.validator.GeoCoordinateValidator.get()",2,1,0,1,0
"me.umov.refill.interceptor.TransactionInterceptorTest.nonTransactionalMethod()",1,1,0,1,0
"me.umov.refill.interceptor.TransactionInterceptorTest.transactionalMethod()",1,1,0,1,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilder.processPostMapBuild(Graphic graphic)",0,1,0,1,1
"me.umov.refill.builder.widget.AbstractCardDataBuilder.getCardSubTitle()",0,1,0,1,0
"me.umov.refill.builder.widget.AbstractCardDataBuilder.getCardTitle()",0,1,0,1,0
"me.umov.refill.core.Process.doProcess()",0,1,0,1,0
"me.umov.refill.core.Process.getSleepTime()",0,1,0,1,0
"me.umov.refill.builder.widget.customtable.ItemCustomColumnTest.shouldExtractItemTableColumnDataFromCustomColumns()",45,1,85,0,0
"me.umov.refill.builder.widget.customtable.ActivityCustomColumnTest.shouldExtractActivityTableColumnDataFromCustomColumns()",37,1,54,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldReturnAllCustomFieldsFromEntities()",36,1,73,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldReturnAllFieldsFromEntities()",36,1,73,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldTransformCustomColumnsCustomFieldsInATableColumnDataList()",32,1,58,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldTransformCustomColumnsFieldsInATableColumnDataList()",26,1,41,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldInitEntityCustomFieldsForTemplate()",24,1,37,0,0
"me.umov.refill.persistence.RouteResultTransformerTest.shouldGroupAndNestMarkersIntoARoute()",22,1,30,0,0
"me.umov.refill.geo.CabralGeoProcessorTest.shouldApplyDirectionsDataToMarkers()",22,1,26,0,0
"me.umov.refill.core.ProcessTest.setUp()",22,1,0,0,0
"me.umov.refill.template.TemplateServiceTest.setUp()",21,1,71,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldFindDataRowsAndGroupByContext()",21,1,48,0,0
"me.umov.refill.geo.DirectionsServiceTest.shouldCallAndReturnResolverResponseWithBuildedDirectionsRequest()",21,1,29,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.shouldIdentifyAllPrimitiveTypes()",20,1,36,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldReturnOnlyActivityFields()",19,1,29,0,0
"me.umov.refill.builder.widget.customtable.ActivityCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenTypeIsAudio()",18,1,25,0,0
"me.umov.refill.builder.widget.customtable.ActivityCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenTypeIsDocument()",18,1,25,0,0
"me.umov.refill.builder.widget.customtable.ActivityCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenTypeIsMultimedia()",18,1,25,0,0
"me.umov.refill.builder.widget.customtable.ActivityCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenTypeIsVideo()",18,1,25,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldRemoveWhiteSpacesFromCustomFieldsIds()",17,1,22,0,0
"me.umov.refill.service.CustomFieldServiceTest.shouldGetCustomFieldsFromDb()",17,1,22,0,0
"me.umov.refill.util.DateTimeUtilsTest.TimeToLiteralHourMinutsSecondsTest()",17,1,14,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldSetTokenAndCustomColumnsOnPreBuild()",16,1,27,0,0
"me.umov.refill.builder.DataBuilderFactoryTest.shouldRetrieveChartBuilderWhenCacheTypeIsChart()",16,1,23,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldSetCustomFieldAsDateType()",16,1,23,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldSetCustomFieldAsImageType()",16,1,23,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenCustomFieldIsAudioSubtype()",16,1,23,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenCustomFieldIsPdfSubtype()",16,1,23,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.shouldSetCustomFieldAsMediaLinkTrueWhenCustomFieldIsVideoSubtype()",16,1,23,0,0
"me.umov.refill.model.map.MarkerInfoTest.shouldAddAnAnchorPathToMarkerInfo()",16,1,4,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldInvalidateCacheWhenErrorOccurs()",15,1,34,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSaveGraphicCacheWithNewGeneratedData()",15,1,34,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldNotSetTimeoutErrorWhenTimeoutOccursAndAttemptsPolicyDontAllow()",15,1,33,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldNotIdentifyThatHasAgregations()",15,1,29,0,0
"me.umov.refill.builder.widget.customtable.TableColumnDataBuilderTest.shouldAggregateAllTableColumnDataWithOrder()",15,1,23,0,0
"me.umov.refill.persistence.MarkerResultTransformerTest.shouldBuildMarkerWithResultTuples()",15,1,13,0,0
"me.umov.refill.model.map.MarkerInfoTest.shouldNotAddAnAnchorPathIfThereIsNoReferenceOnMap()",15,1,4,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSetTimeoutErrorWhenTimeoutOccurs()",14,1,31,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldValidateAttemptPolicy()",14,1,17,0,0
"me.umov.refill.service.ActivityFieldServiceTest.shouldFindActivitiesUsingCorrectQuery()",14,1,15,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSetUnexpectedErrorWhenUnexpectedOccursEvenIfHasAvailableAttempts()",13,1,32,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSetUnexpectedErrorWhenUnexpectedOccurs()",13,1,31,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldValidateIfCustomColumnsHasBeenInformed()",13,1,23,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilderTest.shouldSetEntityOnPreBuild()",13,1,19,0,0
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilderTest.shouldSetEntityOnPreBuild()",13,1,19,0,0
"me.umov.refill.Refill.start()",13,1,13,0,0
"me.umov.refill.builder.widget.AgentTasksBySituation.postBuild(Graphic graphic)",13,1,10,0,1
"me.umov.refill.builder.widget.AgentTasksPercentageBySituation.postBuild(Graphic graphic)",13,1,10,0,1
"me.umov.refill.persistence.ArrayAsListTypeTest.shouldReturnArrayWhenDatabaseArrayIsNotNull()",13,1,9,0,0
"me.umov.refill.geo.CabralGeoProcessorTest.buildRoute()",13,1,4,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldNotRoundReturnedValueOnPostBuildWhenOperationIsCount()",12,1,21,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldNotRoundReturnedValueOnPostBuildWhenValueIsNull()",12,1,21,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldRoundReturnedValueOnPostBuild()",12,1,21,0,0
"me.umov.refill.model.column.EntityTest.shouldRemoveDuplicatedCustomField()",12,1,21,0,0
"me.umov.refill.model.column.EntityTest.shouldRemoveDuplicatedField()",12,1,21,0,0
"me.umov.refill.types.TableColumnTypeTest.shouldGetValuesByCode()",12,1,20,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldValidateIfFieldsHaveBeenInformed()",12,1,19,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldSendCurrentQueueTokensToBeIgnoredWhenFindingNewGraphicsToUpdate()",12,1,17,0,0
"me.umov.refill.model.map.MarkerTest.shouldRetrieveAListOfMarkersRecursively()",12,1,17,0,0
"me.umov.refill.service.AttemptServiceTest.shouldIncreaseAttempsWhenItsMoreThanZero()",12,1,11,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesDataBuilder.postBuild(Graphic graphic)",12,1,9,0,1
"me.umov.refill.builder.widget.AgentExecutedTasksDataBuilder.postBuild(Graphic graphic)",12,1,9,0,1
"me.umov.refill.builder.widget.AgentDailyHoursDataBuilder.getColumns()",12,1,1,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSetDataAsDelayedWhenGenerateCacheDataAndEnvironmentDBViewIsNotActive()",11,1,31,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSetErrorWithNullWhenBuildCacheDataEndsWithSuccess()",11,1,28,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldAddOptionsForTypesThatRetrieveFromDataService()",11,1,24,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.setUp()",11,1,23,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldPopulateFilterValuesWhenTheresFiltersValuesOnCurrentCache()",11,1,22,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldIdentifyTodayDateFilter()",11,1,21,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilderTest.shouldDefineOnlineFiltersForWidget()",11,1,17,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.shouldValidateIfActivityHasBeenInformed()",11,1,16,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldIgnoreAllTokenThatAlreadyHasInUpdateQueueWhenFindingPendingGraphicsToUpdate()",11,1,16,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldIdentifyThatHasAgregationsInLocalField()",11,1,16,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveWidgetQuery()",11,1,16,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveOnlineFilterOptionsMapMarkers()",11,1,15,0,0
"me.umov.refill.persistence.MarkerResultTransformer.transformTuple(Object[] tuple, String[] aliases)",11,1,13,0,2
"me.umov.refill.dao.GraphicCacheDao.onlineExpired()",11,1,13,0,0
"me.umov.refill.dao.GraphicCacheDao.readyToNewAttempt()",11,1,13,0,0
"me.umov.refill.dao.ScheduleDBViewEnvironmentDaoTest.shouldRetrieveFalseWhenTheresNoEnvironmentDBViewActive()",11,1,13,0,0
"me.umov.refill.dao.ScheduleDBViewEnvironmentDaoTest.shouldRetrieveTrueWhenTheresEnvironmentDBViewActive()",11,1,13,0,0
"me.umov.refill.service.AttemptServiceTest.shouldNotIncreaseAttempsWhenItsMaxUpdateAttepmts()",11,1,11,0,0
"me.umov.refill.model.map.MarkerTest.shouldSortMarkersAccordingMarkerInfoOrder()",11,1,10,0,0
"me.umov.refill.builder.widget.TaskExecutedInWeekDataBuilder.postBuild(Graphic graphic)",11,1,8,0,1
"me.umov.refill.builder.widget.TeamAgentLogDataBuilder.getAllowedFilters()",11,1,1,0,0
"me.umov.refill.injection.SessionFactoryProvider.SessionFactoryProvider(ConfigurationType type)",10,1,23,0,1
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveAMarkerInfoListFromJsonMap()",10,1,21,0,0
"me.umov.refill.injection.InjectionModule.configure()",10,1,18,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldIdentifyThatHasAgregationsInActivityField()",10,1,18,0,0
"me.umov.refill.builder.widget.AbstractCardDataBuilderTest.setUp()",10,1,17,0,0
"me.umov.refill.builder.widget.CustomEntitiesRowActionFactoryTest.shouldReturnNullRowActionForTaskWhenEntityIsTaskButHaveAggregation()",10,1,16,0,0
"me.umov.refill.builder.widget.CustomEntitiesRowActionFactoryTest.shouldReturnRowActionForTaskWhenEntityIsTaskAndDoNotHaveAggregation()",10,1,16,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldIdentifyThatHasAgregationsInAgentDailyMetricField()",10,1,16,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldIdentifyThatHasAgregationsInAgentField()",10,1,16,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldIdentifyThatHasAgregationsInItemField()",10,1,16,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldIdentifyThatHasAgregationsInTaskField()",10,1,16,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveMapMarkers()",10,1,16,0,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilderTest.shouldNotRouteInvalidRoutes()",10,1,15,0,0
"me.umov.refill.model.builder.TableDataBuilderTest.shouldBuildEmptyInstanceOfTableData()",10,1,15,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldBuildGraphicSqlToGenerateGraphicDataWhenItIsNotCustomized()",10,1,14,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveAListOFDataRowsBasedOnSql()",10,1,14,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveMapRoutes()",10,1,14,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldJustSetToUpdateWhenTryingToUpdateGraphicCacheAndTheresNoGraphic()",10,1,12,0,0
"me.umov.refill.dao.GraphicDataDaoTest.shouldRetrieveOnLineFrilterOptionsFromSQLQuery()",10,1,12,0,0
"me.umov.refill.model.TableColumnDataTest.shouldCreateATableColumnDateWithDefaultForDATEType()",10,1,12,0,0
"me.umov.refill.model.TableColumnDataTest.shouldCreateATableColumnDateWithDefaultForIDType()",10,1,12,0,0
"me.umov.refill.model.TableColumnDataTest.shouldCreateATableColumnDateWithDefaultForNUMBERType()",10,1,12,0,0
"me.umov.refill.model.TableColumnDataTest.shouldCreateATableColumnDateWithDefaultValues()",10,1,12,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldBuildMarkersForGraphic()",10,1,11,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldBuildRoutesForGraphic()",10,1,11,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldLimitTheReturnedTokensToExpectedLimit()",10,1,11,0,0
"me.umov.refill.model.column.EntityTest.shouldIdentifyAgreggationsCastTypes()",10,1,11,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldSendInQueueTokensToBeIgnoredAndTheQueueLimitWhenFindingNewPendingsGraphicsToUpdate()",10,1,11,0,0
"me.umov.refill.service.AttemptServiceTest.shouldSetAttempsWhenIsNotTransacted()",10,1,10,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldGenerateContextDataToGraphicFromHistory()",10,1,9,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldGenerateContextDataToGraphicFromSchedule()",10,1,9,0,0
"me.umov.refill.builder.widget.ActivityExecutionsDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.ActivityExecutionsPerTimeDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.ActivityExecutionsPerTypeDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.ImageCollectedPerActivityDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.LocalsWithAndWithoutExecutionsDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.PeopleWithAndWithoutExecutionsDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.TaskExecutionsPerTeamDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.TaskExecutionsPerTimeDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.TasksPerSituationDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.builder.widget.TopFiveVisitedLocalsDataBuilder.postBuild(Graphic graphic)",10,1,8,0,1
"me.umov.refill.model.map.MarkerTest.shouldSetTheMarkerVisibleInfos()",10,1,8,0,0
"me.umov.refill.model.GraphicCacheTest.shouldIncreaseAttemptWhenItsMoreThanZero()",10,1,6,0,0
"me.umov.refill.persistence.ArrayAsListTypeTest.shouldReturnNullWhenDatabaseArrayIsNull()",10,1,5,0,0
"me.umov.refill.builder.widget.TeamAgentLogDataBuilder.getColumns()",10,1,1,0,0
"me.umov.refill.template.TemplateServiceTest.shouldExplicitTheClientIdSchemaOnAllTables()",9,1,25,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldNotGenerateCacheDataWhenEnvironmentDBViewIsNotActive()",9,1,22,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldUseTheCustomIconOnDelayedMarker()",9,1,21,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldUseTheCustomIconOnReadyMarker()",9,1,21,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldUseTheCustomIconOnWarningMarker()",9,1,21,0,0
"me.umov.refill.builder.widget.AbstractCardDataBuilderTest.shouldSetCardData()",9,1,19,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldSetDelayedIconToMarkerWhereTheExpectedTimeIsAfterTheEstimateTimeCosideringDuration()",9,1,16,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldSetReadyIconToMarkerWhereTheExpectedTimeIsEnoughCosideringDuration()",9,1,16,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldSetWarningIconToMarkerWhereTheExpectedTimeAboutToGoCosideringDuration()",9,1,16,0,0
"me.umov.refill.injection.TransactionManagerTest.setUp()",9,1,16,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldBuildAllowedFiltersWhenAreBasedOnOtherFilters()",9,1,15,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldBuildAllowedFiltersWhenExist()",9,1,15,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldBuildOnlineFilterForEachTypesRetrievedFromTheNestedTypeCall()",9,1,14,0,0
"me.umov.refill.builder.widget.CustomHistoryTableDataBuilderTest.shouldAddHistoryIdColumnAfterUserDefinedColumns()",9,1,14,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldFindGraphicCacheByToken()",9,1,14,0,0
"me.umov.refill.service.RouteDataServiceTest.shouldRetrieveCorrectlyRouteTransportModeBasedOnRoute()",9,1,14,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldValidGeocoordinateCoordinatesBeValid()",9,1,14,0,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilderTest.shouldSetClientIdAndTransportModeOnApplyRouteDefinitions()",9,1,13,0,0
"me.umov.refill.core.ShutdownSignerTest.shouldWaitToAllProcessToStopBeforeEnd()",9,1,13,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldGetModelByCriteria()",9,1,13,0,0
"me.umov.refill.dao.GraphicCacheDao.viewedAfterLastUpdateAndExpiredAfterMinimumExpireTime()",9,1,13,0,0
"me.umov.refill.injection.TransactionManagerTest.shouldJustIgnoreWhenBeginAndTransactionsAreActive()",9,1,13,0,0
"me.umov.refill.injection.TransactionManagerTest.shouldJustIgnoreWhenEndAndTransactionsAreNotActive()",9,1,13,0,0
"me.umov.refill.injection.TransactionManagerTest.shouldJustIgnoreWhenRollbackAndTransactionsAreNotActive()",9,1,13,0,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilderTest.shouldSetRouteTransportModeBasedOnAgentDefinition()",9,1,12,0,0
"me.umov.refill.core.ShutdownSignerTest.shouldSendStopSignalAllRegisteredProcessWhenReceiveAStop()",9,1,11,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldFindByCriteriaUsingCriterionsList()",9,1,11,0,0
"me.umov.refill.injection.TransactionManagerTest.shouldBeginTheCurrentTransactionOnEachSessionFactoryWhenBeginAndTransactionsAreNotActive()",9,1,11,0,0
"me.umov.refill.injection.TransactionManagerTest.shouldCommitTheCurrentTransactionOnEachSessionFactoryWhenEndAndTransactionsAreActive()",9,1,11,0,0
"me.umov.refill.injection.TransactionManagerTest.shouldRollbackTheCurrentTransactionOnEachSessionFactoryWhenEndAndTransactionsAreActive()",9,1,11,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldGenerateGlobalAndContextDataBothAreNeeded()",9,1,10,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldFindByCriteria()",9,1,10,0,0
"me.umov.refill.dao.RouteDataDaoTest.shouldReturnFormatedRowsFromSqlQuery()",9,1,9,0,0
"me.umov.refill.model.map.MarkerTest.shouldRetrieveAMarkerInfoByKey()",9,1,9,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldJustIgnoredFiltesThatHasNoValues()",9,1,8,0,0
"me.umov.refill.builder.widget.customtable.TableColumnDataBuilder.getColumns(CustomColumns customColumns, Long clientId)",9,1,6,0,2
"me.umov.refill.builder.widget.AgentsMobileVersionDataBuilder.postBuild(Graphic graphic)",9,1,6,0,1
"me.umov.refill.builder.widget.OnlineOfflineAgentsDataBuilder.postBuild(Graphic graphic)",9,1,6,0,1
"me.umov.refill.model.GraphicCacheTest.shouldSetAttemptsToNulWhenReset()",9,1,6,0,0
"me.umov.refill.builder.widget.AgentTasksBySituationTable.getColumns()",9,1,1,0,0
"me.umov.refill.builder.widget.AllTasksDataBuilder.getColumns()",9,1,1,0,0
"me.umov.refill.dao.GraphicDaoTest.shouldFindGraphicByToken()",8,1,17,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldSetDelayedIconToMarkerWhereTheExpectedTimeIsAfterTheEstimateTime()",8,1,15,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldSetReadyIconToMarkerWhereTheExpectedTimeIsEnough()",8,1,15,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.shouldSetWarningIconToMarkerWhereTheExpectedTimeAboutToGo()",8,1,15,0,0
"me.umov.refill.dao.GraphicDataDaoTest.shouldReturnMarkersFromSqlQuery()",8,1,15,0,0
"me.umov.refill.dao.GraphicDataDaoTest.shouldReturnRoutesFromSqlQuery()",8,1,15,0,0
"me.umov.refill.dao.GraphicDataDaoTest.shouldReturnFormatedRowsFromSqlQuery()",8,1,13,0,0
"me.umov.refill.service.GraphicServiceTest.shouldFindGraphicByToken()",8,1,13,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilder.preBuild(Graphic graphic, GraphicCache cache)",8,1,12,0,2
"me.umov.refill.builder.widget.AgentPerformanceDataBuilder.preBuild(Graphic graphic, GraphicCache cache)",8,1,12,0,2
"me.umov.refill.builder.widget.AbstractTableDataBuilderTest.setUp()",8,1,12,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldAddAllPendingGraphicToBeUpdatedToUpdateQueue()",8,1,12,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldUseGraphicSqlToGenerateGraphicDataWhenItIsCustomized()",8,1,12,0,0
"me.umov.refill.service.GraphicServiceTest.shouldFindGraphicByTheBaseChartTokenWhenTheresSubchartMarker()",8,1,12,0,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilderTest.shouldRoutingValidRoutesUsingGeoProcessor()",8,1,9,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldFindOnlyOnlineGraphicsExpiredMoreThanOneDayAgoOrNeverViewed()",8,1,9,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.generateData(GraphicDataFilter dataFilter)",8,1,8,0,1
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldSetGraphicCacheAsUpdatedEvenAnErrorHasOccurred()",8,1,8,0,0
"me.umov.refill.dao.GraphicCacheDao.findOnlineExpiredGraphics(Integer limit)",8,1,7,0,1
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldBuildGraphicWithWidgetActions()",8,1,7,0,0
"me.umov.refill.service.AttemptServiceTest.shouldNotSetAttempsWhenIsTransacted()",8,1,7,0,0
"me.umov.refill.template.TemplateServiceTest.shouldGroupByContextWhenGenerateSqlToContextData()",8,1,7,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldReturnTheFirstReferenceWhenGettingFirstByCriteriaThatReturnsMoreThanOneElement()",8,1,6,0,0
"me.umov.refill.service.ScheduleDBViewEnvironmentServiceTest.shouldVerifyIfDBViewEnvironmentIsActive()",8,1,6,0,0
"me.umov.refill.core.ProcessTest.shouldRespectTheProcessSleepTimeDuringProcess()",8,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldSetAttemptWhenItsNull()",8,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldSetAttemptWhenItsNullAndNotTransated()",8,1,5,0,0
"me.umov.refill.template.TemplateEngineTest.shouldSucessfullGenerateValueFromTemplateSoyMapParameter()",8,1,4,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withCustomColumns()",8,1,1,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldIdentifyMonthDateFilter()",7,1,19,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldIdentifyPeriodCase1DateFilter()",7,1,19,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldIdentifyPeriodCase2DateFilter()",7,1,19,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldIdentifyWeekDateFilter()",7,1,19,0,0
"me.umov.refill.builder.DataBuilderFactoryTest.setUp()",7,1,13,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldFindGraphicCacheByToken()",7,1,10,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldNotDoAnythingWhenTheQueueIsFull()",7,1,9,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldUpdateCacheData()",7,1,9,0,0
"me.umov.refill.builder.widget.AverageExecutionTimeDataBuilder.postBuild(Graphic graphic)",7,1,8,0,1
"me.umov.refill.dao.GraphicDaoTest.shouldInitializeMetricsOnRetrieveAGraphic()",7,1,8,0,0
"me.umov.refill.service.AbstractServiceTest.shouldFindAllReferencesOfAModel()",7,1,8,0,0
"me.umov.refill.service.AbstractServiceTest.shouldFindModelById()",7,1,8,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldCountObjectsByCriterionList()",7,1,7,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldRetrieveNullWhenGetModelByCriteriaAndHasNoRowsWithExpectedRestrictions()",7,1,7,0,0
"me.umov.refill.builder.widget.AgentsManagementDataBuilderTest.shouldSetWidgetTemplateToNone()",7,1,6,0,0
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilderTest.shouldReturnCreateTaskActionWhenIsTaskTable()",7,1,6,0,0
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilderTest.shouldReturnEmptyListOfTaskActionWhenIsNotTaskTable()",7,1,6,0,0
"me.umov.refill.builder.widget.TeamsManagementDataBuilderTest.shouldSetWidgetTemplateToNone()",7,1,6,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldCountObjectsByCriteria()",7,1,6,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldFindAllReferencesByEntity()",7,1,6,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldNotGenerateContextDataToGraphicThatIsNotFromHistoryOrSchedule()",7,1,5,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldAddGenerationTimestampWhenBuildingMap()",7,1,5,0,0
"me.umov.refill.builder.widget.CustomEntitiesRowActionFactoryTest.shouldReturnNullRowActionWhenEntityIsNotTask()",7,1,5,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldCatchAllExceptionsOnExecutionAndJustLogErrorWhenOccurs()",7,1,5,0,0
"me.umov.refill.core.ProcessTest.shouldBeReadyToStopWhenStopSignalByDefault()",7,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldNotBeFirstAttemptWhenAttemptsIsNotNull()",7,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldNotUseAttemptsPolicyWhenItsTransated()",7,1,5,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldJustIgnoredNotAllowedFilters()",7,1,4,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldNotUpdateLatUpdateWhenCacheHaveError()",7,1,4,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldUpdateLatUpdateWhenCacheDoNotHaveError()",7,1,4,0,0
"me.umov.refill.model.activity.ActivityField.isMediaLink()",7,1,4,0,0
"me.umov.refill.service.AbstractServiceTest.shoudlSaveAModel()",7,1,4,0,0
"me.umov.refill.template.TemplateEngineTest.shouldSucessfullGenerateValueFromTemplateMapParameter()",7,1,4,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldDeleteAnInstance()",7,1,3,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldInitializeLazyInstance()",7,1,3,0,0
"me.umov.refill.builder.widget.CustomHistoryTableDataBuilder.getColumns()",7,1,2,0,0
"me.umov.refill.model.OnlineFilter.OnlineFilter(OnlineFilterType filterType, String type, String label, boolean mandatory, Object... values)",7,1,1,0,5
"me.umov.refill.builder.widget.AbstractTableDataBuilder.rowAction(Graphic graphic)",7,1,0,0,1
"me.umov.refill.model.activity.ActivityField.toString()",7,1,0,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldGraphicCacheViewedInTheLastThreeDaysAndNotUpdatedInTheLastHourBeAvailableToUpdate()",6,1,9,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldIgnoreEmptyValuesFromMapWhenBuildingMarkerInfoList()",6,1,9,0,0
"me.umov.refill.validator.MarkerValidatorTest.shouldMarkerWithInvalidNextPlaceBeInvalid()",6,1,9,0,0
"me.umov.refill.validator.MarkerValidatorTest.shouldValidMarkerWithValidNextPlaceBeValid()",6,1,9,0,0
"me.umov.refill.builder.DataBuilderFactoryTest.shouldRetrieveAgentTrackingMapBuilderWhenCacheTypeIsSet()",6,1,8,0,0
"me.umov.refill.builder.DataBuilderFactoryTest.shouldRetrieveScheduleTrackingMapBuilderWhenCacheTypeIsScheduleTracking()",6,1,8,0,0
"me.umov.refill.builder.DataBuilderFactoryTest.shouldRetrieveTrackingMapBuilderWhenCacheTypeIsTrackingMap()",6,1,8,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldGraphicCacheViewedAfterLastUpdateBeAvailableToUpdateIfExpired()",6,1,8,0,0
"me.umov.refill.model.map.MarkerTest.shouldRetrieveZeroAsWaitTimeInSecondsWhenWaitTimeIsNullOrZero()",6,1,8,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldInvalidGeocoordinateCoordinatesBeInvalid()",6,1,8,0,0
"me.umov.refill.validator.RouteValidatorTest.shouldRouteWithInvalidFirstPlaceBeInvalid()",6,1,8,0,0
"me.umov.refill.validator.RouteValidatorTest.shouldRouteWithValidFirstPlaceBeValid()",6,1,8,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldBuildGraphicGroups()",6,1,7,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldBuildGraphicMetrics()",6,1,7,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.setUp()",6,1,7,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveNullMarkersWhenGettingMarkersWithoutSql()",6,1,7,0,0
"me.umov.refill.service.GraphicDataServiceTest.shouldRetrieveNullRoutesWhenGettingRoutesWithoutSql()",6,1,7,0,0
"me.umov.refill.template.TemplateServiceTest.shouldAddActivityHistoryFiltersToQuery()",6,1,7,0,0
"me.umov.refill.template.TemplateServiceTest.shouldAddAgentFiltersToQuery()",6,1,7,0,0
"me.umov.refill.template.TemplateServiceTest.shouldAddItemFiltersToQuery()",6,1,7,0,0
"me.umov.refill.template.TemplateServiceTest.shouldAddScheduleFiltersToQuery()",6,1,7,0,0
"me.umov.refill.template.TemplateServiceTest.shouldAddServiceLocalFiltersToQuery()",6,1,7,0,0
"me.umov.refill.builder.widget.AbstractGaugeDataBuilderTest.shouldSetWidgetTemplate()",6,1,6,0,0
"me.umov.refill.template.TemplateServiceTest.shouldSuccessfullyGenerateTheOnlineFilterOptionsQueryForAgentId()",6,1,6,0,0
"me.umov.refill.template.TemplateServiceTest.shouldSuccessfullyGenerateWidgetQuery()",6,1,6,0,0
"me.umov.refill.types.handler.AnyArrayTypeHandlerTest.shouldParseOnlineFiltersToAnyArrayForSQL()",6,1,6,0,0
"me.umov.refill.types.handler.CharArrayTypeHandlerTest.shouldNotParseNoAlphanumericsOnlineFiltersToAnyArrayForSQL()",6,1,6,0,0
"me.umov.refill.types.handler.CharArrayTypeHandlerTest.shouldParseOnlineFiltersToAnyArrayForSQL()",6,1,6,0,0
"me.umov.refill.dao.GraphicDao.onRetrieved(Graphic graphic)",6,1,5,0,1
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldGenerateOnlyContextDataOnlyGlobalIsContext()",6,1,5,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldGenerateOnlyGlobalDataOnlyGlobalIsNeeded()",6,1,5,0,0
"me.umov.refill.builder.widget.AbstractTableDataBuilderTest.shouldSetTableData()",6,1,5,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldSetToUpdatedAfterUpdateGraphic()",6,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldHasAgentIdAsFilter()",6,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldHasNotAgentIdAsFilter()",6,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldHasNotConsiderAgentIdFilterWithEmptyValue()",6,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldHasNotConsiderAgentIdFilterWithOtherFilters()",6,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldHasNotConsiderAgentIdFilterWithoutValue()",6,1,5,0,0
"me.umov.refill.model.column.CustomColumnsTest.shouldCallEntityMethodsForProcessFieldsForTemplate()",6,1,5,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveAMapFromJson()",6,1,5,0,0
"me.umov.refill.template.TemplateServiceTest.shouldAddActivityFilterToQueryWhenEntityIsActivityHistory()",6,1,5,0,0
"me.umov.refill.model.GraphicCacheTest.shouldBeFirstAttemptWhenAttemptsIsNull()",6,1,4,0,0
"me.umov.refill.model.GraphicCacheTest.shouldUseAttemptsPolicyWhenItsNotTransated()",6,1,4,0,0
"me.umov.refill.model.customfield.CustomField.isMediaLink()",6,1,4,0,0
"me.umov.refill.persistence.CustomPostgreSQLDialectTest.shouldRegisterHibernateTypesInDialect()",6,1,4,0,0
"me.umov.refill.core.ShutdownSignerTest.setUp()",6,1,3,0,0
"me.umov.refill.core.ProcessTest.shouldCatchAnyErrorThatOccurrsDuringTheProcess()",6,1,2,0,0
"me.umov.refill.builder.widget.AgentAndLocalWithPercentualTasksTableDataBuilder.getColumns()",6,1,1,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesPercentualTableDataBuilder.getColumns()",6,1,1,0,0
"me.umov.refill.builder.widget.LastExecutedTasksDataBuilder.getColumns()",6,1,1,0,0
"me.umov.refill.builder.widget.NextTasksForExecutionDataBuilder.getColumns()",6,1,1,0,0
"me.umov.refill.builder.widget.AbstractTableDataBuilder.postBuild(Graphic graphic)",5,1,12,0,1
"me.umov.refill.model.builder.TableDataBuilderTest.shouldBuildInstanceWithGraphicData()",5,1,12,0,0
"me.umov.refill.core.GraphicRemovalManagerTest.shouldRemoveExpiredOnlineMaps()",5,1,10,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldBuildMarkersForAgentTrackingMapWithOnlineFilters()",5,1,9,0,0
"me.umov.refill.core.GraphicRemovalManagerTest.shouldIdentifyNoMapsToBeRemoved()",5,1,9,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldBuildMarkersForMapThatDiffersFromAgentTrackingMapType()",5,1,8,0,0
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.shouldDoNotBuildMarkersForAgentTrackingMapWithNoOnlineFilters()",5,1,8,0,0
"me.umov.refill.model.builder.TableDataBuilderTest.shouldBuildInstanceWithColumns()",5,1,8,0,0
"me.umov.refill.builder.chart.ChartDataBuilderTest.setUp()",5,1,7,0,0
"me.umov.refill.builder.widget.AbstractCardDataBuilderTest.shouldSetTitleAndSubTitleOnCardData()",5,1,7,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldNotDoAnythingWhenTheresNoGraphicsToBeUpdated()",5,1,7,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldBePossibleToFindExistingByCriterionList()",5,1,7,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldBuildCriteriaBasedOnCriterionsList()",5,1,7,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldReturnTrueWhenVerifyingExistingObjectByCriteriaWithListOrCriterions()",5,1,7,0,0
"me.umov.refill.builder.widget.AgentsManagementDataBuilderTest.shouldDefineCreateTaskWidgetAction()",5,1,6,0,0
"me.umov.refill.builder.widget.TeamsManagementDataBuilderTest.shouldDefineCreateTaskWidgetAction()",5,1,6,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldCatchAnyUnexpectedErrorOccuredWhenFindingPendingGraphicsToUpdate()",5,1,6,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldRetrieveNullWhenFindingAModelByEntityAndItNotExists()",5,1,6,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldReturnFalseWhenVerifyingNotExistingObjectByCriteria()",5,1,6,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldReturnNullWhenGettingFirstByCriteriaThatReturnsEmpty()",5,1,6,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldReturnTrueWhenVerifyingExistingObjectByCriteria()",5,1,6,0,0
"me.umov.refill.injection.SessionFactoryManagerTest.shouldRetrieveAListOfAllFactories()",5,1,6,0,0
"me.umov.refill.template.TemplateServiceTest.shouldSuccessfullyGenerateARouteTransportModeQuery()",5,1,6,0,0
"me.umov.refill.types.WidgetFontSizeTest.shouldReturnCorrectSizes()",5,1,6,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldGeoCoordinateWithInvalidPatternBeInvalid()",5,1,6,0,0
"me.umov.refill.template.TemplateService.getOnlineFilterOptionsQuery(Graphic graphic, String filterName)",5,1,5,0,2
"me.umov.refill.service.RouteDataService.getTransportMode(Route route)",5,1,5,0,1
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.setUp()",5,1,5,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldBeReadyToStopWhenTheQueueIsEmpty()",5,1,5,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldNotBeReadyToStopWhenTheQueueIsNotEmpty()",5,1,5,0,0
"me.umov.refill.model.builder.TableDataBuilderTest.shouldBuildInstanceWithRowAction()",5,1,5,0,0
"me.umov.refill.model.builder.TableDataBuilderTest.shouldBuildInstanceWithTitle()",5,1,5,0,0
"me.umov.refill.validator.MarkerValidatorTest.shouldMarkerIsInvalidWhenTheresNoPosition()",5,1,5,0,0
"me.umov.refill.validator.MarkerValidatorTest.shouldMarkerWithPositionBeValid()",5,1,5,0,0
"me.umov.refill.validator.RouteValidatorTest.shouldRouteWithoutFirstPlaceBeInvalid()",5,1,5,0,0
"me.umov.refill.core.ConfigTest.shouldLoadGivenConfigFileFromApproval()",5,1,4,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.setUp()",5,1,4,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.shouldNotifyTheQueueThatTheCurrentGraphicCacheIsFinished()",5,1,4,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldSaveSuccessfullyANewPersistentModel()",5,1,4,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.shouldJustDoNothingWhenInitializeObjectIsNotAProxy()",5,1,4,0,0
"me.umov.refill.persistence.LongArrayType.nullSafeSet(PreparedStatement statement, Object object, int index, SessionImplementor session)",5,1,3,0,4
"me.umov.refill.model.map.Route.Route(Marker firstPlace)",5,1,3,0,1
"me.umov.refill.builder.chart.ChartDataBuilderTest.shouldAddGenerationTimestampToGraphicBeforeExportJson()",5,1,3,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldBuildWithoutAnyFilters()",5,1,3,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldSetGenerationTimestampToGraphic()",5,1,3,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldSetGraphicTypeOnGraphic()",5,1,3,0,0
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldSetGraphicWidgetTypeOnGraphic()",5,1,3,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldFindCacheWhereErrorIsNull()",5,1,3,0,0
"me.umov.refill.dao.GraphicCacheDaoTest.shouldGraphicCacheWithoutDataBeAvailableToUpdate()",5,1,3,0,0
"me.umov.refill.model.map.MarkerTest.shouldShouldIgnoreWhenTryingToSetVisibleInfosAndTheresNoInfos()",5,1,3,0,0
"me.umov.refill.persistence.CustomPostgreSQLDialect.CustomPostgreSQLDialect()",5,1,3,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.shouldSucessfullInitializeAHibernateInstance()",5,1,3,0,0
"me.umov.refill.service.ActivityFieldServiceTest.shouldReturnEmptyListWhenIdsInformedAreEmpty()",5,1,3,0,0
"me.umov.refill.util.ListUtilsTest.shouldRetrieveTheFirstElementoOfAList()",5,1,3,0,0
"me.umov.refill.util.ListUtilsTest.shouldRetrieveTheLastElementoOfAList()",5,1,3,0,0
"me.umov.refill.persistence.RouteResultTransformerTest.createMarker(Long markerId, Long routeId)",5,1,2,0,2
"me.umov.refill.builder.widget.TaskExecutionGaugeDataBuilder.postBuild(Graphic graphic)",5,1,2,0,1
"me.umov.refill.core.GraphicRemovalManagerTest.tokensToBeRemoved()",5,1,2,0,0
"me.umov.refill.builder.widget.AgentTasksBySituation.buildMetrics(Graphic graphic, GraphicCache cache)",5,1,1,0,2
"me.umov.refill.builder.widget.AgentTasksPercentageBySituation.buildMetrics(Graphic graphic, GraphicCache cache)",5,1,1,0,2
"me.umov.refill.builder.widget.ActivityNotExecutedDataBuilder.getColumns()",5,1,1,0,0
"me.umov.refill.builder.widget.AgentWithPercentualTasksTableDataBuilder.getColumns()",5,1,1,0,0
"me.umov.refill.builder.widget.AllTasksDataBuilder.getAllowedFilters()",5,1,1,0,0
"me.umov.refill.builder.widget.NextTasksForExecutionDataBuilder.getAllowedFilters()",5,1,1,0,0
"me.umov.refill.builder.widget.TaskExecutionGaugeDataBuilder.getAllowedFilters()",5,1,1,0,0
"me.umov.refill.builder.widget.TotalDistancePerDayDataBuilder.getColumns()",5,1,1,0,0
"me.umov.refill.model.GraphicFilter.GraphicFilter(String entity, String field, String operator)",5,1,0,0,3
"me.umov.refill.persistence.PersistenceHelperTest.setUp()",5,1,0,0,0
"me.umov.refill.core.GraphicUpdateWorkerTest.assertCurrentDateTime(LocalDateTime dateTime)",4,1,7,0,1
"me.umov.refill.template.TemplateEngine.TemplateEngine(String templateFile)",4,1,7,0,1
"me.umov.refill.dao.GraphicCacheDao.viewedInTheLastThreeDaysAndExpiredAfterOneHour()",4,1,7,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldRetrieveASession()",4,1,5,0,0
"me.umov.refill.injection.InjectorCreatorTest.shouldCreateInjectorUsingInjectionModuleForChartTransaction()",4,1,5,0,0
"me.umov.refill.injection.InjectorCreatorTest.shouldCreateInjectorUsingInjectionModuleForOperationTransaction()",4,1,5,0,0
"me.umov.refill.model.customfield.CustomFieldTest.shouldReturnTrueWhenCustomFieldIsImageSubType()",4,1,5,0,0
"me.umov.refill.model.customfield.CustomFieldTest.shouldReturnTrueWhenCustomFieldIsPDFSubType()",4,1,5,0,0
"me.umov.refill.model.customfield.CustomFieldTest.shouldReturnTrueWhenCustomFieldIsURLSubType()",4,1,5,0,0
"me.umov.refill.util.ListUtilsTest.shouldRetrieveNullForFirstElementOfAEmptyList()",4,1,5,0,0
"me.umov.refill.util.ListUtilsTest.shouldRetrieveNullForLastElementOfAEmptyList()",4,1,5,0,0
"me.umov.refill.dao.GraphicCacheDao.delete(List<String> tokens)",4,1,4,0,1
"me.umov.refill.Refill.registerServices()",4,1,4,0,0
"me.umov.refill.builder.widget.AbstractTableDataBuilderTest.shouldSetTitle()",4,1,4,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilderTest.shouldDefineAgentAllowedFilters()",4,1,4,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilderTest.shouldDefineScheduleTypeAllowedFilters()",4,1,4,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilderTest.shouldDefineTaskFinalDateAllowedFilters()",4,1,4,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilderTest.shouldDefineTaskInitialDateAllowedFilters()",4,1,4,0,0
"me.umov.refill.model.column.FieldTypesTest.shouldGetFieldTypesByDataType()",4,1,4,0,0
"me.umov.refill.builder.widget.AbstractCardDataBuilderTest.shouldPopulateCardData()",4,1,3,0,0
"me.umov.refill.builder.widget.AbstractCardDataBuilderTest.shouldSettemplateToCardWidget()",4,1,3,0,0
"me.umov.refill.builder.widget.AbstractTableDataBuilderTest.shouldPopulateTableData()",4,1,3,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilderTest.shouldDefineAllowedFilters()",4,1,3,0,0
"me.umov.refill.core.ConfigTest.shouldLoadDefaultConfigFileFromDevelopmentWhenENVIsBlank()",4,1,3,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveNuLlAsMapInfoListFromNullTupleValue()",4,1,3,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveNullAStringFromNullTupleValue()",4,1,3,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveNullAsLongFromNullTupleValue()",4,1,3,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveNullAsMapFromNullJsonTupleValue()",4,1,3,0,0
"me.umov.refill.builder.widget.AbstractGaugeDataBuilder.postBuild(Graphic graphic)",4,1,2,0,1
"me.umov.refill.builder.widget.AgentDailyHoursDataBuilder.postBuild(Graphic graphic)",4,1,2,0,1
"me.umov.refill.builder.widget.AgentsManagementDataBuilder.postBuild(Graphic graphic)",4,1,2,0,1
"me.umov.refill.builder.widget.TeamsManagementDataBuilder.postBuild(Graphic graphic)",4,1,2,0,1
"me.umov.refill.template.TemplateServiceTest.shouldSuccessfullyGenerateAChartQuery()",4,1,2,0,0
"me.umov.refill.types.RouteTransportModeTest.shouldLoadRouteTransportModeAsBycicle()",4,1,2,0,0
"me.umov.refill.types.RouteTransportModeTest.shouldLoadRouteTransportModeAsVehicle()",4,1,2,0,0
"me.umov.refill.types.RouteTransportModeTest.shouldLoadRouteTransportModeAsWalk()",4,1,2,0,0
"me.umov.refill.builder.widget.ActivityExecutionGaugeDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.ActivityExecutionsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.ActivityExecutionsPerTimeDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.ActivityExecutionsPerTypeDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.ActivityNotExecutedDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentAndLocalWithPercentualTasksTableDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesPercentualTableDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentPerformanceDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentTasksBySituation.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentTasksBySituationTable.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentsManagementDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentsWithExecutionsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentsWithExecutionsDataBuilder.getColumns()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentsWithLessBatteryDataBuilder.getColumns()",4,1,1,0,0
"me.umov.refill.builder.widget.AgentsWithoutExecutionsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AverageExecutedTasksPerAgentDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.AverageExecutionTimeDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.DailyExecutedActivitiesDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.DailyExecutedActivitiesDataBuilder.getColumns()",4,1,1,0,0
"me.umov.refill.builder.widget.HorizontalTimelineExecutionDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.ImageCollectedDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.ImageCollectedPerActivityDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.LastExecutedTasksDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithCheckoutExecutedDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithExecutionsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithExecutionsDataBuilder.getColumns()",4,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithTasksDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.MapRouteExpectedXExecutedDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithAndWithoutExecutionsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedActivitiesDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedTasksDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithTasksDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TaskExecutionsPerTeamDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TaskExecutionsPerTimeDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksCancelledDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksInFieldDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksInPreparationDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksPendingDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksPerSituationDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksReturnedDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TasksWithoutCheckOutDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TeamsManagementDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TimelineExecutionDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TopFiveVisitedLocalsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.TotalActivityExecutionsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.builder.widget.VisitedLocalsDataBuilder.getAllowedFilters()",4,1,1,0,0
"me.umov.refill.dao.TypeResolverTest.setUp()",4,1,1,0,0
"me.umov.refill.model.activity.ActivityField.ActivityField(BigInteger id, String name, String type)",4,1,0,0,3
"me.umov.refill.model.column.Field.Field(String column, String caption, int order)",4,1,0,0,3
"me.umov.refill.model.GraphicGroup.GraphicGroup(Long id, String description)",4,1,0,0,2
"me.umov.refill.persistence.ArrayAsListType.returnedClass()",4,1,0,0,0
"me.umov.refill.persistence.IntervalAsStringType.returnedClass()",4,1,0,0,0
"me.umov.refill.persistence.JsonAsStringType.returnedClass()",4,1,0,0,0
"me.umov.refill.fixture.GraphicFixture.withBasicData()",3,1,12,0,0
"me.umov.refill.reflection.ReflectionUtils.isPrimitive(Class<?> type)",3,1,7,0,1
"me.umov.refill.dao.GraphicCacheDao.availableToUpdate()",3,1,6,0,0
"me.umov.refill.builder.widget.AllTasksDataBuilderTest.shouldDefineCreateTaskWidgetAction()",3,1,5,0,0
"me.umov.refill.core.GraphicUpdateManagerTest.shouldTheServiceSleepTimeBeConfigured()",3,1,5,0,0
"me.umov.refill.types.GraphicEntityTest.assertValidEntity(GraphicEntity expectedEntity, Character expectedValue)",3,1,4,0,2
"me.umov.refill.builder.widget.AbstractTableDataBuilderTest.shouldNotHaveDefaultRowAction()",3,1,4,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilderTest.shouldDefineNullOnRowAction()",3,1,4,0,0
"me.umov.refill.builder.widget.AllTasksDataBuilderTest.shouldDefineOpenTaskResumeRowAction()",3,1,4,0,0
"me.umov.refill.core.ConfigTest.shouldLoadConnectionPasswordFromConfigurationFile()",3,1,4,0,0
"me.umov.refill.core.ConfigTest.shouldLoadConnectionURLFromConfigurationFile()",3,1,4,0,0
"me.umov.refill.core.ConfigTest.shouldLoadConnectionUserFromConfigurationFile()",3,1,4,0,0
"me.umov.refill.injection.InjectionModuleTest.shouldSuccessfullInjectSessionFactoryForChartTransaction()",3,1,4,0,0
"me.umov.refill.injection.InjectionModuleTest.shouldSuccessfullInjectSessionFactoryForOperationTransaction()",3,1,4,0,0
"me.umov.refill.validator.RouteValidator.isValid(Route route)",3,1,3,0,1
"me.umov.refill.builder.widget.AbstractChartDataBuilderTest.shouldReturnEmptyListOnDefaultWidgetActions()",3,1,3,0,0
"me.umov.refill.fixture.ActivityFieldFixture.withId()",3,1,3,0,0
"me.umov.refill.injection.DirectionsProvider.get()",3,1,3,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveALongFromTupleValues()",3,1,3,0,0
"me.umov.refill.persistence.RouteResultTransformerTest.shouldJustIgnoreWhenTheMarkersListIsEmpty()",3,1,3,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.shouldGetARealClasseNameFromAProxy()",3,1,3,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.shouldJustRetrieveTheInstanceClassWhenGettingClassFromANonProxyObject()",3,1,3,0,0
"me.umov.refill.persistence.LongArrayType.nullSafeGet(ResultSet rs, String[] names, SessionImplementor session, Object instance)",3,1,2,0,4
"me.umov.refill.persistence.RouteTransportModeTransformer.transformTuple(Object[] tuple, String[] aliases)",3,1,2,0,2
"me.umov.refill.Refill.main(String[] args)",3,1,2,0,1
"me.umov.refill.fixture.ActivityFieldFixture.withId(Long id)",3,1,2,0,1
"me.umov.refill.fixture.GraphicFixture.withRoutes(Route... routes)",3,1,2,0,1
"me.umov.refill.fixture.MarkerFixture.withInfo(MarkerInfo... info)",3,1,2,0,1
"me.umov.refill.fixture.MarkerFixture.withScheduleSituation(ScheduleSituation situation)",3,1,2,0,1
"me.umov.refill.Refill.setUpGraphicManagers()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadCabralUrlFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadDefaultConfigFileFromDevelopment()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadGraphicSleepTimeFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadManagetSleepTimeFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadMaxUpdateQueueSizeFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadMaxUpdateThreadsFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadRemovalDeleteMapsLimitFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.ConfigTest.shouldLoadRemovalManagerSleepTimeFromConfigurationFile()",3,1,2,0,0
"me.umov.refill.core.GraphicRemovalManager.getSleepTime()",3,1,2,0,0
"me.umov.refill.dao.AbstractDaoTest.shouldCreateNewCriteriaBasedOnModelPersistentClass()",3,1,2,0,0
"me.umov.refill.dao.TypeResolverTest.shouldRetrieveATypeClassToAGenericType()",3,1,2,0,0
"me.umov.refill.fixture.ActivityFieldFixture.withName()",3,1,2,0,0
"me.umov.refill.fixture.FieldFixture.withColumn()",3,1,2,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withCacheValue()",3,1,2,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withId()",3,1,2,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withLastUpdate()",3,1,2,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withTransactioId()",3,1,2,0,0
"me.umov.refill.fixture.MediaFixture.withPublicUrl()",3,1,2,0,0
"me.umov.refill.fixture.RouteFixture.withClientId()",3,1,2,0,0
"me.umov.refill.fixture.RouteFixture.withId()",3,1,2,0,0
"me.umov.refill.injection.InjectionModuleTest.shouldInjectCabralResolverAsDirectionsResolver()",3,1,2,0,0
"me.umov.refill.injection.SessionFactoryManagerTest.shouldRetrieveTheChartSessionFactory()",3,1,2,0,0
"me.umov.refill.injection.SessionFactoryManagerTest.shouldRetrieveTheOperationSessionFactory()",3,1,2,0,0
"me.umov.refill.injection.SessionFactoryProviderTest.shouldSuccessfullCreateANewChartSessionFactory()",3,1,2,0,0
"me.umov.refill.injection.SessionFactoryProviderTest.shouldSuccessfullCreateANewOperationSessionFactory()",3,1,2,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldRetrieveAStringFromTupleValues()",3,1,2,0,0
"me.umov.refill.reflection.ReflectionUtilsTest.shouldComplexTypesNotAPrimitiveType()",3,1,2,0,0
"me.umov.refill.service.GraphicCacheServiceTest.shouldRetrieveTheDaoInstance()",3,1,2,0,0
"me.umov.refill.service.GraphicServiceTest.shoudlRetrieveTheDaoInstance()",3,1,2,0,0
"me.umov.refill.template.TemplateServiceTest.shouldSucessfullGenerateAMapMarkersQuery()",3,1,2,0,0
"me.umov.refill.template.TemplateServiceTest.shouldSucessfullGenerateAMapRouteQuery()",3,1,2,0,0
"me.umov.refill.types.GraphicEntityTest.shouldRetrieveNullWhenGettingEntityByInvalidValue()",3,1,2,0,0
"me.umov.refill.types.RouteTransportModeTest.shouldLoadRouteTransportModeAsAutomovelWhenKeyIsNull()",3,1,2,0,0
"me.umov.refill.types.RouteTransportModeTest.shouldLoadRouteTransportModeAsAutomovelWhenUsingEmpty()",3,1,2,0,0
"me.umov.refill.types.RouteTransportModeTest.shouldLoadRouteTransportModeAsAutomovelWhenUsingInvalidValue()",3,1,2,0,0
"me.umov.refill.types.TableColumnTypeTest.shouldGetStringWhenCodeIsInvalid()",3,1,2,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldEmptyGeoCoordinateBeInvalid()",3,1,2,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldInvalidGeocoordinateBeInvalid()",3,1,2,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldNullGeoCoordinateBeInvalid()",3,1,2,0,0
"me.umov.refill.validator.GeoCoordinateValidatorTest.shouldZeroPointAInvalidCoordinateBeInvalid()",3,1,2,0,0
"me.umov.refill.persistence.IntervalAsStringType.nullSafeGet(ResultSet rs, String[] names, SessionImplementor session, Object owner)",3,1,1,0,4
"me.umov.refill.persistence.JsonAsStringType.nullSafeGet(ResultSet rs, String[] names, SessionImplementor session, Object owner)",3,1,1,0,4
"me.umov.refill.builder.widget.AbstractTableDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ActivityExecutionsDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ActivityExecutionsDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ActivityExecutionsPerTimeDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ActivityExecutionsPerTimeDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ActivityExecutionsPerTypeDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ActivityExecutionsPerTypeDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentExecutedActivitiesDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentExecutedActivitiesDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentExecutedTasksDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentExecutedTasksDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentTasksBySituation.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentTasksPercentageBySituation.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentsMobileVersionDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentsMobileVersionDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ImageCollectedPerActivityDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.ImageCollectedPerActivityDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.LocalsWithAndWithoutExecutionsDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.LocalsWithAndWithoutExecutionsDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.OnlineOfflineAgentsDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.OnlineOfflineAgentsDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.PeopleWithAndWithoutExecutionsDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.PeopleWithAndWithoutExecutionsDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TaskExecutedInWeekDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TaskExecutedInWeekDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TaskExecutionsPerTeamDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TaskExecutionsPerTeamDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TaskExecutionsPerTimeDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TaskExecutionsPerTimeDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TasksPerSituationDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TasksPerSituationDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TopFiveVisitedLocalsDataBuilder.buildGroups(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.builder.widget.TopFiveVisitedLocalsDataBuilder.buildMetrics(Graphic graphic, GraphicCache cache)",3,1,1,0,2
"me.umov.refill.persistence.ArrayAsListType.assemble(Serializable cached, Object owner)",3,1,1,0,2
"me.umov.refill.persistence.IntervalAsStringType.assemble(Serializable cached, Object owner)",3,1,1,0,2
"me.umov.refill.persistence.JsonAsStringType.assemble(Serializable cached, Object owner)",3,1,1,0,2
"me.umov.refill.builder.widget.AgentsManagementDataBuilder.widgetActions(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.AgentsWithExecutionsDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.AgentsWithoutExecutionsDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.AllTasksDataBuilder.widgetActions(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.DailyExecutedActivitiesDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.LastExecutedTasksDataBuilder.widgetActions(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.LocalsWithCheckoutExecutedDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.LocalsWithExecutionsDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.LocalsWithTasksDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.LocalsWithoutExecuionsDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.NextTasksForExecutionDataBuilder.widgetActions(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.PeopleWithExecutedActivitiesDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.PeopleWithExecutedTasksDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.PeopleWithTasksDataBuilder.postBuild(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.TasksWithoutCheckOutDataBuilder.widgetActions(Graphic graphic)",3,1,1,0,1
"me.umov.refill.builder.widget.TeamsManagementDataBuilder.widgetActions(Graphic graphic)",3,1,1,0,1
"me.umov.refill.fixture.ActivityFieldFixture.withId(BigInteger id)",3,1,1,0,1
"me.umov.refill.fixture.ActivityFieldFixture.withName(String name)",3,1,1,0,1
"me.umov.refill.fixture.CardDataFixture.withValue(String value)",3,1,1,0,1
"me.umov.refill.fixture.CustomColumnsFixture.withActivity(Entity entity)",3,1,1,0,1
"me.umov.refill.fixture.CustomColumnsFixture.withAgent(Entity entity)",3,1,1,0,1
"me.umov.refill.fixture.CustomColumnsFixture.withItem(Entity entity)",3,1,1,0,1
"me.umov.refill.fixture.CustomColumnsFixture.withLocal(Entity entity)",3,1,1,0,1
"me.umov.refill.fixture.CustomColumnsFixture.withTask(Entity entity)",3,1,1,0,1
"me.umov.refill.fixture.FieldFixture.withCaption(String caption)",3,1,1,0,1
"me.umov.refill.fixture.FieldFixture.withColumn(String column)",3,1,1,0,1
"me.umov.refill.fixture.FieldFixture.withOperation(Operation operation)",3,1,1,0,1
"me.umov.refill.fixture.FieldFixture.withOrder(int order)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withAttemps(Integer attempts)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withClientId(Long clientId)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withCustomColumns(String customColumns)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withError(String error)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withFilters(String filters)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withOnlineFilter(List<OnlineFilter> onlineFilters)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withToken(String token)",3,1,1,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withType(CacheType type)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFilterFixture.withDescription(String description)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFilterFixture.withEntity(String entity)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFilterFixture.withField(String field)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFilterFixture.withId(Long id)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFilterFixture.withOperator(String operator)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFilterFixture.withValue(String value)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withCardData(CardData cardData)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withClientId(Long clientId)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withCustomColumns(CustomColumns customColumns)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withData(List<GraphicDataRow> data)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withDataFilter(GraphicDataFilter dataFilter)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withDescription(String description)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withEntity(String entity)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withFilters(List<GraphicFilter> filters)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withGenerationDate(Long generationDate)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withGroupedBars(Boolean groupedBars)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withGroups(List<GraphicGroup> groups)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withIcons(List<GraphicIcon> icons)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withId(Long id)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withMarkers(List<Marker> markers)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withMetrics(List<GraphicMetric> metrics)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withOrderBy(Character orderBy)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withPrimaryEntity(GraphicEntity primaryEntity)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withReferenceId(Long referenceId)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withSql(String sql)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withToken(String token)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withType(GraphicType type)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withVisibleBarsOnBarChart(Long visibleBarsOnBarChart)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withVisibleLinesOnTable(Long visibleLinesOnTable)",3,1,1,0,1
"me.umov.refill.fixture.GraphicFixture.withVisibleSectorsOnPieChart(long visibleSectorsOnPieChart)",3,1,1,0,1
"me.umov.refill.fixture.GraphicGroupFixture.withDateField(Character dateField)",3,1,1,0,1
"me.umov.refill.fixture.GraphicGroupFixture.withDescription(String description)",3,1,1,0,1
"me.umov.refill.fixture.GraphicGroupFixture.withEntity(Character entity)",3,1,1,0,1
"me.umov.refill.fixture.GraphicGroupFixture.withEntityField(String entityField)",3,1,1,0,1
"me.umov.refill.fixture.GraphicGroupFixture.withId(Long id)",3,1,1,0,1
"me.umov.refill.fixture.GraphicIconFixture.withIdentifier(Long identifier)",3,1,1,0,1
"me.umov.refill.fixture.GraphicIconFixture.withMedia(Media media)",3,1,1,0,1
"me.umov.refill.fixture.GraphicMetricFixture.withDescription(String description)",3,1,1,0,1
"me.umov.refill.fixture.GraphicMetricFixture.withEntity(Character entity)",3,1,1,0,1
"me.umov.refill.fixture.GraphicMetricFixture.withEntityField(String entityField)",3,1,1,0,1
"me.umov.refill.fixture.GraphicMetricFixture.withId(Long id)",3,1,1,0,1
"me.umov.refill.fixture.GraphicMetricFixture.withOperation(Character operation)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withEstimationTime(LocalDateTime estimation)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withForecastStartDate(LocalDateTime forecastStartDate)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withIcon(String icon)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withId(Long id)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withNextPlace(Marker nextPlace)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withPosition(String position)",3,1,1,0,1
"me.umov.refill.fixture.MarkerFixture.withWaitTime(Long waitTime)",3,1,1,0,1
"me.umov.refill.fixture.OnlineFilterFixture.withName(String name)",3,1,1,0,1
"me.umov.refill.fixture.OnlineFilterFixture.withValue(Object... values)",3,1,1,0,1
"me.umov.refill.fixture.RouteFixture.withFirstPlace(Marker firstPlace)",3,1,1,0,1
"me.umov.refill.fixture.TableColumnDataFixture.withOrder(int order)",3,1,1,0,1
"me.umov.refill.fixture.TestModelFixture.withId(Long id)",3,1,1,0,1
"me.umov.refill.fixture.TestModelFixture.withName(String name)",3,1,1,0,1
"me.umov.refill.persistence.ArrayAsListType.disassemble(Object value)",3,1,1,0,1
"me.umov.refill.persistence.ArrayAsListType.hashCode(Object o)",3,1,1,0,1
"me.umov.refill.persistence.IntervalAsStringType.disassemble(Object value)",3,1,1,0,1
"me.umov.refill.persistence.IntervalAsStringType.hashCode(Object o)",3,1,1,0,1
"me.umov.refill.persistence.JsonAsStringType.disassemble(Object value)",3,1,1,0,1
"me.umov.refill.persistence.JsonAsStringType.hashCode(Object o)",3,1,1,0,1
"me.umov.refill.reflection.ReflectionUtils.initialize(T instance)",3,1,1,0,1
"me.umov.refill.builder.map.AbstractMapDataBuilderTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.map.AbstractMapRouteDataBuilderTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.map.TrackingMapDataBuilderTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.widget.ActivityExecutionGaugeDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentDailyHoursDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilderTest.setup()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentExecutedTasksDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentTaskAgendaDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentTaskAgendaDataBuilder.getColumns()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentTasksPercentageBySituation.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentWithPercentualTasksTableDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentsManagementDataBuilder.getColumns()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentsMobileVersionDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentsWithLessBatteryDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.AgentsWithoutExecutionsDataBuilder.getColumns()",3,1,1,0,0
"me.umov.refill.builder.widget.AverageExecutedTasksPerAgentDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.AverageExecutionTimeDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.CustomEntitiesTableDataBuilderTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.widget.CustomHistoryCardDataBuilderTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.widget.CustomHistoryTableDataBuilder.requiredFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.CustomHistoryTableDataBuilderTest.setup()",3,1,1,0,0
"me.umov.refill.builder.widget.ImageCollectedDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithAndWithoutExecutionsDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithCheckoutExecutedDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithTasksDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithoutExecuionsDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.LocalsWithoutExecuionsDataBuilder.getColumns()",3,1,1,0,0
"me.umov.refill.builder.widget.MapRouteExpectedXExecutedDataBuilder.requiredFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.OnlineOfflineAgentsDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedActivitiesDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedTasksDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.PeopleWithTasksDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TaskExecutedInWeekDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.TaskExecutionGaugeDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TasksCancelledDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TasksInFieldDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TasksInPreparationDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TasksPendingDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TasksReturnedDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TasksWithoutCheckOutDataBuilder.getColumns()",3,1,1,0,0
"me.umov.refill.builder.widget.TeamsManagementDataBuilder.getColumns()",3,1,1,0,0
"me.umov.refill.builder.widget.TotalActivityExecutionsDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.TotalDistancePerDayDataBuilder.getAllowedFilters()",3,1,1,0,0
"me.umov.refill.builder.widget.VisitedLocalsDataBuilder.getCardSubTitle()",3,1,1,0,0
"me.umov.refill.builder.widget.customtable.ActivityCustomColumnTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.widget.customtable.EntitiesCustomColumnTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.widget.customtable.ItemCustomColumnTest.setUp()",3,1,1,0,0
"me.umov.refill.builder.widget.customtable.TableColumnDataBuilderTest.setUp()",3,1,1,0,0
"me.umov.refill.core.ConfigTest.setUp()",3,1,1,0,0
"me.umov.refill.core.GraphicRemovalManagerTest.setup()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.alphaNumericType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.audioType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.dateType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.documentType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.imageType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.multimediaType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.videoType()",3,1,1,0,0
"me.umov.refill.fixture.ActivityFieldFixture.withType()",3,1,1,0,0
"me.umov.refill.fixture.GraphicCacheFixture.notOnline()",3,1,1,0,0
"me.umov.refill.fixture.GraphicCacheFixture.online()",3,1,1,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withActivityFilter()",3,1,1,0,0
"me.umov.refill.fixture.GraphicCacheFixture.withFilters()",3,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withCustomColumns()",3,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withNoFilters()",3,1,1,0,0
"me.umov.refill.fixture.GraphicGroupFixture.asAdditionalField()",3,1,1,0,0
"me.umov.refill.fixture.GraphicGroupFixture.notAdditionalField()",3,1,1,0,0
"me.umov.refill.fixture.MarkerFixture.withEmptyInfo()",3,1,1,0,0
"me.umov.refill.fixture.RouteFixture.invalid()",3,1,1,0,0
"me.umov.refill.fixture.RouteFixture.valid()",3,1,1,0,0
"me.umov.refill.geo.CabralGeoProcessorTest.setUp()",3,1,1,0,0
"me.umov.refill.geo.DirectionsServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.injection.InjectionModuleTest.setUp()",3,1,1,0,0
"me.umov.refill.injection.SessionFactoryManagerTest.setUp()",3,1,1,0,0
"me.umov.refill.model.activity.ActivityField.hashCode()",3,1,1,0,0
"me.umov.refill.model.activity.ActivityFieldSoyDTO.hashCode()",3,1,1,0,0
"me.umov.refill.model.column.CustomColumnsTest.setUp()",3,1,1,0,0
"me.umov.refill.model.column.Field.hashCode()",3,1,1,0,0
"me.umov.refill.model.customfield.CustomFieldTest.setUp()",3,1,1,0,0
"me.umov.refill.persistence.ArrayAsListTypeTest.setUp()",3,1,1,0,0
"me.umov.refill.service.AbstractServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.ActivityFieldServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.AttemptServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.CustomFieldServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.GraphicCacheServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.GraphicDataServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.GraphicServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.service.RouteDataServiceTest.setup()",3,1,1,0,0
"me.umov.refill.service.ScheduleDBViewEnvironmentServiceTest.setUp()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyActivityHistoryEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyAgentEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyCustomEntityEntryEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyCustomFieldEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyItemEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyScheduleEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifySectionFieldEntity()",3,1,1,0,0
"me.umov.refill.types.GraphicEntityTest.shouldVerifyServiceLocalEntity()",3,1,1,0,0
"me.umov.refill.model.GraphicFilter.GraphicFilter(String entity, String field, String operator, String value)",3,1,0,0,4
"me.umov.refill.persistence.ArrayAsListType.replace(Object original, Object target, Object owner)",3,1,0,0,3
"me.umov.refill.persistence.IntervalAsStringType.replace(Object original, Object target, Object owner)",3,1,0,0,3
"me.umov.refill.persistence.JsonAsStringType.replace(Object original, Object target, Object owner)",3,1,0,0,3
"me.umov.refill.persistence.LongArrayType.replace(Object original, Object target, Object owner)",3,1,0,0,3
"me.umov.refill.model.GraphicMetric.GraphicMetric(Long id, String description)",3,1,0,0,2
"me.umov.refill.model.OnlineFilterOption.OnlineFilterOption(String key, String value)",3,1,0,0,2
"me.umov.refill.model.activity.ActivityFieldSoyDTO.ActivityFieldSoyDTO(Long clientId, List<Long> activityFieldIds)",3,1,0,0,2
"me.umov.refill.model.customfield.CustomFieldSoyDTO.CustomFieldSoyDTO(Long clientId, List<String> customFieldIds)",3,1,0,0,2
"me.umov.refill.persistence.LongArrayType.assemble(Serializable cached, Object owner)",3,1,0,0,2
"me.umov.refill.persistence.MarkerResultTransformer.isTransformedValueATupleElement(String[] aliases, int tupleLength)",3,1,0,0,2
"me.umov.refill.persistence.RouteTransportModeTransformer.isTransformedValueATupleElement(String[] aliases, int tupleLength)",3,1,0,0,2
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.builder.widget.AgentPerformanceDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.builder.widget.AllTasksDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.builder.widget.LastExecutedTasksDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.builder.widget.NextTasksForExecutionDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.builder.widget.TasksWithoutCheckOutDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.builder.widget.TeamAgentLogDataBuilder.rowAction(Graphic graphic)",3,1,0,0,1
"me.umov.refill.dao.TypeResolver.TypeResolver(TypeLiteral<T> type)",3,1,0,0,1
"me.umov.refill.model.GraphicFilter.setId(Long id)",3,1,0,0,1
"me.umov.refill.model.GraphicGroup.setId(Long id)",3,1,0,0,1
"me.umov.refill.model.GraphicIcon.setId(Long id)",3,1,0,0,1
"me.umov.refill.model.GraphicMetric.setId(Long id)",3,1,0,0,1
"me.umov.refill.model.OnlineFilter.setOptions(List<OnlineFilterOption> options)",3,1,0,0,1
"me.umov.refill.model.OnlineFilter.setValues(Object... values)",3,1,0,0,1
"me.umov.refill.model.ScheduleDBViewEnvironment.setId(Long id)",3,1,0,0,1
"me.umov.refill.model.TestModel.TestModel(Long id)",3,1,0,0,1
"me.umov.refill.model.TestModel.setId(Long id)",3,1,0,0,1
"me.umov.refill.model.customfield.CustomField.setId(String id)",3,1,0,0,1
"me.umov.refill.persistence.ArrayAsListType.deepCopy(Object value)",3,1,0,0,1
"me.umov.refill.persistence.IntervalAsStringType.deepCopy(Object value)",3,1,0,0,1
"me.umov.refill.persistence.JsonAsStringType.deepCopy(Object value)",3,1,0,0,1
"me.umov.refill.persistence.LongArrayType.disassemble(Object o)",3,1,0,0,1
"me.umov.refill.persistence.OrderBySqlFormula.OrderBySqlFormula(String sqlFormula)",3,1,0,0,1
"me.umov.refill.types.handler.LongTypeHandler.LongTypeHandler(Boolean allowBinding)",3,1,0,0,1
"me.umov.refill.builder.widget.ActivityExecutionGaugeDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.ActivityNotExecutedDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentAndLocalWithPercentualTasksTableDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentDailyHoursDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesPercentualTableDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentPerformanceDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentTaskAgendaDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentTasksBySituationTable.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentWithPercentualTasksTableDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentsManagementDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentsWithExecutionsDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentsWithLessBatteryDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AgentsWithoutExecutionsDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AllTasksDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AverageExecutedTasksPerAgentDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.AverageExecutionTimeDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.CustomHistoryTableDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.DailyExecutedActivitiesDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.ImageCollectedDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.LastExecutedTasksDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithCheckoutExecutedDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithExecutionsDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithTasksDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithoutExecuionsDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.NextTasksForExecutionDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedActivitiesDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedTasksDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithTasksDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TaskExecutionGaugeDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TasksCancelledDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TasksInFieldDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TasksInPreparationDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TasksPendingDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TasksReturnedDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TasksWithoutCheckOutDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TeamAgentLogDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TeamsManagementDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TotalActivityExecutionsDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.TotalDistancePerDayDataBuilder.getTitle()",3,1,0,0,0
"me.umov.refill.builder.widget.VisitedLocalsDataBuilder.getCardTitle()",3,1,0,0,0
"me.umov.refill.core.ProcessTest.tearDown()",3,1,0,0,0
"me.umov.refill.dao.AbstractChartDao.getSessionFactory()",3,1,0,0,0
"me.umov.refill.dao.AbstractOperationDao.getSessionFactory()",3,1,0,0,0
"me.umov.refill.dao.TestDao.getSessionFactory()",3,1,0,0,0
"me.umov.refill.model.GraphicDataRow.getId()",3,1,0,0,0
"me.umov.refill.model.GraphicFilter.getId()",3,1,0,0,0
"me.umov.refill.model.GraphicGroup.getId()",3,1,0,0,0
"me.umov.refill.model.GraphicIcon.getId()",3,1,0,0,0
"me.umov.refill.model.GraphicMetric.getId()",3,1,0,0,0
"me.umov.refill.model.ScheduleDBViewEnvironment.getId()",3,1,0,0,0
"me.umov.refill.model.TestModel.getId()",3,1,0,0,0
"me.umov.refill.model.column.Field.toString()",3,1,0,0,0
"me.umov.refill.model.customfield.CustomField.getId()",3,1,0,0,0
"me.umov.refill.persistence.ArrayAsListType.isMutable()",3,1,0,0,0
"me.umov.refill.persistence.ArrayAsListType.sqlTypes()",3,1,0,0,0
"me.umov.refill.persistence.IntervalAsStringType.isMutable()",3,1,0,0,0
"me.umov.refill.persistence.IntervalAsStringType.sqlTypes()",3,1,0,0,0
"me.umov.refill.persistence.JsonAsStringType.isMutable()",3,1,0,0,0
"me.umov.refill.persistence.JsonAsStringType.sqlTypes()",3,1,0,0,0
"me.umov.refill.persistence.LongArrayType.isMutable()",3,1,0,0,0
"me.umov.refill.persistence.LongArrayType.returnedClass()",3,1,0,0,0
"me.umov.refill.persistence.LongArrayType.sqlTypes()",3,1,0,0,0
"me.umov.refill.service.GraphicService.getDaoInstance()",3,1,0,0,0
"me.umov.refill.service.TestService.getDaoInstance()",3,1,0,0,0
"me.umov.refill.template.TemplateEngineTest.setUp()",3,1,0,0,0
"me.umov.refill.types.handler.AnyArrayTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.AnyArrayTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.AnyArrayTypeHandlerTest.setup()",3,1,0,0,0
"me.umov.refill.types.handler.CharArrayTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.CharArrayTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.CharArrayTypeHandlerTest.setup()",3,1,0,0,0
"me.umov.refill.types.handler.DateAsDatetimeRangeTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.DateAsDatetimeRangeTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.DateEndOfDayTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.DateEndOfDayTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.DateTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.DateTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.LongArrayTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.LongArrayTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.LongTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.LongTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.StringTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.StringTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.types.handler.TimeRangeTypeHandler.allowBinding()",3,1,0,0,0
"me.umov.refill.types.handler.TimeRangeTypeHandler.getCastType()",3,1,0,0,0
"me.umov.refill.fixture.GraphicFilterFixture.fullFilled()",2,1,6,0,0
"me.umov.refill.fixture.GraphicGroupFixture.fullFilled()",2,1,6,0,0
"me.umov.refill.fixture.GraphicMetricFixture.fullFilled()",2,1,5,0,0
"me.umov.refill.fixture.RouteFixture.filled()",2,1,5,0,0
"me.umov.refill.dao.ScheduleDBViewEnvironmentDao.isEnvironmentDBViewActive(Long clientId)",2,1,4,0,1
"me.umov.refill.dao.GraphicCacheDao.isNotTransactionedAndAlreadyUpdated()",2,1,4,0,0
"me.umov.refill.fixture.GraphicFixture.withIcons()",2,1,4,0,0
"me.umov.refill.fixture.GraphicIconFixture.withMedia()",2,1,4,0,0
"me.umov.refill.template.TemplateEngine.generate(String templateName, Map<String,Object> parameters)",2,1,3,0,2
"me.umov.refill.template.TemplateEngine.generate(String templateName, SoyMapData parameters)",2,1,3,0,2
"me.umov.refill.template.TemplateService.getWidgetQuery(WidgetType widgetType, Graphic graphic)",2,1,3,0,2
"me.umov.refill.fixture.MarkerFixture.valid()",2,1,3,0,0
"me.umov.refill.model.map.Route.validate()",2,1,3,0,0
"me.umov.refill.dao.GraphicDataDao.getMarkers(String sql, Map<String,Object> parameters)",2,1,2,0,2
"me.umov.refill.dao.GraphicDataDao.getRowsFromSQLQuery(String sql, Map<String,Object> parameters)",2,1,2,0,2
"me.umov.refill.dao.ActivityFieldDao.getActivityFields(String query)",2,1,2,0,1
"me.umov.refill.dao.CustomFieldDao.getCustomFields(String query)",2,1,2,0,1
"me.umov.refill.dao.GraphicCacheDao.findByToken(String token)",2,1,2,0,1
"me.umov.refill.dao.GraphicDao.findByToken(String token)",2,1,2,0,1
"me.umov.refill.dao.GraphicDataDao.getMarkers(String sql)",2,1,2,0,1
"me.umov.refill.dao.GraphicDataDao.getOnlineFilterOptions(String sql)",2,1,2,0,1
"me.umov.refill.dao.GraphicDataDao.getRoutes(String sql)",2,1,2,0,1
"me.umov.refill.dao.GraphicDataDao.getRowsFromSQLQuery(String sql)",2,1,2,0,1
"me.umov.refill.dao.RouteDataDao.getTransportMode(String sql)",2,1,2,0,1
"me.umov.refill.fixture.GraphicFixture.withData(GraphicDataRow... data)",2,1,2,0,1
"me.umov.refill.fixture.GraphicFixture.withFilters(GraphicFilter... filters)",2,1,2,0,1
"me.umov.refill.fixture.GraphicFixture.withGroups(GraphicGroup... groups)",2,1,2,0,1
"me.umov.refill.fixture.GraphicFixture.withMarkers(Marker... markers)",2,1,2,0,1
"me.umov.refill.fixture.GraphicFixture.withMetrics(GraphicMetric... metrics)",2,1,2,0,1
"me.umov.refill.injection.TransactionManager.getCurrentTransaction(SessionFactory sessionFactory)",2,1,2,0,1
"me.umov.refill.service.AbstractService.findById(Long id)",2,1,2,0,1
"me.umov.refill.service.AbstractService.save(T instance)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getActivityFieldQuery(ActivityFieldSoyDTO activityFieldSoyDTO)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getChartQuery(Graphic graphic)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getContextChartQuery(Graphic graphic)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getCustomFieldQuery(CustomFieldSoyDTO customFieldSoyDTO)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getMapMarkersQuery(Graphic graphic)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getMapRoutesQuery(Graphic graphic)",2,1,2,0,1
"me.umov.refill.template.TemplateService.getRouteTransportModeQuery(Route route)",2,1,2,0,1
"me.umov.refill.template.TemplateServiceTest.getSQLPart(Pattern pattern)",2,1,2,0,1
"me.umov.refill.fixture.GraphicCacheFixture.withToken()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFilterFixture.withDescription()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFilterFixture.withField()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFilterFixture.withId()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFilterFixture.withValue()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withClientId()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withDescription()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withGenerationDate()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withId()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withReferenceId()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withSql()",2,1,2,0,0
"me.umov.refill.fixture.GraphicFixture.withToken()",2,1,2,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withDateField()",2,1,2,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withDescription()",2,1,2,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withEntity()",2,1,2,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withEntityField()",2,1,2,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withId()",2,1,2,0,0
"me.umov.refill.fixture.GraphicMetricFixture.withDescription()",2,1,2,0,0
"me.umov.refill.fixture.GraphicMetricFixture.withEntityField()",2,1,2,0,0
"me.umov.refill.fixture.GraphicMetricFixture.withId()",2,1,2,0,0
"me.umov.refill.fixture.MarkerFixture.withEstimationTime()",2,1,2,0,0
"me.umov.refill.fixture.MarkerFixture.withForecastStartDate()",2,1,2,0,0
"me.umov.refill.fixture.OnlineFilterFixture.withName()",2,1,2,0,0
"me.umov.refill.fixture.TestModelFixture.withId()",2,1,2,0,0
"me.umov.refill.fixture.TestModelFixture.withName()",2,1,2,0,0
"me.umov.refill.model.OnlineFilter.isValid()",2,1,2,0,0
"me.umov.refill.model.customfield.CustomField.isAudio()",2,1,2,0,0
"me.umov.refill.model.customfield.CustomField.isImage()",2,1,2,0,0
"me.umov.refill.model.customfield.CustomField.isPdf()",2,1,2,0,0
"me.umov.refill.model.customfield.CustomField.isUrl()",2,1,2,0,0
"me.umov.refill.model.customfield.CustomField.isVideo()",2,1,2,0,0
"me.umov.refill.persistence.PersistenceHelperTest.shouldReturnNullWhenTryingToGetInvalidAliasFromTuple()",2,1,2,0,0
"me.umov.refill.service.AbstractService.findAll()",2,1,2,0,0
"me.umov.refill.model.GraphicDataRow.addValue(String name, Object value)",2,1,1,0,2
"me.umov.refill.model.GraphicMetric.GraphicMetric(Integer id, String description)",2,1,1,0,2
"me.umov.refill.serialization.Serializer.fromJSON(String json, Type type)",2,1,1,0,2
"me.umov.refill.util.TestUtils.assertArrayEquals(Object[] expected, Object current)",2,1,1,0,2
"me.umov.refill.core.GraphicRemovalManager.hasNoMapsToRemove(List<String> expiredGraphicsToRemove)",2,1,1,0,1
"me.umov.refill.reflection.ReflectionUtils.getInstanceClass(Object instance)",2,1,1,0,1
"me.umov.refill.serialization.Serializer.customColumnsFromJson(String json)",2,1,1,0,1
"me.umov.refill.serialization.Serializer.filtersFromJson(String json)",2,1,1,0,1
"me.umov.refill.serialization.Serializer.toJSON(Object object)",2,1,1,0,1
"me.umov.refill.service.ScheduleDBViewEnvironmentService.isEnvironmentDBViewActive(Long clientId)",2,1,1,0,1
"me.umov.refill.template.TemplateEngine.getRenderer(String templateName)",2,1,1,0,1
"me.umov.refill.util.ListUtils.isEmpty(List<?> list)",2,1,1,0,1
"me.umov.refill.util.ListUtils.isNotEmpty(List<?> list)",2,1,1,0,1
"me.umov.refill.Refill.setUpShutdownMonitor()",2,1,1,0,0
"me.umov.refill.Refill.startRemovalGraphicService()",2,1,1,0,0
"me.umov.refill.Refill.startUpdateGraphicService()",2,1,1,0,0
"me.umov.refill.dao.GraphicCacheDao.withoutData()",2,1,1,0,0
"me.umov.refill.dao.GraphicCacheDao.withoutError()",2,1,1,0,0
"me.umov.refill.dao.TypeResolver.getTypeClass()",2,1,1,0,0
"me.umov.refill.fixture.GraphicCacheFixture.asChartType()",2,1,1,0,0
"me.umov.refill.fixture.GraphicCacheFixture.asMapType()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFilterFixture.asAgentFilter()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFilterFixture.asHistoryFilter()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFilterFixture.asItemFilter()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFilterFixture.asScheduleFilter()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFilterFixture.asServiceLocalFilter()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFilterFixture.withOperator()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.fullFilled()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withDataFilter()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withGroupedBars()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withHistoryEntity()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withOrderBy()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withType()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withVisibleBarsOnBarChart()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withVisibleLinesOnTable()",2,1,1,0,0
"me.umov.refill.fixture.GraphicFixture.withVisibleSectorsOnPieChart()",2,1,1,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withAgentEntity()",2,1,1,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withSectionFieldEntity()",2,1,1,0,0
"me.umov.refill.fixture.GraphicGroupFixture.withServiceLocalEntity()",2,1,1,0,0
"me.umov.refill.fixture.GraphicMetricFixture.asAverageOperation()",2,1,1,0,0
"me.umov.refill.fixture.GraphicMetricFixture.asCountOperation()",2,1,1,0,0
"me.umov.refill.fixture.GraphicMetricFixture.asSectionFieldEntity()",2,1,1,0,0
"me.umov.refill.fixture.GraphicMetricFixture.asSumOperation()",2,1,1,0,0
"me.umov.refill.fixture.MarkerFixture.invalid()",2,1,1,0,0
"me.umov.refill.fixture.MarkerFixture.withPosition()",2,1,1,0,0
"me.umov.refill.model.GraphicDataRow.getValues()",2,1,1,0,0
"me.umov.refill.model.OnlineFilter.isInvalid()",2,1,1,0,0
"me.umov.refill.model.OnlineFilter.toGraphicFilter()",2,1,1,0,0
"me.umov.refill.model.ScheduleDBViewEnvironment.getStatus()",2,1,1,0,0
"me.umov.refill.model.activity.ActivityField.isDate()",2,1,1,0,0
"me.umov.refill.model.activity.ActivityField.isImage()",2,1,1,0,0
"me.umov.refill.model.customfield.CustomField.isDate()",2,1,1,0,0
"me.umov.refill.model.map.Route.getTransportMode()",2,1,1,0,0
"me.umov.refill.template.TemplateServiceTest.getFromPart()",2,1,1,0,0
"me.umov.refill.template.TemplateServiceTest.getGroupByPart()",2,1,1,0,0
"me.umov.refill.template.TemplateServiceTest.getSelectPart()",2,1,1,0,0
"me.umov.refill.template.TemplateServiceTest.getSqlQuery()",2,1,1,0,0
"me.umov.refill.template.TemplateServiceTest.getWherePart()",2,1,1,0,0
"me.umov.refill.builder.widget.AbstractGaugeDataBuilder.AbstractGaugeDataBuilder(WidgetType widgetType, GraphicType graphicType)",2,1,0,0,2
"me.umov.refill.builder.widget.AbstractTableDataBuilder.AbstractTableDataBuilder(WidgetType widgetType, GraphicType graphicType)",2,1,0,0,2
"me.umov.refill.fixture.TableColumnDataFixture.TableColumnDataFixture(String caption, String name)",2,1,0,0,2
"me.umov.refill.fixture.TableColumnDataFixture.get(String caption, String name)",2,1,0,0,2
"me.umov.refill.persistence.OrderBySqlFormula.toSqlString(Criteria criteria, CriteriaQuery criteriaQuery)",2,1,0,0,2
"me.umov.refill.fixture.GraphicFixture.GraphicFixture(GraphicCache cache)",2,1,0,0,1
"me.umov.refill.fixture.GraphicFixture.get(GraphicCache cache)",2,1,0,0,1
"me.umov.refill.model.AgentDataRow.setId(Long id)",2,1,0,0,1
"me.umov.refill.model.AgentDataRow.setLogin(String login)",2,1,0,0,1
"me.umov.refill.model.AgentDataRow.setMail(String mail)",2,1,0,0,1
"me.umov.refill.model.AgentDataRow.setMetrics(List<Metric> metrics)",2,1,0,0,1
"me.umov.refill.model.AgentDataRow.setName(String name)",2,1,0,0,1
"me.umov.refill.model.AgentDataRow.setPhone(String phone)",2,1,0,0,1
"me.umov.refill.model.ChartData.setLegendAtBottom(Boolean legendAtBottom)",2,1,0,0,1
"me.umov.refill.model.ChartData.setObservation(String observation)",2,1,0,0,1
"me.umov.refill.model.ChartData.setPeriodLegend(String periodLegend)",2,1,0,0,1
"me.umov.refill.model.ChartData.setRotated(Boolean rotated)",2,1,0,0,1
"me.umov.refill.model.ChartData.setSeriesType(String seriesType)",2,1,0,0,1
"me.umov.refill.model.ChartData.setShowLegend(Boolean showLegend)",2,1,0,0,1
"me.umov.refill.model.ChartData.setTitle(String title)",2,1,0,0,1
"me.umov.refill.model.GraphicDataRow.setContextKey(Object contextKey)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setBindingValue(Object bindingValue)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setCastType(String castType)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setDescription(String description)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setEntity(String entity)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setField(String field)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setOnlineFilterType(String onlineFilterType)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setOperator(String operator)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setUseBinding(boolean useBinding)",2,1,0,0,1
"me.umov.refill.model.GraphicFilter.setValue(String value)",2,1,0,0,1
"me.umov.refill.model.GraphicGroup.setAdditionalField(Boolean additionalField)",2,1,0,0,1
"me.umov.refill.model.GraphicGroup.setDateField(Character dateField)",2,1,0,0,1
"me.umov.refill.model.GraphicGroup.setDescription(String description)",2,1,0,0,1
"me.umov.refill.model.GraphicGroup.setEntity(Character entity)",2,1,0,0,1
"me.umov.refill.model.GraphicGroup.setEntityField(String entityField)",2,1,0,0,1
"me.umov.refill.model.GraphicGroup.setReferenceEntity(Character referenceEntity)",2,1,0,0,1
"me.umov.refill.model.GraphicIcon.setGraphic(Graphic graphic)",2,1,0,0,1
"me.umov.refill.model.GraphicIcon.setIdentifier(Long identifier)",2,1,0,0,1
"me.umov.refill.model.GraphicIcon.setMedia(Media media)",2,1,0,0,1
"me.umov.refill.model.GraphicMetric.setDescription(String description)",2,1,0,0,1
"me.umov.refill.model.GraphicMetric.setEntity(Character entity)",2,1,0,0,1
"me.umov.refill.model.GraphicMetric.setEntityField(String entityField)",2,1,0,0,1
"me.umov.refill.model.GraphicMetric.setOperation(Character operation)",2,1,0,0,1
"me.umov.refill.model.GraphicMetric.setOrder(Character order)",2,1,0,0,1
"me.umov.refill.model.GraphicMetric.setReferenceEntity(Character referenceEntity)",2,1,0,0,1
"me.umov.refill.model.Media.setId(Long id)",2,1,0,0,1
"me.umov.refill.model.Media.setPublicUrl(String publicUrl)",2,1,0,0,1
"me.umov.refill.model.Metric.setIdentifier(String identifier)",2,1,0,0,1
"me.umov.refill.model.Metric.setValue(String value)",2,1,0,0,1
"me.umov.refill.model.Metric.setX(Integer x)",2,1,0,0,1
"me.umov.refill.model.Metric.setY(Integer y)",2,1,0,0,1
"me.umov.refill.model.OnlineFilter.setLabel(String label)",2,1,0,0,1
"me.umov.refill.model.OnlineFilter.setMandatory(boolean mandatory)",2,1,0,0,1
"me.umov.refill.model.OnlineFilter.setName(String name)",2,1,0,0,1
"me.umov.refill.model.OnlineFilter.setType(String type)",2,1,0,0,1
"me.umov.refill.model.OnlineFilterOption.setKey(String key)",2,1,0,0,1
"me.umov.refill.model.OnlineFilterOption.setTeam(String team)",2,1,0,0,1
"me.umov.refill.model.OnlineFilterOption.setValue(String value)",2,1,0,0,1
"me.umov.refill.model.ScheduleDBViewEnvironment.setClientId(Long clientId)",2,1,0,0,1
"me.umov.refill.model.TableData.setColumns(List<TableColumnData> columns)",2,1,0,0,1
"me.umov.refill.model.TableData.setCustomFontSize(String customFontSize)",2,1,0,0,1
"me.umov.refill.model.TableData.setDatasource(List<Object> datasource)",2,1,0,0,1
"me.umov.refill.model.TableData.setRowAction(TableRowActionType rowAction)",2,1,0,0,1
"me.umov.refill.model.TableData.setTitle(String title)",2,1,0,0,1
"me.umov.refill.model.TestModel.setModelAttribute(TestModel modelAttribute)",2,1,0,0,1
"me.umov.refill.model.TestModel.setModelsList(List<TestModel> modelsList)",2,1,0,0,1
"me.umov.refill.model.TestModel.setModelsMap(Map<String,TestModel> modelsMap)",2,1,0,0,1
"me.umov.refill.model.TestModel.setName(String name)",2,1,0,0,1
"me.umov.refill.model.activity.ActivityField.setId(BigInteger id)",2,1,0,0,1
"me.umov.refill.model.activity.ActivityField.setName(String name)",2,1,0,0,1
"me.umov.refill.model.activity.ActivityField.setType(String type)",2,1,0,0,1
"me.umov.refill.model.column.Field.setAgreggationCastType(String agreggationCastType)",2,1,0,0,1
"me.umov.refill.model.column.Field.setCaption(String caption)",2,1,0,0,1
"me.umov.refill.model.column.Field.setColumn(String column)",2,1,0,0,1
"me.umov.refill.model.column.Field.setOperation(Operation operation)",2,1,0,0,1
"me.umov.refill.model.column.Field.setOrder(int order)",2,1,0,0,1
"me.umov.refill.model.column.Field.setType(String type)",2,1,0,0,1
"me.umov.refill.model.customfield.CustomField.setDescription(String description)",2,1,0,0,1
"me.umov.refill.model.customfield.CustomField.setSubtype(String subtype)",2,1,0,0,1
"me.umov.refill.model.customfield.CustomField.setType(String type)",2,1,0,0,1
"me.umov.refill.model.map.Route.setClientId(Long clientId)",2,1,0,0,1
"me.umov.refill.model.map.Route.setDescription(String description)",2,1,0,0,1
"me.umov.refill.model.map.Route.setFirstPlace(Marker firstPlace)",2,1,0,0,1
"me.umov.refill.model.map.Route.setId(Long id)",2,1,0,0,1
"me.umov.refill.model.map.Route.setValid(boolean valid)",2,1,0,0,1
"me.umov.refill.persistence.OrderBySqlFormula.sqlFormula(String sqlFormula)",2,1,0,0,1
"me.umov.refill.service.AttemptService.setConfig(Config config)",2,1,0,0,1
"me.umov.refill.types.handler.StringTypeHandler.StringTypeHandler(boolean suffixWildCard)",2,1,0,0,1
"me.umov.refill.builder.widget.ActivityExecutionGaugeDataBuilder.ActivityExecutionGaugeDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.ActivityExecutionsDataBuilder.ActivityExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.ActivityExecutionsPerTimeDataBuilder.ActivityExecutionsPerTimeDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.ActivityExecutionsPerTypeDataBuilder.ActivityExecutionsPerTypeDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.ActivityNotExecutedDataBuilder.ActivityNotExecutedDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentAndLocalWithPercentualTasksTableDataBuilder.AgentAndLocalWithPercentualTasksTableDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentDailyHoursDataBuilder.AgentDailyHoursDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentDailyResumeTableDataBuilder.AgentDailyResumeTableDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesDataBuilder.AgentExecutedActivitiesDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentExecutedActivitiesPercentualTableDataBuilder.AgentExecutedActivitiesPercentualTableDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentExecutedTasksDataBuilder.AgentExecutedTasksDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentPerformanceDataBuilder.AgentPerformanceDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentTaskAgendaDataBuilder.AgentTaskAgendaDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentTasksBySituation.AgentTasksBySituation()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentTasksBySituationTable.AgentTasksBySituationTable()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentTasksPercentageBySituation.AgentTasksPercentageBySituation()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentWithPercentualTasksTableDataBuilder.AgentWithPercentualTasksTableDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentsManagementDataBuilder.AgentsManagementDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentsMobileVersionDataBuilder.AgentsMobileVersionDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentsWithExecutionsDataBuilder.AgentsWithExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentsWithLessBatteryDataBuilder.AgentsWithLessBatteryDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AgentsWithoutExecutionsDataBuilder.AgentsWithoutExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AllTasksDataBuilder.AllTasksDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AverageExecutedTasksPerAgentDataBuilder.AverageExecutedTasksPerAgentDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.AverageExecutionTimeDataBuilder.AverageExecutionTimeDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.CustomHistoryTableDataBuilder.CustomHistoryTableDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.DailyExecutedActivitiesDataBuilder.DailyExecutedActivitiesDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.HorizontalTimelineExecutionDataBuilder.HorizontalTimelineExecutionDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.ImageCollectedDataBuilder.ImageCollectedDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.ImageCollectedPerActivityDataBuilder.ImageCollectedPerActivityDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.LastExecutedTasksDataBuilder.LastExecutedTasksDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithAndWithoutExecutionsDataBuilder.LocalsWithAndWithoutExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithCheckoutExecutedDataBuilder.LocalsWithCheckoutExecutedDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithExecutionsDataBuilder.LocalsWithExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithTasksDataBuilder.LocalsWithTasksDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.LocalsWithoutExecuionsDataBuilder.LocalsWithoutExecuionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.MapRouteExpectedXExecutedDataBuilder.MapRouteExpectedXExecutedDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.MapTaskExecutionDataBuilder.MapTaskExecutionDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.NextTasksForExecutionDataBuilder.NextTasksForExecutionDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.OnlineOfflineAgentsDataBuilder.OnlineOfflineAgentsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithAndWithoutExecutionsDataBuilder.PeopleWithAndWithoutExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedActivitiesDataBuilder.PeopleWithExecutedActivitiesDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithExecutedTasksDataBuilder.PeopleWithExecutedTasksDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.PeopleWithTasksDataBuilder.PeopleWithTasksDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TaskExecutedInWeekDataBuilder.TaskExecutedInWeekDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TaskExecutionGaugeDataBuilder.TaskExecutionGaugeDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TaskExecutionsPerTeamDataBuilder.TaskExecutionsPerTeamDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TaskExecutionsPerTimeDataBuilder.TaskExecutionsPerTimeDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksCancelledDataBuilder.TasksCancelledDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksInFieldDataBuilder.TasksInFieldDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksInPreparationDataBuilder.TasksInPreparationDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksPendingDataBuilder.TasksPendingDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksPerSituationDataBuilder.TasksPerSituationDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksReturnedDataBuilder.TasksReturnedDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TasksWithoutCheckOutDataBuilder.TasksWithoutCheckOutDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TeamAgentLogDataBuilder.TeamAgentLogDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TeamsManagementDataBuilder.TeamsManagementDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TimelineExecutionDataBuilder.TimelineExecutionDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TopFiveVisitedLocalsDataBuilder.TopFiveVisitedLocalsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TotalActivityExecutionsDataBuilder.TotalActivityExecutionsDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.TotalDistancePerDayDataBuilder.TotalDistancePerDayDataBuilder()",2,1,0,0,0
"me.umov.refill.builder.widget.VisitedLocalsDataBuilder.VisitedLocalsDataBuilder()",2,1,0,0,0
"me.umov.refill.fixture.ActivityFieldFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.ActivityFieldFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.CardDataFixture.CardDataFixture()",2,1,0,0,0
"me.umov.refill.fixture.CardDataFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.CardDataFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.CustomColumnsFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.CustomColumnsFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.FieldFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.FieldFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.GraphicCacheFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.GraphicCacheFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.GraphicFilterFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.GraphicFilterFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.GraphicFixture.GraphicFixture()",2,1,0,0,0
"me.umov.refill.fixture.GraphicFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.GraphicFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.GraphicGroupFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.GraphicGroupFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.GraphicIconFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.GraphicIconFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.GraphicMetricFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.GraphicMetricFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.MarkerFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.MarkerFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.MediaFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.MediaFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.OnlineFilterFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.OnlineFilterFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.OnlineFilterOptionFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.OnlineFilterOptionFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.RouteFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.RouteFixture.get()",2,1,0,0,0
"me.umov.refill.fixture.TableColumnDataFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.TestModelFixture.build()",2,1,0,0,0
"me.umov.refill.fixture.TestModelFixture.get()",2,1,0,0,0
"me.umov.refill.injection.SessionFactoryManager.getChartSessionFactory()",2,1,0,0,0
"me.umov.refill.injection.SessionFactoryManager.getOperationSessionFactory()",2,1,0,0,0
"me.umov.refill.injection.SessionFactoryManager.getSessionFactories()",2,1,0,0,0
"me.umov.refill.injection.SessionFactoryProvider.get()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.AgentDataRow()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.getId()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.getLogin()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.getMail()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.getMetrics()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.getName()",2,1,0,0,0
"me.umov.refill.model.AgentDataRow.getPhone()",2,1,0,0,0
"me.umov.refill.model.ChartData.ChartData()",2,1,0,0,0
"me.umov.refill.model.ChartData.getLegendAtBottom()",2,1,0,0,0
"me.umov.refill.model.ChartData.getObservation()",2,1,0,0,0
"me.umov.refill.model.ChartData.getPeriodLegend()",2,1,0,0,0
"me.umov.refill.model.ChartData.getRotated()",2,1,0,0,0
"me.umov.refill.model.ChartData.getSeriesType()",2,1,0,0,0
"me.umov.refill.model.ChartData.getShowLegend()",2,1,0,0,0
"me.umov.refill.model.ChartData.getTitle()",2,1,0,0,0
"me.umov.refill.model.GraphicDataRow.getContextKey()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getBindingName()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getBindingValue()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getCastType()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getDescription()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getEntity()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getField()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getGraphic()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getOnlineFilterType()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getOperator()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.getValue()",2,1,0,0,0
"me.umov.refill.model.GraphicFilter.isUseBinding()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.GraphicGroup()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getAdditionalField()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getDateField()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getDescription()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getEntity()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getEntityField()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getGraphic()",2,1,0,0,0
"me.umov.refill.model.GraphicGroup.getReferenceEntity()",2,1,0,0,0
"me.umov.refill.model.GraphicIcon.getGraphic()",2,1,0,0,0
"me.umov.refill.model.GraphicIcon.getIdentifier()",2,1,0,0,0
"me.umov.refill.model.GraphicIcon.getMedia()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getDescription()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getEntity()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getEntityField()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getGraphic()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getOperation()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getOrder()",2,1,0,0,0
"me.umov.refill.model.GraphicMetric.getReferenceEntity()",2,1,0,0,0
"me.umov.refill.model.Media.getId()",2,1,0,0,0
"me.umov.refill.model.Media.getPublicUrl()",2,1,0,0,0
"me.umov.refill.model.Metric.getIdentifier()",2,1,0,0,0
"me.umov.refill.model.Metric.getValue()",2,1,0,0,0
"me.umov.refill.model.Metric.getX()",2,1,0,0,0
"me.umov.refill.model.Metric.getY()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.getFilterType()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.getLabel()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.getName()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.getOptions()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.getType()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.getValues()",2,1,0,0,0
"me.umov.refill.model.OnlineFilter.isMandatory()",2,1,0,0,0
"me.umov.refill.model.OnlineFilterOption.getKey()",2,1,0,0,0
"me.umov.refill.model.OnlineFilterOption.getTeam()",2,1,0,0,0
"me.umov.refill.model.OnlineFilterOption.getValue()",2,1,0,0,0
"me.umov.refill.model.ScheduleDBViewEnvironment.getClientId()",2,1,0,0,0
"me.umov.refill.model.TableData.getColumns()",2,1,0,0,0
"me.umov.refill.model.TableData.getCustomFontSize()",2,1,0,0,0
"me.umov.refill.model.TableData.getDatasource()",2,1,0,0,0
"me.umov.refill.model.TableData.getRowAction()",2,1,0,0,0
"me.umov.refill.model.TableData.getTitle()",2,1,0,0,0
"me.umov.refill.model.TestModel.getModelAttribute()",2,1,0,0,0
"me.umov.refill.model.TestModel.getModelsList()",2,1,0,0,0
"me.umov.refill.model.TestModel.getModelsMap()",2,1,0,0,0
"me.umov.refill.model.TestModel.getName()",2,1,0,0,0
"me.umov.refill.model.activity.ActivityField.getId()",2,1,0,0,0
"me.umov.refill.model.activity.ActivityField.getName()",2,1,0,0,0
"me.umov.refill.model.activity.ActivityField.getType()",2,1,0,0,0
"me.umov.refill.model.column.Field.getAgreggationCastType()",2,1,0,0,0
"me.umov.refill.model.column.Field.getCaption()",2,1,0,0,0
"me.umov.refill.model.column.Field.getColumn()",2,1,0,0,0
"me.umov.refill.model.column.Field.getOperation()",2,1,0,0,0
"me.umov.refill.model.column.Field.getOrder()",2,1,0,0,0
"me.umov.refill.model.column.Field.getType()",2,1,0,0,0
"me.umov.refill.model.customfield.CustomField.getDescription()",2,1,0,0,0
"me.umov.refill.model.customfield.CustomField.getSubtype()",2,1,0,0,0
"me.umov.refill.model.customfield.CustomField.getType()",2,1,0,0,0
"me.umov.refill.model.customfield.CustomFieldSoyDTO.getClientId()",2,1,0,0,0
"me.umov.refill.model.customfield.CustomFieldSoyDTO.getCustomFieldIds()",2,1,0,0,0
"me.umov.refill.model.map.Route.getClientId()",2,1,0,0,0
"me.umov.refill.model.map.Route.getDescription()",2,1,0,0,0
"me.umov.refill.model.map.Route.getFirstPlace()",2,1,0,0,0
"me.umov.refill.model.map.Route.getId()",2,1,0,0,0
"me.umov.refill.model.map.Route.isValid()",2,1,0,0,0
"me.umov.refill.persistence.BooleanCharacterType.BooleanCharacterType()",2,1,0,0,0
"me.umov.refill.persistence.MarkerResultTransformer.get()",2,1,0,0,0
"me.umov.refill.persistence.OrderBySqlFormula.toString()",2,1,0,0,0
"me.umov.refill.persistence.RouteTransportModeTransformer.get()",2,1,0,0,0
"me.umov.refill.types.handler.LongTypeHandler.LongTypeHandler()",2,1,0,0,0
"me.umov.refill.validator.MarkerValidator.get()",2,1,0,0,0
"me.umov.refill.validator.RouteValidator.get()",2,1,0,0,0
"me.umov.refill.model.GraphicDataRow.setId(Long id)",1,1,0,0,1
"me.umov.refill.model.GraphicFilter.GraphicFilter()",1,1,0,0,0
"me.umov.refill.model.activity.ActivityField.ActivityField()",1,1,0,0,0
"me.umov.refill.model.column.Field.Field()",1,1,0,0,0
"me.umov.refill.geo.GeoProcessor.route(Long clientId, List<Marker> markers, RouteTransportMode transportMode)",0,1,0,0,3
"me.umov.refill.builder.GraphicDataBuilder.buildCacheData(Graphic graphic, GraphicCache currentCache)",0,1,0,0,2
"me.umov.refill.builder.widget.customtable.ColumnDataBuilder.getColumnData(CustomColumns customColumns, Long clientId)",0,1,0,0,2
"me.umov.refill.geo.GeoProcessor.route(Route route)",0,1,0,0,1
"me.umov.refill.model.Model.setId(T id)",0,1,0,0,1
"me.umov.refill.types.handler.FilterTypeHandler.getValue(OnlineFilter onlineFilter)",0,1,0,0,1
"me.umov.refill.validator.Validator.isValid(T value)",0,1,0,0,1
"me.umov.refill.builder.widget.AbstractTableDataBuilder.getColumns()",0,1,0,0,0
"me.umov.refill.builder.widget.AbstractTableDataBuilder.getTitle()",0,1,0,0,0
"me.umov.refill.model.GraphicMetric.GraphicMetric()",0,1,0,0,0
"me.umov.refill.model.Model.getId()",0,1,0,0,0
"me.umov.refill.model.OnlineFilter.OnlineFilter()",0,1,0,0,0
"me.umov.refill.model.OnlineFilterOption.OnlineFilterOption()",0,1,0,0,0
"me.umov.refill.model.TestModel.TestModel()",0,1,0,0,0
"me.umov.refill.model.map.Route.Route()",0,1,0,0,0
"me.umov.refill.service.AbstractService.getDaoInstance()",0,1,0,0,0
"me.umov.refill.types.handler.FilterTypeHandler.allowBinding()",0,1,0,0,0
"me.umov.refill.types.handler.FilterTypeHandler.getCastType()",0,1,0,0,0
